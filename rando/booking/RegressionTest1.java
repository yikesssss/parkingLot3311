package rando.booking;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        parkingSpot2.freeSpot();
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        booking.CancelCommand cancelCommand22 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand22.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand91 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand94 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.Class<?> wildcardClass20 = bookingSystem3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSpot15.detach((booking.Observer) bookingSystem35);
        parkingSpot15.occupySpot("CANCEL");
        parkingSensor14.update((booking.Subject) parkingSpot15);
        bookingSystem9.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSensor47.update((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        parkingSpot48.detach((booking.Observer) parkingSensor63);
        parkingSpot48.freeSpot();
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem9.update((booking.Subject) parkingSpot48);
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        booking.ParkingSpot parkingSpot93 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot93);
        bookingSystem92.update((booking.Subject) parkingSpot93);
        parkingSpot93.freeSpot();
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot93);
        parkingSpot48.detach((booking.Observer) bookingSystem97);
        java.lang.String str99 = parkingSpot48.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "" + "'", str99, "");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType27);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver12, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        booking.UserType userType46 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver36, "hi!", "hi!", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver36, "", "", (int) (short) 1, userType51);
        bookingReceiver12.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType51);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) 'a', userType51);
        java.lang.String str55 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSensor44.update((booking.Subject) parkingSpot71);
        parkingSpot71.freeSpot();
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        bookingSystem51.update((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot52.detach((booking.Observer) bookingSystem60);
        parkingSpot52.freeSpot();
        parkingSensor46.update((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        parkingSensor70.update((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot85);
        parkingSpot71.detach((booking.Observer) parkingSensor86);
        boolean boolean88 = parkingSpot71.isOccupied();
        parkingSensor46.update((booking.Subject) parkingSpot71);
        boolean boolean90 = parkingSpot71.isOccupied();
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (short) 100, userType21);
        bookCommand23.doAction();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.CancelCommand cancelCommand3 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        // The following exception was thrown during execution in test generation
        try {
            cancelCommand3.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.cancelBooking(String, String)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        java.lang.String str35 = parkingSpot15.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver25, "CANCEL", "CANCEL", (int) (short) 1, userType52);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType52);
        double double56 = bookingReceiver0.getDeposit();
        java.lang.String str57 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "BOOK" + "'", str57, "BOOK");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        extendCommand49.doAction();
        extendCommand49.doAction();
        extendCommand49.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot50.detach((booking.Observer) bookingSystem70);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        bookingSystem70.update((booking.Subject) parkingSpot77);
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot92 = new booking.ParkingSpot();
        parkingSensor91.update((booking.Subject) parkingSpot92);
        parkingSensor49.update((booking.Subject) parkingSpot92);
        boolean boolean95 = parkingSpot92.isOccupied();
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot92);
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot92);
        booking.Subject subject98 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingSystem97.update(subject98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        bookingSystem30.update((booking.Subject) parkingSpot31);
        parkingSpot23.detach((booking.Observer) bookingSystem30);
        parkingSpot10.detach((booking.Observer) bookingSystem30);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        bookingSystem30.update((booking.Subject) parkingSpot37);
        boolean boolean51 = parkingSpot37.isOccupied();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        parkingSpot37.occupySpot("BOOK");
        parkingSensor9.update((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSensor57.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        parkingSensor73.update((booking.Subject) parkingSpot74);
        parkingSpot58.detach((booking.Observer) parkingSensor73);
        booking.ParkingSensor parkingSensor89 = new booking.ParkingSensor((booking.Subject) parkingSpot58);
        parkingSensor9.update((booking.Subject) parkingSpot58);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem4 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor6 = new booking.ParkingSensor((booking.Subject) parkingSpot5);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        bookingSystem14.update((booking.Subject) parkingSpot15);
        parkingSpot7.detach((booking.Observer) bookingSystem14);
        parkingSensor6.update((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor22 = new booking.ParkingSensor((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        bookingSystem30.update((booking.Subject) parkingSpot31);
        parkingSpot23.detach((booking.Observer) bookingSystem30);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSpot23.detach((booking.Observer) bookingSystem43);
        parkingSpot23.occupySpot("CANCEL");
        parkingSensor22.update((booking.Subject) parkingSpot23);
        parkingSensor6.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSensor6.update((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSpot54.detach((booking.Observer) bookingSystem63);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot70.detach((booking.Observer) bookingSystem77);
        parkingSpot54.detach((booking.Observer) bookingSystem77);
        bookingSystem4.update((booking.Subject) parkingSpot54);
        java.lang.String str85 = parkingSpot54.getLicensePlate();
        java.lang.String str86 = parkingSpot54.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        parkingSpot11.detach((booking.Observer) bookingSystem31);
        parkingSpot11.occupySpot("CANCEL");
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        parkingSpot11.attach((booking.Observer) bookingSystem61);
        parkingSpot4.attach((booking.Observer) bookingSystem61);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        double double89 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-8.0d) + "'", double89 == (-8.0d));
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        parkingSensor77.update((booking.Subject) parkingSpot78);
        parkingSpot62.detach((booking.Observer) parkingSensor77);
        parkingSpot33.detach((booking.Observer) parkingSensor77);
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        parkingSpot15.attach((booking.Observer) bookingSystem94);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot15);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 10, userType21);
        bookCommand23.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getAmount();
        double double48 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSpot27.detach((booking.Observer) bookingSystem47);
        parkingSpot27.occupySpot("CANCEL");
        parkingSensor26.update((booking.Subject) parkingSpot27);
        parkingSensor10.update((booking.Subject) parkingSpot27);
        boolean boolean58 = parkingSpot27.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor71 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot70.freeSpot();
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        bookingSystem3.update((booking.Subject) parkingSpot70);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.freeSpot();
        boolean boolean22 = parkingSpot20.isOccupied();
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot28.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        parkingSpot37.occupySpot("hi!");
        parkingSpot37.occupySpot("hi!");
        parkingSpot37.occupySpot("");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSensor23.update((booking.Subject) parkingSpot37);
        parkingSpot2.detach((booking.Observer) parkingSensor23);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        boolean boolean15 = parkingSpot10.isOccupied();
        parkingSpot10.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot66.detach((booking.Observer) bookingSystem73);
        boolean boolean79 = parkingSpot66.isOccupied();
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        parkingSpot0.attach((booking.Observer) bookingSystem80);
        boolean boolean82 = parkingSpot0.isOccupied();
        boolean boolean83 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        bookingReceiver0.cancelBooking("EXTEND", "");
        double double19 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        java.lang.String str73 = bookingReceiver0.getAction();
        double double74 = bookingReceiver0.getAmount();
        java.lang.String str75 = bookingReceiver0.getAction();
        java.lang.Class<?> wildcardClass76 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "BOOK" + "'", str73, "BOOK");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-8.0d) + "'", double74 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "BOOK" + "'", str75, "BOOK");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSensor57.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        parkingSpot58.detach((booking.Observer) parkingSensor73);
        bookingSystem50.update((booking.Subject) parkingSpot58);
        parkingSpot58.freeSpot();
        parkingSensor42.update((booking.Subject) parkingSpot58);
        boolean boolean78 = parkingSpot58.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        parkingSpot0.detach((booking.Observer) bookingSystem11);
        boolean boolean18 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType27);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver12, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        booking.UserType userType46 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver36, "hi!", "hi!", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver36, "", "", (int) (short) 1, userType51);
        bookingReceiver12.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType51);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) 'a', userType51);
        extendCommand54.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        java.lang.Class<?> wildcardClass29 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        extendCommand40.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        booking.BookingReceiver bookingReceiver80 = null;
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        java.lang.String str85 = bookingReceiver84.getAction();
        booking.UserType userType89 = null;
        booking.ExtendCommand extendCommand90 = new booking.ExtendCommand(bookingReceiver84, "hi!", "", 100, userType89);
        booking.UserType userType94 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand95 = new booking.BookCommand(bookingReceiver84, "hi!", "hi!", 100, userType94);
        booking.ExtendCommand extendCommand96 = new booking.ExtendCommand(bookingReceiver80, "BOOK", "", (int) (short) 0, userType94);
        double double97 = bookingReceiver0.getRate(userType94);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.FACULTY + "'", userType94.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 8.0d + "'", double97 == 8.0d);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        bookingReceiver18.cancelBooking("hi!", "hi!");
        double double22 = bookingReceiver18.getAmount();
        bookingReceiver18.cancelBooking("EXTEND", "hi!");
        java.lang.String str26 = bookingReceiver18.getAction();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        bookingReceiver30.cancelBooking("hi!", "hi!");
        booking.UserType userType34 = booking.UserType.STUDENT;
        double double35 = bookingReceiver30.getRate(userType34);
        booking.CancelCommand cancelCommand38 = new booking.CancelCommand(bookingReceiver30, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        bookingReceiver42.cancelBooking("hi!", "hi!");
        bookingReceiver42.cancelBooking("", "");
        booking.UserType userType49 = booking.UserType.STUDENT;
        double double50 = bookingReceiver42.getRate(userType49);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver30, "", "hi!", (int) '#', userType49);
        bookingReceiver18.bookSpace("", "hi!", (int) 'a', userType49);
        bookingReceiver0.extendBooking("", "", (int) (byte) 100, userType49);
        java.lang.String str54 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CANCEL" + "'", str26, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.STUDENT + "'", userType34.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 5.0d + "'", double35 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.STUDENT + "'", userType49.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "EXTEND" + "'", str54, "EXTEND");
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getDeposit();
        booking.UserType userType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        boolean boolean4 = parkingSpot0.isOccupied();
        java.lang.Class<?> wildcardClass5 = parkingSpot0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        parkingSpot27.freeSpot();
        parkingSpot27.freeSpot();
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot27.occupySpot("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: License plate must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSpot32.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot61.detach((booking.Observer) bookingSystem68);
        parkingSensor60.update((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot61.detach((booking.Observer) parkingSensor76);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        parkingSpot32.freeSpot();
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        parkingSpot2.detach((booking.Observer) bookingSystem95);
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot2);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        java.lang.String str87 = bookingReceiver80.getAction();
        booking.UserType userType91 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver80, "hi!", "hi!", (int) (byte) 0, userType91);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver76, "", "", (int) (byte) 100, userType91);
        double double94 = bookingReceiver0.getRate(userType91);
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "", "");
        double double98 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.NON_FACULTY + "'", userType91.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        java.lang.String str25 = parkingSpot19.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot2.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        bookingSystem58.update((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        bookingSystem65.update((booking.Subject) parkingSpot66);
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot72.freeSpot();
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        boolean boolean77 = parkingSpot72.isOccupied();
        bookingSystem58.update((booking.Subject) parkingSpot72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker3 = new booking.CommandInvoker();
        commandInvoker3.executeCommand();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        java.lang.String str6 = bookingReceiver5.getAction();
        booking.UserType userType10 = null;
        booking.ExtendCommand extendCommand11 = new booking.ExtendCommand(bookingReceiver5, "hi!", "", 100, userType10);
        java.lang.String str12 = bookingReceiver5.getAction();
        booking.UserType userType16 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver5, "hi!", "hi!", (int) (byte) 0, userType16);
        extendCommand17.doAction();
        commandInvoker3.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        bookCommand31.doAction();
        commandInvoker3.setCommand((booking.ICommand) bookCommand31);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        booking.UserType userType54 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver44, "hi!", "hi!", 100, userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        bookingReceiver44.extendBooking("", "", (int) 'a', userType63);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver34, "", "", 0, userType63);
        commandInvoker3.setCommand((booking.ICommand) extendCommand66);
        extendCommand66.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand66);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        booking.UserType userType80 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver70, "hi!", "hi!", 100, userType80);
        bookCommand81.doAction();
        bookCommand81.doAction();
        bookCommand81.doAction();
        bookCommand81.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand81);
        java.lang.Class<?> wildcardClass87 = bookCommand81.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.NON_FACULTY + "'", userType16.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        booking.UserType userType17 = booking.UserType.STUDENT;
        double double18 = bookingReceiver13.getRate(userType17);
        double double19 = bookingReceiver13.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        double double22 = bookingReceiver20.getDeposit();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        java.lang.String str37 = bookingReceiver30.getAction();
        booking.UserType userType41 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver30, "hi!", "hi!", (int) (byte) 0, userType41);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver26, "", "", (int) (byte) 100, userType41);
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver26, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.UserType userType65 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver50, "", "", (int) (short) 1, userType65);
        bookingReceiver26.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType65);
        bookingReceiver20.extendBooking("CANCEL", "hi!", (-1), userType65);
        double double69 = bookingReceiver13.getRate(userType65);
        bookingReceiver0.extendBooking("BOOK", "BOOK", (int) (byte) 10, userType65);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.STUDENT + "'", userType17.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.NON_FACULTY + "'", userType41.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 8.0d + "'", double69 == 8.0d);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        java.lang.String str11 = parkingSpot4.getLicensePlate();
        booking.Observer observer12 = null;
        parkingSpot4.detach(observer12);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("hi!");
        parkingSpot4.freeSpot();
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        bookingReceiver53.cancelBooking("hi!", "hi!");
        bookingReceiver53.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.UserType userType64 = booking.UserType.FACULTY;
        bookingReceiver60.bookSpace("", "", 100, userType64);
        double double66 = bookingReceiver53.getRate(userType64);
        bookingReceiver0.extendBooking("CANCEL", "EXTEND", (-1), userType64);
        java.lang.String str68 = bookingReceiver0.getAction();
        booking.UserType userType72 = null;
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "hi!", (int) 'a', userType72);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.0d + "'", double66 == 8.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "EXTEND" + "'", str68, "EXTEND");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        double double18 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        bookingReceiver0.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        double double28 = bookingReceiver15.getAmount();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        bookingReceiver32.cancelBooking("hi!", "hi!");
        booking.UserType userType36 = booking.UserType.STUDENT;
        double double37 = bookingReceiver32.getRate(userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver15, "EXTEND", "", (int) (byte) 10, userType36);
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver0, "hi!", "BOOK", (int) (short) 1, userType36);
        java.lang.String str40 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.STUDENT + "'", userType36.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CANCEL" + "'", str40, "CANCEL");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        bookingSystem6.update((booking.Subject) parkingSpot7);
        parkingSpot7.freeSpot();
        java.lang.String str12 = parkingSpot7.getLicensePlate();
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        parkingSpot7.detach((booking.Observer) parkingSensor29);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSensor45.update((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        parkingSpot46.detach((booking.Observer) parkingSensor61);
        bookingSystem38.update((booking.Subject) parkingSpot46);
        parkingSpot46.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        bookingSystem69.update((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot70.detach((booking.Observer) bookingSystem78);
        parkingSpot46.attach((booking.Observer) bookingSystem78);
        parkingSpot46.freeSpot();
        parkingSensor29.update((booking.Subject) parkingSpot46);
        parkingSpot0.detach((booking.Observer) parkingSensor29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        booking.UserType userType64 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand65 = new booking.BookCommand(bookingReceiver54, "hi!", "hi!", 100, userType64);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        booking.UserType userType85 = booking.UserType.FACULTY;
        bookingReceiver81.bookSpace("", "", 100, userType85);
        bookingReceiver66.extendBooking("", "", (int) 'a', userType85);
        double double88 = bookingReceiver54.getRate(userType85);
        booking.UserType userType89 = booking.UserType.VISITOR;
        double double90 = bookingReceiver54.getRate(userType89);
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) 100, userType89);
        java.lang.String str92 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.FACULTY + "'", userType85.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 8.0d + "'", double88 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.VISITOR + "'", userType89.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 15.0d + "'", double90 == 15.0d);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "EXTEND" + "'", str92, "EXTEND");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSpot55.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot55);
        parkingSpot55.freeSpot();
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        java.lang.String str6 = bookingReceiver0.getAction();
        java.lang.Class<?> wildcardClass7 = bookingReceiver0.getClass();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CANCEL" + "'", str6, "CANCEL");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        parkingSpot0.occupySpot("CANCEL");
        parkingSpot0.occupySpot("EXTEND");
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        boolean boolean32 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.UserType userType38 = booking.UserType.VISITOR;
        bookingReceiver0.extendBooking("", "hi!", (int) '#', userType38);
        java.lang.String str40 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        bookingReceiver44.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        double double57 = bookingReceiver44.getRate(userType55);
        booking.UserType userType61 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver44, "BOOK", "", (int) '#', userType61);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver0, "", "CANCEL", (int) 'a', userType61);
        double double64 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.VISITOR + "'", userType38.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "EXTEND" + "'", str40, "EXTEND");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 8.0d + "'", double57 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.VISITOR + "'", userType61.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 525.0d + "'", double64 == 525.0d);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        boolean boolean49 = parkingSpot18.isOccupied();
        booking.Observer observer50 = null;
        parkingSpot18.attach(observer50);
        java.lang.String str52 = parkingSpot18.getLicensePlate();
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        bookingSystem64.update((booking.Subject) parkingSpot65);
        parkingSpot57.detach((booking.Observer) bookingSystem64);
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        parkingSpot18.detach((booking.Observer) bookingSystem73);
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot18.freeSpot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.Observer.update(booking.Subject)\" because \"obs\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        bookingSystem24.update((booking.Subject) parkingSpot31);
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        parkingSpot31.occupySpot("EXTEND");
        bookingSystem3.update((booking.Subject) parkingSpot31);
        java.lang.String str51 = parkingSpot31.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        booking.CancelCommand cancelCommand54 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        java.lang.Class<?> wildcardClass55 = cancelCommand54.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver0.bookSpace("hi!", "BOOK", (int) (short) 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver46, "", "", (int) (byte) 100, userType61);
        java.lang.String str64 = bookingReceiver46.getAction();
        double double65 = bookingReceiver46.getAmount();
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        booking.UserType userType88 = booking.UserType.FACULTY;
        bookingReceiver84.bookSpace("", "", 100, userType88);
        bookingReceiver69.extendBooking("", "", (int) 'a', userType88);
        bookingReceiver46.bookSpace("hi!", "BOOK", (int) (short) 0, userType88);
        double double92 = bookingReceiver0.getRate(userType88);
        booking.CancelCommand cancelCommand95 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.0d + "'", double92 == 8.0d);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand84 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        java.lang.String str85 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-8.0d) + "'", double81 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "BOOK" + "'", str85, "BOOK");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        parkingSpot32.freeSpot();
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor37 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        bookingSystem45.update((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) bookingSystem45);
        parkingSensor37.update((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSensor53.update((booking.Subject) parkingSpot54);
        parkingSpot38.detach((booking.Observer) parkingSensor53);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        parkingSensor70.update((booking.Subject) parkingSpot71);
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        parkingSpot38.attach((booking.Observer) parkingSensor85);
        parkingSpot35.attach((booking.Observer) parkingSensor85);
        parkingSpot32.attach((booking.Observer) parkingSensor85);
        parkingSpot32.occupySpot("EXTEND");
        parkingSensor1.update((booking.Subject) parkingSpot32);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        java.lang.Class<?> wildcardClass79 = bookCommand78.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        double double12 = bookingReceiver10.getDeposit();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver16, "", "", (int) (byte) 100, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        bookingReceiver16.bookSpace("hi!", "hi!", (int) (short) -1, userType47);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver10, "EXTEND", "BOOK", (int) (byte) -1, userType47);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        bookingReceiver54.cancelBooking("hi!", "hi!");
        bookingReceiver54.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.UserType userType65 = booking.UserType.FACULTY;
        bookingReceiver61.bookSpace("", "", 100, userType65);
        double double67 = bookingReceiver54.getRate(userType65);
        booking.UserType userType71 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver54, "BOOK", "", (int) '#', userType71);
        bookingReceiver10.extendBooking("", "hi!", (int) (short) 0, userType71);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) ' ', userType71);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 8.0d + "'", double67 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.VISITOR + "'", userType71.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        boolean boolean34 = parkingSpot15.isOccupied();
        parkingSpot15.occupySpot("BOOK");
        parkingSpot15.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        bookingReceiver72.cancelBooking("hi!", "hi!");
        bookingReceiver72.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        booking.UserType userType83 = booking.UserType.FACULTY;
        bookingReceiver79.bookSpace("", "", 100, userType83);
        double double85 = bookingReceiver72.getRate(userType83);
        booking.BookingReceiver bookingReceiver89 = new booking.BookingReceiver();
        bookingReceiver89.cancelBooking("hi!", "hi!");
        booking.UserType userType93 = booking.UserType.STUDENT;
        double double94 = bookingReceiver89.getRate(userType93);
        booking.BookCommand bookCommand95 = new booking.BookCommand(bookingReceiver72, "hi!", "CANCEL", (int) (short) 10, userType93);
        double double96 = bookingReceiver0.getRate(userType93);
        booking.CancelCommand cancelCommand99 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 8.0d + "'", double85 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.STUDENT + "'", userType93.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 5.0d + "'", double94 == 5.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 5.0d + "'", double96 == 5.0d);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.CancelCommand cancelCommand44 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", 1, userType31);
        bookCommand34.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot49.detach((booking.Observer) bookingSystem58);
        boolean boolean65 = parkingSpot49.isOccupied();
        java.lang.Class<?> wildcardClass66 = parkingSpot49.getClass();
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        double double7 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver11 = null;
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        double double17 = bookingReceiver15.getDeposit();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (byte) 100, userType36);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        booking.UserType userType52 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand53 = new booking.BookCommand(bookingReceiver42, "hi!", "hi!", 100, userType52);
        bookingReceiver21.bookSpace("hi!", "hi!", (int) (short) -1, userType52);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver15, "EXTEND", "BOOK", (int) (byte) -1, userType52);
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver11, "EXTEND", "BOOK", (int) (short) 1, userType52);
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) -1, userType52);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("CANCEL");
        parkingSpot4.freeSpot();
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("EXTEND");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver0, "CANCEL", "EXTEND", (int) '#', userType37);
        bookCommand40.doAction();
        bookCommand40.doAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        parkingSpot3.detach((booking.Observer) parkingSensor18);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot3.attach((booking.Observer) parkingSensor50);
        parkingSpot0.attach((booking.Observer) parkingSensor50);
        parkingSpot0.occupySpot("EXTEND");
        booking.Observer observer55 = null;
        parkingSpot0.attach(observer55);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        java.lang.String str48 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        bookingReceiver0.cancelBooking("hi!", "EXTEND");
        double double55 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "EXTEND" + "'", str48, "EXTEND");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        bookingReceiver14.cancelBooking("hi!", "hi!");
        bookingReceiver14.cancelBooking("", "");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver14.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 0, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        double double35 = bookingReceiver27.getDeposit();
        java.lang.String str36 = bookingReceiver27.getAction();
        bookingReceiver27.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.UserType userType65 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver55, "hi!", "hi!", 100, userType65);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        booking.UserType userType74 = booking.UserType.FACULTY;
        bookingReceiver70.bookSpace("", "", 100, userType74);
        bookingReceiver55.extendBooking("", "", (int) 'a', userType74);
        double double77 = bookingReceiver43.getRate(userType74);
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver27, "BOOK", "BOOK", (int) (byte) 10, userType74);
        bookingReceiver0.extendBooking("hi!", "", 1, userType74);
        java.lang.String str80 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 8.0d + "'", double77 == 8.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "EXTEND" + "'", str80, "EXTEND");
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        booking.CancelCommand cancelCommand21 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        java.lang.String str22 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CANCEL" + "'", str22, "CANCEL");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        java.lang.String str43 = bookingReceiver36.getAction();
        booking.UserType userType47 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver36, "hi!", "hi!", (int) (byte) 0, userType47);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver20, "CANCEL", "CANCEL", (int) (short) 1, userType47);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        double double76 = bookingReceiver53.getRate(userType75);
        bookingReceiver20.extendBooking("hi!", "", (int) (byte) -1, userType75);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", 0, userType75);
        bookingReceiver0.cancelBooking("", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.NON_FACULTY + "'", userType47.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver7 = null;
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        booking.BookCommand bookCommand17 = new booking.BookCommand(bookingReceiver7, "hi!", "", 0, userType15);
        bookingReceiver0.extendBooking("hi!", "BOOK", 1, userType15);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        booking.UserType userType37 = null;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver32, "hi!", "", 100, userType37);
        booking.UserType userType42 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver32, "hi!", "hi!", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.UserType userType51 = booking.UserType.FACULTY;
        bookingReceiver47.bookSpace("", "", 100, userType51);
        bookingReceiver32.extendBooking("", "", (int) 'a', userType51);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver22, "", "", 0, userType51);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver0, "BOOK", "", (int) (short) 0, userType51);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        double double20 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        bookingSystem5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        bookingSystem14.update((booking.Subject) parkingSpot15);
        parkingSpot6.detach((booking.Observer) bookingSystem14);
        parkingSpot0.attach((booking.Observer) bookingSystem14);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot49.detach((booking.Observer) bookingSystem58);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        java.lang.String str66 = parkingSpot49.getLicensePlate();
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        java.lang.String str77 = bookingReceiver0.getAction();
        double double78 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CANCEL" + "'", str77, "CANCEL");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = null;
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.UserType userType28 = booking.UserType.FACULTY;
        bookingReceiver24.bookSpace("", "", 100, userType28);
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver20, "hi!", "", 0, userType28);
        bookingReceiver0.bookSpace("", "BOOK", (int) (byte) 10, userType28);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        java.lang.String str46 = bookingReceiver39.getAction();
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver39, "hi!", "hi!", (int) (byte) 0, userType50);
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver35, "", "", (int) (byte) 100, userType50);
        java.lang.String str53 = bookingReceiver35.getAction();
        double double54 = bookingReceiver35.getAmount();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        bookingReceiver58.extendBooking("", "", (int) 'a', userType77);
        bookingReceiver35.bookSpace("hi!", "BOOK", (int) (short) 0, userType77);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) (short) 1, userType77);
        double double82 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 80.0d + "'", double82 == 80.0d);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSpot9.detach((booking.Observer) bookingSystem29);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        bookingSystem29.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot4.attach((booking.Observer) parkingSensor52);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot58.freeSpot();
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot58.detach((booking.Observer) bookingSystem70);
        parkingSpot58.occupySpot("CANCEL");
        parkingSensor52.update((booking.Subject) parkingSpot58);
        java.lang.String str80 = parkingSpot58.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "CANCEL" + "'", str80, "CANCEL");
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        java.lang.String str20 = bookingReceiver16.getAction();
        booking.BookingReceiver bookingReceiver21 = null;
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver21, "hi!", "", 0, userType29);
        double double32 = bookingReceiver16.getRate(userType29);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver16, "BOOK", "EXTEND", (int) (short) 10, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver11, "CANCEL", "hi!", (int) ' ', userType36);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) '#', userType36);
        extendCommand39.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CANCEL" + "'", str7, "CANCEL");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CANCEL" + "'", str20, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 8.0d + "'", double32 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        bookingReceiver5.cancelBooking("hi!", "hi!");
        java.lang.String str9 = bookingReceiver5.getAction();
        booking.BookingReceiver bookingReceiver10 = null;
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.UserType userType18 = booking.UserType.FACULTY;
        bookingReceiver14.bookSpace("", "", 100, userType18);
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver10, "hi!", "", 0, userType18);
        double double21 = bookingReceiver5.getRate(userType18);
        booking.UserType userType25 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver5, "BOOK", "EXTEND", (int) (short) 10, userType25);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) ' ', userType25);
        bookCommand27.doAction();
        bookCommand27.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType18 + "' != '" + booking.UserType.FACULTY + "'", userType18.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 8.0d + "'", double21 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        bookingSystem51.update((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot52.detach((booking.Observer) bookingSystem60);
        parkingSpot52.freeSpot();
        parkingSensor46.update((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        parkingSensor70.update((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot85);
        parkingSpot71.detach((booking.Observer) parkingSensor86);
        boolean boolean88 = parkingSpot71.isOccupied();
        parkingSensor46.update((booking.Subject) parkingSpot71);
        boolean boolean90 = parkingSpot71.isOccupied();
        java.lang.String str91 = parkingSpot71.getLicensePlate();
        parkingSpot71.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        java.lang.String str29 = bookingReceiver22.getAction();
        booking.UserType userType33 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver22, "hi!", "hi!", (int) (byte) 0, userType33);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver22, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        bookingReceiver41.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        double double54 = bookingReceiver41.getRate(userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        bookingReceiver58.cancelBooking("hi!", "hi!");
        booking.UserType userType62 = booking.UserType.STUDENT;
        double double63 = bookingReceiver58.getRate(userType62);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver41, "hi!", "CANCEL", (int) (short) 10, userType62);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        java.lang.String str75 = bookingReceiver68.getAction();
        booking.UserType userType79 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver68, "hi!", "hi!", (int) (byte) 0, userType79);
        double double81 = bookingReceiver68.getAmount();
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        bookingReceiver85.cancelBooking("hi!", "hi!");
        booking.UserType userType89 = booking.UserType.STUDENT;
        double double90 = bookingReceiver85.getRate(userType89);
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver68, "EXTEND", "", (int) (byte) 10, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver41, "BOOK", "CANCEL", (int) 'a', userType89);
        bookingReceiver22.extendBooking("EXTEND", "EXTEND", (int) (short) 10, userType89);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (-1), userType89);
        java.lang.String str95 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.NON_FACULTY + "'", userType33.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 8.0d + "'", double54 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.STUDENT + "'", userType62.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.NON_FACULTY + "'", userType79.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.STUDENT + "'", userType89.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5.0d + "'", double90 == 5.0d);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot0);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        bookingReceiver13.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        double double61 = bookingReceiver27.getRate(userType58);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", 100, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 1, userType58);
        bookCommand63.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        double double16 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        java.lang.String str60 = bookingReceiver53.getAction();
        booking.UserType userType64 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver53, "hi!", "hi!", (int) (byte) 0, userType64);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver37, "CANCEL", "CANCEL", (int) (short) 1, userType64);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        booking.UserType userType80 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver70, "hi!", "hi!", 100, userType80);
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        booking.UserType userType89 = booking.UserType.FACULTY;
        bookingReceiver85.bookSpace("", "", 100, userType89);
        bookingReceiver70.extendBooking("", "", (int) 'a', userType89);
        booking.UserType userType92 = booking.UserType.NON_FACULTY;
        double double93 = bookingReceiver70.getRate(userType92);
        bookingReceiver37.extendBooking("hi!", "", (int) (byte) -1, userType92);
        bookingReceiver20.extendBooking("", "", 100, userType92);
        bookingReceiver0.extendBooking("BOOK", "BOOK", (int) (short) -1, userType92);
        bookingReceiver0.cancelBooking("EXTEND", "BOOK");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.NON_FACULTY + "'", userType64.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.NON_FACULTY + "'", userType92.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        java.lang.Class<?> wildcardClass25 = parkingSpot19.getClass();
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        bookingSystem15.update((booking.Subject) parkingSpot16);
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot22);
        bookingSystem21.update((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSensor39.update((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot54);
        parkingSpot40.detach((booking.Observer) parkingSensor55);
        bookingSystem32.update((booking.Subject) parkingSpot40);
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        parkingSpot22.detach((booking.Observer) parkingSensor58);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        bookingSystem72.update((booking.Subject) parkingSpot73);
        parkingSpot64.detach((booking.Observer) bookingSystem72);
        parkingSpot64.freeSpot();
        parkingSensor58.update((booking.Subject) parkingSpot64);
        bookingSystem11.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot82.detach((booking.Observer) bookingSystem92);
        parkingSpot64.detach((booking.Observer) bookingSystem92);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        java.lang.String str14 = bookingReceiver0.getAction();
        java.lang.String str15 = bookingReceiver0.getAction();
        double double16 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CANCEL" + "'", str14, "CANCEL");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CANCEL" + "'", str15, "CANCEL");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        double double15 = bookingReceiver0.getDeposit();
        double double16 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        java.lang.String str24 = bookingReceiver20.getAction();
        booking.BookingReceiver bookingReceiver25 = null;
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver25, "hi!", "", 0, userType33);
        double double36 = bookingReceiver20.getRate(userType33);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "EXTEND", (int) (short) 10, userType40);
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) 'a', userType40);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.UserType userType53 = booking.UserType.STUDENT;
        double double54 = bookingReceiver46.getRate(userType53);
        bookingReceiver46.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        booking.UserType userType69 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver58, "hi!", "hi!", (int) (byte) 0, userType69);
        booking.CancelCommand cancelCommand73 = new booking.CancelCommand(bookingReceiver58, "hi!", "BOOK");
        bookingReceiver58.cancelBooking("CANCEL", "BOOK");
        double double77 = bookingReceiver58.getAmount();
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        bookingReceiver78.cancelBooking("hi!", "hi!");
        bookingReceiver78.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        booking.UserType userType89 = booking.UserType.FACULTY;
        bookingReceiver85.bookSpace("", "", 100, userType89);
        double double91 = bookingReceiver78.getRate(userType89);
        booking.UserType userType95 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand96 = new booking.ExtendCommand(bookingReceiver78, "BOOK", "", (int) '#', userType95);
        double double97 = bookingReceiver58.getRate(userType95);
        double double98 = bookingReceiver46.getRate(userType95);
        bookingReceiver0.extendBooking("BOOK", "hi!", (int) (byte) -1, userType95);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CANCEL" + "'", str24, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 8.0d + "'", double36 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.STUDENT + "'", userType53.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.NON_FACULTY + "'", userType69.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 8.0d + "'", double91 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType95 + "' != '" + booking.UserType.VISITOR + "'", userType95.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 15.0d + "'", double97 == 15.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 15.0d + "'", double98 == 15.0d);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        boolean boolean52 = parkingSpot10.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        bookingReceiver0.extendBooking("hi!", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        double double49 = bookingReceiver36.getRate(userType47);
        booking.UserType userType53 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver36, "BOOK", "", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver36, "CANCEL", "EXTEND", (int) '#', userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver36, "CANCEL", "CANCEL", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 10, userType90);
        extendCommand93.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 8.0d + "'", double49 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.VISITOR + "'", userType53.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        bookingReceiver43.bookSpace("hi!", "hi!", (int) (short) -1, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "", "", 1, userType74);
        double double78 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand81 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        bookingReceiver0.cancelBooking("hi!", "BOOK");
        booking.UserType userType88 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("", "hi!", (int) ' ', userType88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 80.0d + "'", double78 == 80.0d);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        booking.UserType userType26 = booking.UserType.STUDENT;
        double double27 = bookingReceiver22.getRate(userType26);
        double double28 = bookingReceiver22.getAmount();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        double double31 = bookingReceiver29.getDeposit();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        java.lang.String str46 = bookingReceiver39.getAction();
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver39, "hi!", "hi!", (int) (byte) 0, userType50);
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver35, "", "", (int) (byte) 100, userType50);
        booking.CancelCommand cancelCommand55 = new booking.CancelCommand(bookingReceiver35, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver59, "", "", (int) (short) 1, userType74);
        bookingReceiver35.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType74);
        bookingReceiver29.extendBooking("CANCEL", "hi!", (-1), userType74);
        double double78 = bookingReceiver22.getRate(userType74);
        double double79 = bookingReceiver0.getRate(userType74);
        double double80 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.STUDENT + "'", userType26.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 5.0d + "'", double27 == 5.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 8.0d + "'", double78 == 8.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 8.0d + "'", double79 == 8.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        boolean boolean59 = parkingSpot55.isOccupied();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        parkingSpot49.attach((booking.Observer) parkingSensor60);
        java.lang.Class<?> wildcardClass62 = parkingSpot49.getClass();
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        parkingSpot3.detach((booking.Observer) parkingSensor18);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot3.attach((booking.Observer) parkingSensor50);
        parkingSpot0.attach((booking.Observer) parkingSensor50);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.freeSpot();
        parkingSpot0.freeSpot();
        java.lang.Class<?> wildcardClass57 = parkingSpot0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        bookingSystem14.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        java.lang.String str20 = parkingSpot15.getLicensePlate();
        boolean boolean21 = parkingSpot15.isOccupied();
        parkingSensor10.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        parkingSpot23.freeSpot();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        parkingSpot29.attach((booking.Observer) parkingSensor76);
        parkingSpot26.attach((booking.Observer) parkingSensor76);
        parkingSpot23.attach((booking.Observer) parkingSensor76);
        parkingSpot23.occupySpot("EXTEND");
        parkingSensor10.update((booking.Subject) parkingSpot23);
        java.lang.Class<?> wildcardClass83 = parkingSensor10.getClass();
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        java.lang.String str50 = parkingSpot45.getLicensePlate();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        parkingSensor52.update((booking.Subject) parkingSpot53);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) parkingSensor67);
        parkingSpot45.freeSpot();
        parkingSpot45.occupySpot("CANCEL");
        parkingSpot45.freeSpot();
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        bookingSystem20.update((booking.Subject) parkingSpot45);
        boolean boolean75 = parkingSpot45.isOccupied();
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        parkingSpot88.occupySpot("hi!");
        bookingSystem87.update((booking.Subject) parkingSpot88);
        parkingSpot80.detach((booking.Observer) bookingSystem87);
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot45.attach((booking.Observer) bookingSystem79);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        java.lang.String str37 = bookingReceiver30.getAction();
        booking.UserType userType41 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver30, "hi!", "hi!", (int) (byte) 0, userType41);
        double double43 = bookingReceiver30.getAmount();
        java.lang.String str44 = bookingReceiver30.getAction();
        double double45 = bookingReceiver30.getDeposit();
        double double46 = bookingReceiver30.getDeposit();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        java.lang.String str54 = bookingReceiver50.getAction();
        booking.BookingReceiver bookingReceiver55 = null;
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        booking.BookCommand bookCommand65 = new booking.BookCommand(bookingReceiver55, "hi!", "", 0, userType63);
        double double66 = bookingReceiver50.getRate(userType63);
        booking.UserType userType70 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver50, "BOOK", "EXTEND", (int) (short) 10, userType70);
        booking.BookCommand bookCommand72 = new booking.BookCommand(bookingReceiver30, "EXTEND", "hi!", (int) 'a', userType70);
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        java.lang.String str77 = bookingReceiver76.getAction();
        booking.UserType userType81 = null;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver76, "hi!", "", 100, userType81);
        booking.UserType userType86 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver76, "hi!", "hi!", 100, userType86);
        booking.UserType userType91 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver76, "", "", (int) (short) 1, userType91);
        bookingReceiver30.extendBooking("CANCEL", "EXTEND", (int) (byte) 1, userType91);
        bookingReceiver0.extendBooking("hi!", "BOOK", 10, userType91);
        double double95 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("EXTEND", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.NON_FACULTY + "'", userType41.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CANCEL" + "'", str54, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.0d + "'", double66 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.FACULTY + "'", userType70.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.FACULTY + "'", userType91.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSpot51.detach((booking.Observer) bookingSystem71);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        bookingSystem71.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSensor1.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot95 = new booking.ParkingSpot();
        boolean boolean96 = parkingSpot95.isOccupied();
        parkingSensor94.update((booking.Subject) parkingSpot95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        boolean boolean45 = parkingSpot32.isOccupied();
        java.lang.String str46 = parkingSpot32.getLicensePlate();
        parkingSpot32.occupySpot("CANCEL");
        boolean boolean49 = parkingSpot32.isOccupied();
        parkingSpot32.occupySpot("BOOK");
        bookingSystem12.update((booking.Subject) parkingSpot32);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        double double89 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("EXTEND", "BOOK");
        java.lang.String str93 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "CANCEL" + "'", str93, "CANCEL");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        bookCommand28.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("");
        boolean boolean63 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        java.lang.String str51 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        java.lang.String str66 = bookingReceiver59.getAction();
        booking.UserType userType70 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver59, "hi!", "hi!", (int) (byte) 0, userType70);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver55, "", "", (int) (byte) 100, userType70);
        booking.CancelCommand cancelCommand75 = new booking.CancelCommand(bookingReceiver55, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        booking.UserType userType89 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver79, "hi!", "hi!", 100, userType89);
        booking.UserType userType94 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand95 = new booking.ExtendCommand(bookingReceiver79, "", "", (int) (short) 1, userType94);
        bookingReceiver55.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType94);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (byte) 0, userType94);
        double double98 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "EXTEND" + "'", str51, "EXTEND");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.NON_FACULTY + "'", userType70.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.FACULTY + "'", userType94.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 8.0d + "'", double98 == 8.0d);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        java.lang.String str29 = bookingReceiver25.getAction();
        booking.BookingReceiver bookingReceiver30 = null;
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        booking.UserType userType38 = booking.UserType.FACULTY;
        bookingReceiver34.bookSpace("", "", 100, userType38);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver30, "hi!", "", 0, userType38);
        double double41 = bookingReceiver25.getRate(userType38);
        bookingReceiver0.extendBooking("hi!", "CANCEL", (int) (short) 1, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        bookingReceiver43.extendBooking("hi!", "", 0, userType72);
        double double76 = bookingReceiver0.getRate(userType72);
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 8.0d + "'", double41 == 8.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot68.freeSpot();
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        extendCommand33.doAction();
        commandInvoker19.setCommand((booking.ICommand) extendCommand33);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver37, "BOOK", "CANCEL");
        commandInvoker19.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand61);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        bookingReceiver64.cancelBooking("hi!", "hi!");
        double double68 = bookingReceiver64.getAmount();
        bookingReceiver64.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver64, "EXTEND", "EXTEND");
        cancelCommand74.doAction();
        cancelCommand74.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand74);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        booking.UserType userType85 = booking.UserType.FACULTY;
        bookingReceiver81.bookSpace("", "", 100, userType85);
        bookingReceiver81.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand92 = new booking.CancelCommand(bookingReceiver81, "CANCEL", "");
        cancelCommand92.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand92);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.FACULTY + "'", userType85.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        bookingReceiver13.cancelBooking("", "");
        booking.UserType userType20 = booking.UserType.STUDENT;
        double double21 = bookingReceiver13.getRate(userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        java.lang.String str36 = bookingReceiver29.getAction();
        booking.UserType userType40 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver29, "hi!", "hi!", (int) (byte) 0, userType40);
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver25, "", "", (int) (byte) 100, userType40);
        booking.CancelCommand cancelCommand45 = new booking.CancelCommand(bookingReceiver25, "hi!", "hi!");
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver25, "", "CANCEL", (int) (byte) 1, userType49);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver13, "EXTEND", "EXTEND", (int) (short) 1, userType49);
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver0, "CANCEL", "", (int) (byte) 0, userType49);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.STUDENT + "'", userType20.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.NON_FACULTY + "'", userType40.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        java.lang.String str6 = bookingReceiver5.getAction();
        booking.UserType userType10 = null;
        booking.ExtendCommand extendCommand11 = new booking.ExtendCommand(bookingReceiver5, "hi!", "", 100, userType10);
        java.lang.String str12 = bookingReceiver5.getAction();
        booking.UserType userType16 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver5, "hi!", "hi!", (int) (byte) 0, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver5, "CANCEL", "CANCEL", (int) (short) 1, userType32);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        java.lang.String str39 = bookingReceiver38.getAction();
        booking.UserType userType43 = null;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver38, "hi!", "", 100, userType43);
        booking.UserType userType48 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand49 = new booking.BookCommand(bookingReceiver38, "hi!", "hi!", 100, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        booking.UserType userType57 = booking.UserType.FACULTY;
        bookingReceiver53.bookSpace("", "", 100, userType57);
        bookingReceiver38.extendBooking("", "", (int) 'a', userType57);
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        double double61 = bookingReceiver38.getRate(userType60);
        bookingReceiver5.extendBooking("hi!", "", (int) (byte) -1, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        java.lang.String str77 = bookingReceiver70.getAction();
        booking.UserType userType81 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver70, "hi!", "hi!", (int) (byte) 0, userType81);
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver66, "", "", (int) (byte) 100, userType81);
        bookingReceiver5.bookSpace("CANCEL", "EXTEND", (int) (short) 0, userType81);
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (byte) -1, userType81);
        extendCommand85.doAction();
        extendCommand85.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.NON_FACULTY + "'", userType16.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.NON_FACULTY + "'", userType81.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 10, userType47);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) (byte) 1, userType84);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        double double92 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        boolean boolean49 = parkingSpot18.isOccupied();
        booking.Observer observer50 = null;
        parkingSpot18.attach(observer50);
        java.lang.String str52 = parkingSpot18.getLicensePlate();
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot18.freeSpot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.Observer.update(booking.Subject)\" because \"obs\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        parkingSpot0.occupySpot("CANCEL");
        java.lang.String str29 = parkingSpot0.getLicensePlate();
        parkingSpot0.occupySpot("CANCEL");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot29.occupySpot("CANCEL");
        java.lang.String str47 = parkingSpot29.getLicensePlate();
        parkingSensor26.update((booking.Subject) parkingSpot29);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker21 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (short) 1, userType37);
        commandInvoker21.setCommand((booking.ICommand) extendCommand38);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver40, "", "", 0, userType69);
        extendCommand72.doAction();
        commandInvoker21.setCommand((booking.ICommand) extendCommand72);
        commandInvoker0.setCommand((booking.ICommand) extendCommand72);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        java.lang.String str87 = bookingReceiver80.getAction();
        booking.UserType userType91 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver80, "hi!", "hi!", (int) (byte) 0, userType91);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver76, "", "", (int) (byte) 100, userType91);
        double double94 = bookingReceiver0.getRate(userType91);
        java.lang.String str95 = bookingReceiver0.getAction();
        double double96 = bookingReceiver0.getDeposit();
        double double97 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.NON_FACULTY + "'", userType91.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "CANCEL" + "'", str95, "CANCEL");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 8.0d + "'", double96 == 8.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 8.0d + "'", double97 == 8.0d);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.freeSpot();
        boolean boolean63 = parkingSpot61.isOccupied();
        parkingSpot61.freeSpot();
        bookingSystem40.update((booking.Subject) parkingSpot61);
        parkingSpot4.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.freeSpot();
        parkingSpot67.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        parkingSpot4.attach((booking.Observer) bookingSystem71);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        double double20 = bookingReceiver0.getAmount();
        double double21 = bookingReceiver0.getAmount();
        java.lang.String str22 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        booking.UserType userType38 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver27, "hi!", "hi!", (int) (byte) 0, userType38);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver23, "", "", (int) (byte) 100, userType38);
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver23, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        java.lang.String str52 = bookingReceiver51.getAction();
        booking.UserType userType56 = null;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver51, "hi!", "", 100, userType56);
        java.lang.String str58 = bookingReceiver51.getAction();
        booking.UserType userType62 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver51, "hi!", "hi!", (int) (byte) 0, userType62);
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver47, "", "", (int) (byte) 100, userType62);
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver47, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        java.lang.String str72 = bookingReceiver71.getAction();
        booking.UserType userType76 = null;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver71, "hi!", "", 100, userType76);
        booking.UserType userType81 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver71, "hi!", "hi!", 100, userType81);
        booking.UserType userType86 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver71, "", "", (int) (short) 1, userType86);
        bookingReceiver47.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType86);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver23, "EXTEND", "", (int) ' ', userType86);
        double double90 = bookingReceiver0.getRate(userType86);
        booking.UserType userType94 = null;
        booking.BookCommand bookCommand95 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) -1, userType94);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CANCEL" + "'", str22, "CANCEL");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.NON_FACULTY + "'", userType38.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.NON_FACULTY + "'", userType62.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.FACULTY + "'", userType81.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 8.0d + "'", double90 == 8.0d);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        bookingReceiver11.cancelBooking("hi!", "hi!");
        bookingReceiver11.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        booking.UserType userType22 = booking.UserType.FACULTY;
        bookingReceiver18.bookSpace("", "", 100, userType22);
        double double24 = bookingReceiver11.getRate(userType22);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        bookingReceiver28.cancelBooking("hi!", "hi!");
        booking.UserType userType32 = booking.UserType.STUDENT;
        double double33 = bookingReceiver28.getRate(userType32);
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver11, "hi!", "CANCEL", (int) (short) 10, userType32);
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) '4', userType32);
        extendCommand35.doAction();
        extendCommand35.doAction();
        extendCommand35.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 8.0d + "'", double24 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.STUDENT + "'", userType32.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 5.0d + "'", double33 == 5.0d);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        double double18 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.Class<?> wildcardClass22 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        java.lang.String str25 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        bookingReceiver29.cancelBooking("hi!", "hi!");
        bookingReceiver29.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        double double42 = bookingReceiver29.getRate(userType40);
        booking.UserType userType46 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver29, "BOOK", "", (int) '#', userType46);
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) (byte) 0, userType46);
        bookingReceiver0.cancelBooking("EXTEND", "");
        bookingReceiver0.cancelBooking("", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "EXTEND" + "'", str25, "EXTEND");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 8.0d + "'", double42 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.VISITOR + "'", userType46.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        java.lang.String str17 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        double double29 = bookingReceiver21.getDeposit();
        java.lang.String str30 = bookingReceiver21.getAction();
        bookingReceiver21.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver37 = null;
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        booking.UserType userType45 = booking.UserType.STUDENT;
        double double46 = bookingReceiver41.getRate(userType45);
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver37, "BOOK", "hi!", 0, userType45);
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver21, "CANCEL", "BOOK", (int) (short) 0, userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "", "CANCEL", (int) (short) 10, userType45);
        double double50 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CANCEL" + "'", str17, "CANCEL");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.STUDENT + "'", userType45.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 5.0d + "'", double46 == 5.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.freeSpot();
        boolean boolean34 = parkingSpot32.isOccupied();
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        boolean boolean80 = parkingSpot32.isOccupied();
        parkingSensor1.update((booking.Subject) parkingSpot32);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        java.lang.Class<?> wildcardClass84 = parkingSpot32.getClass();
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        booking.UserType userType36 = booking.UserType.FACULTY;
        bookingReceiver32.bookSpace("", "", 100, userType36);
        bookingReceiver17.extendBooking("", "", (int) 'a', userType36);
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        double double40 = bookingReceiver17.getRate(userType39);
        bookingReceiver17.cancelBooking("BOOK", "hi!");
        java.lang.String str44 = bookingReceiver17.getAction();
        double double45 = bookingReceiver17.getDeposit();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        double double51 = bookingReceiver49.getDeposit();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        java.lang.String str66 = bookingReceiver59.getAction();
        booking.UserType userType70 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver59, "hi!", "hi!", (int) (byte) 0, userType70);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver55, "", "", (int) (byte) 100, userType70);
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        java.lang.String str77 = bookingReceiver76.getAction();
        booking.UserType userType81 = null;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver76, "hi!", "", 100, userType81);
        booking.UserType userType86 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver76, "hi!", "hi!", 100, userType86);
        bookingReceiver55.bookSpace("hi!", "hi!", (int) (short) -1, userType86);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver49, "EXTEND", "BOOK", (int) (byte) -1, userType86);
        booking.ExtendCommand extendCommand90 = new booking.ExtendCommand(bookingReceiver17, "CANCEL", "", 0, userType86);
        booking.UserType userType94 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand95 = new booking.BookCommand(bookingReceiver17, "EXTEND", "EXTEND", (int) '#', userType94);
        bookCommand95.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand95);
        bookCommand95.doAction();
        bookCommand95.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CANCEL" + "'", str44, "CANCEL");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.NON_FACULTY + "'", userType70.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.STUDENT + "'", userType94.equals(booking.UserType.STUDENT));
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "hi!");
        booking.CancelCommand cancelCommand45 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        bookingReceiver49.cancelBooking("hi!", "hi!");
        bookingReceiver49.cancelBooking("", "");
        booking.UserType userType56 = booking.UserType.STUDENT;
        double double57 = bookingReceiver49.getRate(userType56);
        bookingReceiver49.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver64.getAmount();
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        bookingReceiver81.cancelBooking("hi!", "hi!");
        booking.UserType userType85 = booking.UserType.STUDENT;
        double double86 = bookingReceiver81.getRate(userType85);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver64, "EXTEND", "", (int) (byte) 10, userType85);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver49, "hi!", "BOOK", (int) (short) 1, userType85);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", (int) (short) 1, userType85);
        bookingReceiver0.cancelBooking("CANCEL", "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.STUDENT + "'", userType56.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 5.0d + "'", double57 == 5.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.STUDENT + "'", userType85.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.0d + "'", double86 == 5.0d);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        bookingReceiver7.cancelBooking("hi!", "hi!");
        double double11 = bookingReceiver7.getAmount();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        bookingReceiver15.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType50);
        bookingReceiver7.extendBooking("hi!", "hi!", (int) (byte) 10, userType50);
        double double55 = bookingReceiver0.getRate(userType50);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        bookingReceiver59.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        bookingReceiver71.cancelBooking("hi!", "hi!");
        booking.UserType userType75 = booking.UserType.STUDENT;
        double double76 = bookingReceiver71.getRate(userType75);
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver71, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        bookingReceiver83.cancelBooking("hi!", "hi!");
        bookingReceiver83.cancelBooking("", "");
        booking.UserType userType90 = booking.UserType.STUDENT;
        double double91 = bookingReceiver83.getRate(userType90);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver71, "", "hi!", (int) '#', userType90);
        booking.BookCommand bookCommand93 = new booking.BookCommand(bookingReceiver59, "hi!", "EXTEND", 1, userType90);
        booking.BookCommand bookCommand94 = new booking.BookCommand(bookingReceiver0, "hi!", "", (-1), userType90);
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "hi!", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 8.0d + "'", double55 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.STUDENT + "'", userType75.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5.0d + "'", double76 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.STUDENT + "'", userType90.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5.0d + "'", double91 == 5.0d);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSpot32.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        bookingSystem52.update((booking.Subject) parkingSpot59);
        parkingSpot2.attach((booking.Observer) bookingSystem52);
        parkingSpot2.occupySpot("BOOK");
        parkingSpot2.occupySpot("");
        parkingSpot2.occupySpot("hi!");
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSpot15.detach((booking.Observer) bookingSystem35);
        parkingSpot15.occupySpot("CANCEL");
        parkingSensor14.update((booking.Subject) parkingSpot15);
        bookingSystem9.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        bookingSystem9.update((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot64.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        bookingSystem9.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor74 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        double double26 = bookingReceiver19.getDeposit();
        java.lang.String str27 = bookingReceiver19.getAction();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver31.getRate(userType75);
        bookingReceiver19.extendBooking("hi!", "", (int) (short) -1, userType75);
        bookingReceiver0.extendBooking("", "", 1, userType75);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        booking.UserType userType9 = null;
        booking.BookCommand bookCommand10 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) ' ', userType9);
        double double11 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 800.0d + "'", double11 == 800.0d);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        parkingSpot55.detach((booking.Observer) bookingSystem75);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot86);
        booking.ParkingSpot parkingSpot90 = new booking.ParkingSpot();
        parkingSpot90.occupySpot("hi!");
        bookingSystem89.update((booking.Subject) parkingSpot90);
        parkingSpot82.detach((booking.Observer) bookingSystem89);
        bookingSystem75.update((booking.Subject) parkingSpot82);
        parkingSpot52.attach((booking.Observer) bookingSystem75);
        parkingSpot10.attach((booking.Observer) bookingSystem75);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        double double17 = bookingReceiver0.getAmount();
        java.lang.Class<?> wildcardClass18 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        java.lang.String str62 = parkingSpot0.getLicensePlate();
        java.lang.String str63 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSpot68.freeSpot();
        java.lang.String str73 = parkingSpot68.getLicensePlate();
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor75 = new booking.ParkingSensor((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        bookingSystem83.update((booking.Subject) parkingSpot84);
        parkingSpot76.detach((booking.Observer) bookingSystem83);
        parkingSensor75.update((booking.Subject) parkingSpot76);
        booking.ParkingSensor parkingSensor90 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) parkingSensor90);
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot0.attach((booking.Observer) bookingSystem94);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        extendCommand74.doAction();
        extendCommand74.doAction();
        extendCommand74.doAction();
        extendCommand74.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        double double15 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.CancelCommand cancelCommand39 = new booking.CancelCommand(bookingReceiver19, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (short) 1, userType58);
        bookingReceiver19.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType58);
        bookingReceiver13.extendBooking("CANCEL", "hi!", (-1), userType58);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        bookingReceiver65.cancelBooking("hi!", "hi!");
        bookingReceiver65.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        booking.UserType userType76 = booking.UserType.FACULTY;
        bookingReceiver72.bookSpace("", "", 100, userType76);
        double double78 = bookingReceiver65.getRate(userType76);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver13, "", "BOOK", (int) ' ', userType76);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 100, userType76);
        double double81 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 8.0d + "'", double78 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 8.0d + "'", double81 == 8.0d);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        booking.BookCommand bookCommand17 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        bookingReceiver21.cancelBooking("", "");
        booking.UserType userType28 = booking.UserType.STUDENT;
        double double29 = bookingReceiver21.getRate(userType28);
        bookingReceiver21.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver33, "hi!", "BOOK");
        bookingReceiver33.cancelBooking("CANCEL", "BOOK");
        double double52 = bookingReceiver33.getAmount();
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        bookingReceiver53.cancelBooking("hi!", "hi!");
        bookingReceiver53.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.UserType userType64 = booking.UserType.FACULTY;
        bookingReceiver60.bookSpace("", "", 100, userType64);
        double double66 = bookingReceiver53.getRate(userType64);
        booking.UserType userType70 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver53, "BOOK", "", (int) '#', userType70);
        double double72 = bookingReceiver33.getRate(userType70);
        double double73 = bookingReceiver21.getRate(userType70);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "hi!", (int) (byte) 1, userType70);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.STUDENT + "'", userType28.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 5.0d + "'", double29 == 5.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.0d + "'", double66 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.VISITOR + "'", userType70.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 15.0d + "'", double72 == 15.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 15.0d + "'", double73 == 15.0d);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("CANCEL");
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CANCEL" + "'", str3, "CANCEL");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        java.lang.Class<?> wildcardClass3 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (short) 100, userType21);
        java.lang.String str24 = bookingReceiver0.getAction();
        java.lang.String str25 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver29, "hi!", "hi!", 100, userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.UserType userType48 = booking.UserType.FACULTY;
        bookingReceiver44.bookSpace("", "", 100, userType48);
        bookingReceiver29.extendBooking("", "", (int) 'a', userType48);
        booking.UserType userType51 = booking.UserType.NON_FACULTY;
        double double52 = bookingReceiver29.getRate(userType51);
        booking.BookingReceiver bookingReceiver53 = null;
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        bookingReceiver57.cancelBooking("hi!", "hi!");
        booking.UserType userType61 = booking.UserType.STUDENT;
        double double62 = bookingReceiver57.getRate(userType61);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver53, "BOOK", "hi!", 0, userType61);
        double double64 = bookingReceiver29.getRate(userType61);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (byte) 10, userType61);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CANCEL" + "'", str24, "CANCEL");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CANCEL" + "'", str25, "CANCEL");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.NON_FACULTY + "'", userType51.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.STUDENT + "'", userType61.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 5.0d + "'", double62 == 5.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 5.0d + "'", double64 == 5.0d);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.Subject subject44 = null;
        // The following exception was thrown during execution in test generation
        try {
            parkingSensor43.update(subject44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.freeSpot();
        boolean boolean34 = parkingSpot32.isOccupied();
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        boolean boolean80 = parkingSpot32.isOccupied();
        parkingSensor1.update((booking.Subject) parkingSpot32);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        parkingSpot32.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        double double22 = bookingReceiver0.getAmount();
        java.lang.String str23 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        booking.UserType userType38 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver27, "hi!", "hi!", (int) (byte) 0, userType38);
        double double40 = bookingReceiver27.getAmount();
        java.lang.String str41 = bookingReceiver27.getAction();
        double double42 = bookingReceiver27.getDeposit();
        double double43 = bookingReceiver27.getDeposit();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        bookingReceiver47.cancelBooking("hi!", "hi!");
        java.lang.String str51 = bookingReceiver47.getAction();
        booking.BookingReceiver bookingReceiver52 = null;
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        booking.BookCommand bookCommand62 = new booking.BookCommand(bookingReceiver52, "hi!", "", 0, userType60);
        double double63 = bookingReceiver47.getRate(userType60);
        booking.UserType userType67 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver47, "BOOK", "EXTEND", (int) (short) 10, userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver27, "EXTEND", "hi!", (int) 'a', userType67);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        booking.UserType userType88 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver73, "", "", (int) (short) 1, userType88);
        bookingReceiver27.extendBooking("CANCEL", "EXTEND", (int) (byte) 1, userType88);
        bookingReceiver0.extendBooking("BOOK", "EXTEND", (int) (byte) -1, userType88);
        double double92 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.NON_FACULTY + "'", userType38.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CANCEL" + "'", str51, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 8.0d + "'", double63 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-8.0d) + "'", double92 == (-8.0d));
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSensor30.update((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        parkingSensor46.update((booking.Subject) parkingSpot47);
        parkingSpot31.detach((booking.Observer) parkingSensor46);
        parkingSpot2.detach((booking.Observer) parkingSensor46);
        parkingSpot2.occupySpot("hi!");
        parkingSpot2.freeSpot();
        parkingSpot2.occupySpot("hi!");
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        boolean boolean81 = parkingSpot68.isOccupied();
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot2.attach((booking.Observer) bookingSystem82);
        parkingSpot0.attach((booking.Observer) bookingSystem82);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        double double49 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-8.0d) + "'", double49 == (-8.0d));
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        double double23 = bookingReceiver16.getDeposit();
        java.lang.String str24 = bookingReceiver16.getAction();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        booking.UserType userType37 = null;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver32, "hi!", "", 100, userType37);
        java.lang.String str39 = bookingReceiver32.getAction();
        booking.UserType userType43 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver32, "hi!", "hi!", (int) (byte) 0, userType43);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver28, "", "", (int) (byte) 100, userType43);
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver28, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver52, "hi!", "hi!", 100, userType62);
        booking.UserType userType67 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver52, "", "", (int) (short) 1, userType67);
        bookingReceiver28.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType67);
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) 'a', userType67);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) '#', userType67);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.NON_FACULTY + "'", userType43.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        parkingSensor49.update((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot50.detach((booking.Observer) parkingSensor65);
        parkingSensor44.update((booking.Subject) parkingSpot50);
        parkingSpot50.occupySpot("EXTEND");
        parkingSpot50.occupySpot("BOOK");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 10, userType47);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        java.lang.String str62 = bookingReceiver55.getAction();
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        bookingReceiver66.cancelBooking("hi!", "hi!");
        bookingReceiver66.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        double double79 = bookingReceiver66.getRate(userType77);
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        bookingReceiver83.cancelBooking("hi!", "hi!");
        booking.UserType userType87 = booking.UserType.STUDENT;
        double double88 = bookingReceiver83.getRate(userType87);
        booking.BookCommand bookCommand89 = new booking.BookCommand(bookingReceiver66, "hi!", "CANCEL", (int) (short) 10, userType87);
        booking.ExtendCommand extendCommand90 = new booking.ExtendCommand(bookingReceiver55, "BOOK", "EXTEND", (int) '4', userType87);
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", (int) '#', userType87);
        double double92 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 8.0d + "'", double79 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.STUDENT + "'", userType87.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 5.0d + "'", double88 == 5.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        parkingSensor24.update((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor40 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        parkingSpot41.occupySpot("CANCEL");
        parkingSensor40.update((booking.Subject) parkingSpot41);
        parkingSensor24.update((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSensor24.update((booking.Subject) parkingSpot72);
        boolean boolean74 = parkingSpot72.isOccupied();
        boolean boolean75 = parkingSpot72.isOccupied();
        bookingSystem18.update((booking.Subject) parkingSpot72);
        parkingSpot72.freeSpot();
        parkingSpot72.occupySpot("CANCEL");
        parkingSensor14.update((booking.Subject) parkingSpot72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        booking.UserType userType46 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver36, "hi!", "hi!", 100, userType46);
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        bookingReceiver36.extendBooking("", "", (int) 'a', userType55);
        bookingReceiver20.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType55);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver62, "hi!", "hi!", 100, userType72);
        booking.BookingReceiver bookingReceiver74 = new booking.BookingReceiver();
        java.lang.String str75 = bookingReceiver74.getAction();
        booking.UserType userType79 = null;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver74, "hi!", "", 100, userType79);
        booking.UserType userType84 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand85 = new booking.BookCommand(bookingReceiver74, "hi!", "hi!", 100, userType84);
        booking.BookingReceiver bookingReceiver89 = new booking.BookingReceiver();
        booking.UserType userType93 = booking.UserType.FACULTY;
        bookingReceiver89.bookSpace("", "", 100, userType93);
        bookingReceiver74.extendBooking("", "", (int) 'a', userType93);
        double double96 = bookingReceiver62.getRate(userType93);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver20, "EXTEND", "CANCEL", 0, userType93);
        booking.BookCommand bookCommand98 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) (byte) 0, userType93);
        bookCommand98.doAction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.FACULTY + "'", userType93.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 8.0d + "'", double96 == 8.0d);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        java.lang.Class<?> wildcardClass4 = parkingSpot0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        java.lang.String str52 = parkingSpot49.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", 1, userType31);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "hi!");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        bookingReceiver47.cancelBooking("hi!", "hi!");
        double double51 = bookingReceiver47.getAmount();
        bookingReceiver47.cancelBooking("EXTEND", "hi!");
        java.lang.String str55 = bookingReceiver47.getAction();
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        bookingReceiver59.cancelBooking("hi!", "hi!");
        booking.UserType userType63 = booking.UserType.STUDENT;
        double double64 = bookingReceiver59.getRate(userType63);
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver59, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        bookingReceiver71.cancelBooking("hi!", "hi!");
        bookingReceiver71.cancelBooking("", "");
        booking.UserType userType78 = booking.UserType.STUDENT;
        double double79 = bookingReceiver71.getRate(userType78);
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver59, "", "hi!", (int) '#', userType78);
        bookingReceiver47.bookSpace("", "hi!", (int) 'a', userType78);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", 1, userType78);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CANCEL" + "'", str55, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.STUDENT + "'", userType63.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 5.0d + "'", double64 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType78 + "' != '" + booking.UserType.STUDENT + "'", userType78.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 5.0d + "'", double79 == 5.0d);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        cancelCommand12.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        bookingReceiver33.extendBooking("", "", (int) 'a', userType52);
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        double double56 = bookingReceiver33.getRate(userType55);
        bookingReceiver0.extendBooking("hi!", "", (int) (byte) -1, userType55);
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        java.lang.String str72 = bookingReceiver65.getAction();
        booking.UserType userType76 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver65, "hi!", "hi!", (int) (byte) 0, userType76);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver61, "", "", (int) (byte) 100, userType76);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (short) 0, userType76);
        double double80 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand86 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        cancelCommand86.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.NON_FACULTY + "'", userType76.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot68);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver13.extendBooking("hi!", "", 0, userType42);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) -1, userType42);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        booking.UserType userType70 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver60, "hi!", "hi!", 100, userType70);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        booking.UserType userType79 = booking.UserType.FACULTY;
        bookingReceiver75.bookSpace("", "", 100, userType79);
        bookingReceiver60.extendBooking("", "", (int) 'a', userType79);
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver50, "", "", 0, userType79);
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        java.lang.String str84 = bookingReceiver83.getAction();
        booking.UserType userType88 = null;
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver83, "hi!", "", 100, userType88);
        java.lang.String str90 = bookingReceiver83.getAction();
        booking.UserType userType94 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand95 = new booking.ExtendCommand(bookingReceiver83, "hi!", "hi!", (int) (byte) 0, userType94);
        double double96 = bookingReceiver50.getRate(userType94);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver0, "", "", 0, userType94);
        bookCommand97.doAction();
        bookCommand97.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.FACULTY + "'", userType70.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.NON_FACULTY + "'", userType94.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor12 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSensor12.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        parkingSpot13.detach((booking.Observer) parkingSensor28);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSensor45.update((booking.Subject) parkingSpot46);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        parkingSpot13.attach((booking.Observer) parkingSensor60);
        parkingSpot13.occupySpot("hi!");
        java.lang.String str64 = parkingSpot13.getLicensePlate();
        boolean boolean65 = parkingSpot13.isOccupied();
        parkingSpot13.freeSpot();
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem10.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        java.lang.String str72 = parkingSpot69.getLicensePlate();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        bookingSystem10.update((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        bookingSystem10.update((booking.Subject) parkingSpot75);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        java.lang.String str40 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        java.lang.String str55 = bookingReceiver48.getAction();
        booking.UserType userType59 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver48, "hi!", "hi!", (int) (byte) 0, userType59);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver44, "", "", (int) (byte) 100, userType59);
        booking.CancelCommand cancelCommand64 = new booking.CancelCommand(bookingReceiver44, "hi!", "hi!");
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver44, "", "CANCEL", (int) (byte) 1, userType68);
        bookingReceiver0.bookSpace("CANCEL", "", (int) (byte) 10, userType68);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "EXTEND" + "'", str40, "EXTEND");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.NON_FACULTY + "'", userType59.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot2);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        parkingSpot4.detach((booking.Observer) bookingSystem16);
        parkingSpot4.occupySpot("CANCEL");
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("EXTEND");
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.CommandInvoker commandInvoker13 = new booking.CommandInvoker();
        commandInvoker13.executeCommand();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        extendCommand27.doAction();
        commandInvoker13.setCommand((booking.ICommand) extendCommand27);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        bookCommand41.doAction();
        commandInvoker13.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        java.lang.String str10 = bookingReceiver9.getAction();
        booking.UserType userType14 = null;
        booking.ExtendCommand extendCommand15 = new booking.ExtendCommand(bookingReceiver9, "hi!", "", 100, userType14);
        double double16 = bookingReceiver9.getDeposit();
        java.lang.String str17 = bookingReceiver9.getAction();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver21, "", "", 0, userType50);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        double double67 = bookingReceiver21.getRate(userType65);
        bookingReceiver9.extendBooking("hi!", "", (int) (short) -1, userType65);
        double double69 = bookingReceiver0.getRate(userType65);
        double double70 = bookingReceiver0.getDeposit();
        booking.UserType userType71 = booking.UserType.NON_FACULTY;
        double double72 = bookingReceiver0.getRate(userType71);
        java.lang.Class<?> wildcardClass73 = userType71.getClass();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 8.0d + "'", double70 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.NON_FACULTY + "'", userType71.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        bookingSystem47.update((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        parkingSpot62.detach((booking.Observer) parkingSensor77);
        parkingSpot55.detach((booking.Observer) parkingSensor77);
        java.lang.Class<?> wildcardClass80 = parkingSensor77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.freeSpot();
        boolean boolean37 = parkingSpot35.isOccupied();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        boolean boolean52 = parkingSpot39.isOccupied();
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        parkingSpot15.detach((booking.Observer) parkingSensor38);
        java.lang.String str57 = parkingSpot15.getLicensePlate();
        boolean boolean58 = parkingSpot15.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        boolean boolean54 = parkingSpot2.isOccupied();
        boolean boolean55 = parkingSpot2.isOccupied();
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver20, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        bookingReceiver32.cancelBooking("hi!", "hi!");
        bookingReceiver32.cancelBooking("", "");
        booking.UserType userType39 = booking.UserType.STUDENT;
        double double40 = bookingReceiver32.getRate(userType39);
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver20, "", "hi!", (int) '#', userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        bookingReceiver45.cancelBooking("hi!", "hi!");
        java.lang.String str49 = bookingReceiver45.getAction();
        booking.BookingReceiver bookingReceiver50 = null;
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver50, "hi!", "", 0, userType58);
        double double61 = bookingReceiver45.getRate(userType58);
        bookingReceiver20.extendBooking("hi!", "CANCEL", (int) (short) 1, userType58);
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        booking.BookingReceiver bookingReceiver88 = new booking.BookingReceiver();
        booking.UserType userType92 = booking.UserType.FACULTY;
        bookingReceiver88.bookSpace("", "", 100, userType92);
        bookingReceiver73.extendBooking("", "", (int) 'a', userType92);
        bookingReceiver63.extendBooking("hi!", "", 0, userType92);
        double double96 = bookingReceiver20.getRate(userType92);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver0, "CANCEL", "", (int) (short) 100, userType92);
        bookCommand97.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.STUDENT + "'", userType39.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CANCEL" + "'", str49, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.FACULTY + "'", userType92.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 8.0d + "'", double96 == 8.0d);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        cancelCommand17.doAction();
        cancelCommand17.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.occupySpot("hi!");
        java.lang.String str30 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        boolean boolean32 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        boolean boolean46 = parkingSpot33.isOccupied();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSensor parkingSensor48 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot59.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        bookingSystem67.update((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot59.attach((booking.Observer) bookingSystem73);
        parkingSensor48.update((booking.Subject) parkingSpot59);
        parkingSpot4.detach((booking.Observer) parkingSensor48);
        boolean boolean77 = parkingSpot4.isOccupied();
        parkingSpot4.freeSpot();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "hi!");
        double double43 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        bookingReceiver19.bookSpace("hi!", "hi!", (int) (short) -1, userType50);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        java.lang.String str67 = bookingReceiver60.getAction();
        booking.UserType userType71 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver60, "hi!", "hi!", (int) (byte) 0, userType71);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver56, "", "", (int) (byte) 100, userType71);
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        java.lang.String str78 = bookingReceiver77.getAction();
        booking.UserType userType82 = null;
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver77, "hi!", "", 100, userType82);
        booking.UserType userType87 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver77, "hi!", "hi!", 100, userType87);
        bookingReceiver56.bookSpace("hi!", "hi!", (int) (short) -1, userType87);
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver19, "hi!", "", 0, userType87);
        commandInvoker0.setCommand((booking.ICommand) bookCommand90);
        booking.ICommand iCommand92 = null;
        commandInvoker0.setCommand(iCommand92);
        java.lang.Class<?> wildcardClass94 = commandInvoker0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.NON_FACULTY + "'", userType71.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        java.lang.String str34 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        java.lang.String str39 = bookingReceiver38.getAction();
        booking.UserType userType43 = null;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver38, "hi!", "", 100, userType43);
        booking.UserType userType48 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand49 = new booking.BookCommand(bookingReceiver38, "hi!", "hi!", 100, userType48);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        double double72 = bookingReceiver38.getRate(userType69);
        booking.UserType userType73 = booking.UserType.VISITOR;
        double double74 = bookingReceiver38.getRate(userType73);
        double double75 = bookingReceiver0.getRate(userType73);
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        java.lang.Class<?> wildcardClass79 = cancelCommand78.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "BOOK" + "'", str34, "BOOK");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 8.0d + "'", double72 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.VISITOR + "'", userType73.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 15.0d + "'", double74 == 15.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 15.0d + "'", double75 == 15.0d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        cancelCommand10.doAction();
        cancelCommand10.doAction();
        cancelCommand10.doAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver13, "hi!", "CANCEL", (int) ' ', userType63);
        bookingReceiver0.bookSpace("hi!", "hi!", 10, userType63);
        double double66 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        java.lang.String str68 = bookingReceiver67.getAction();
        booking.UserType userType72 = null;
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver67, "hi!", "", 100, userType72);
        java.lang.String str74 = bookingReceiver67.getAction();
        booking.UserType userType78 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver67, "hi!", "hi!", (int) (byte) 0, userType78);
        double double80 = bookingReceiver0.getRate(userType78);
        double double81 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand87 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "CANCEL");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType78 + "' != '" + booking.UserType.NON_FACULTY + "'", userType78.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver0, "CANCEL", "EXTEND", (int) '#', userType37);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        booking.UserType userType54 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver44, "hi!", "hi!", 100, userType54);
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) -1, userType54);
        booking.CancelCommand cancelCommand59 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        booking.ParkingSensor parkingSensor59 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot61.detach((booking.Observer) bookingSystem68);
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        parkingSpot0.attach((booking.Observer) bookingSystem77);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        boolean boolean13 = parkingSpot4.isOccupied();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot16.occupySpot("hi!");
        parkingSpot16.occupySpot("hi!");
        parkingSpot16.freeSpot();
        parkingSensor15.update((booking.Subject) parkingSpot16);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        double double51 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        bookingReceiver0.extendBooking("BOOK", "", (int) (short) -1, userType73);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-8.0d) + "'", double51 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        parkingSpot49.freeSpot();
        parkingSensor33.update((booking.Subject) parkingSpot49);
        boolean boolean64 = parkingSpot49.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot50.detach((booking.Observer) bookingSystem70);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        bookingSystem70.update((booking.Subject) parkingSpot77);
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot92 = new booking.ParkingSpot();
        parkingSensor91.update((booking.Subject) parkingSpot92);
        parkingSensor49.update((booking.Subject) parkingSpot92);
        boolean boolean95 = parkingSpot92.isOccupied();
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot92);
        java.lang.String str97 = parkingSpot92.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.freeSpot();
        boolean boolean37 = parkingSpot35.isOccupied();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        boolean boolean52 = parkingSpot39.isOccupied();
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        parkingSpot15.detach((booking.Observer) parkingSensor38);
        java.lang.String str57 = parkingSpot15.getLicensePlate();
        parkingSpot15.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        booking.UserType userType37 = null;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver32, "hi!", "", 100, userType37);
        booking.UserType userType42 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver32, "hi!", "hi!", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.UserType userType51 = booking.UserType.FACULTY;
        bookingReceiver47.bookSpace("", "", 100, userType51);
        bookingReceiver32.extendBooking("", "", (int) 'a', userType51);
        double double54 = bookingReceiver20.getRate(userType51);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver0, "", "BOOK", 1, userType51);
        bookCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 8.0d + "'", double54 == 8.0d);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        bookingReceiver33.extendBooking("", "", (int) 'a', userType52);
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        double double56 = bookingReceiver33.getRate(userType55);
        bookingReceiver0.extendBooking("hi!", "", (int) (byte) -1, userType55);
        java.lang.Class<?> wildcardClass58 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        java.lang.String str16 = parkingSpot2.getLicensePlate();
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot38.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        java.lang.String str46 = parkingSpot38.getLicensePlate();
        parkingSpot38.freeSpot();
        parkingSpot38.freeSpot();
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.freeSpot();
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        bookingSystem72.update((booking.Subject) parkingSpot73);
        parkingSpot65.detach((booking.Observer) bookingSystem72);
        parkingSpot52.detach((booking.Observer) bookingSystem72);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot79.detach((booking.Observer) bookingSystem86);
        bookingSystem72.update((booking.Subject) parkingSpot79);
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot94 = new booking.ParkingSpot();
        parkingSensor93.update((booking.Subject) parkingSpot94);
        parkingSpot49.detach((booking.Observer) parkingSensor93);
        parkingSpot38.detach((booking.Observer) parkingSensor93);
        bookingSystem33.update((booking.Subject) parkingSpot38);
        parkingSpot2.detach((booking.Observer) bookingSystem33);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        bookingReceiver43.cancelBooking("hi!", "hi!");
        bookingReceiver43.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        booking.UserType userType54 = booking.UserType.FACULTY;
        bookingReceiver50.bookSpace("", "", 100, userType54);
        double double56 = bookingReceiver43.getRate(userType54);
        booking.UserType userType60 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver43, "BOOK", "", (int) '#', userType60);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 1, userType60);
        java.lang.Class<?> wildcardClass63 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.VISITOR + "'", userType60.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver21, "CANCEL", "CANCEL", (int) (short) 1, userType48);
        double double51 = bookingReceiver0.getRate(userType48);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        double double26 = bookingReceiver22.getAmount();
        bookingReceiver22.cancelBooking("EXTEND", "hi!");
        java.lang.String str30 = bookingReceiver22.getAction();
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        bookingReceiver34.cancelBooking("hi!", "hi!");
        booking.UserType userType38 = booking.UserType.STUDENT;
        double double39 = bookingReceiver34.getRate(userType38);
        booking.CancelCommand cancelCommand42 = new booking.CancelCommand(bookingReceiver34, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.UserType userType53 = booking.UserType.STUDENT;
        double double54 = bookingReceiver46.getRate(userType53);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver34, "", "hi!", (int) '#', userType53);
        bookingReceiver22.bookSpace("", "hi!", (int) 'a', userType53);
        double double57 = bookingReceiver0.getRate(userType53);
        booking.CancelCommand cancelCommand60 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CANCEL" + "'", str30, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.STUDENT + "'", userType38.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5.0d + "'", double39 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.STUDENT + "'", userType53.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 5.0d + "'", double57 == 5.0d);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        boolean boolean17 = parkingSpot2.isOccupied();
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor19 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        parkingSpot18.freeSpot();
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        parkingSensor23.update((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSensor39.update((booking.Subject) parkingSpot40);
        parkingSpot24.detach((booking.Observer) parkingSensor39);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor56 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        bookingSystem64.update((booking.Subject) parkingSpot65);
        parkingSpot57.detach((booking.Observer) bookingSystem64);
        parkingSensor56.update((booking.Subject) parkingSpot57);
        booking.ParkingSensor parkingSensor71 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        parkingSpot24.attach((booking.Observer) parkingSensor71);
        parkingSpot21.attach((booking.Observer) parkingSensor71);
        parkingSpot18.attach((booking.Observer) parkingSensor71);
        parkingSpot2.detach((booking.Observer) parkingSensor71);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSpot64.detach((booking.Observer) parkingSensor79);
        bookingSystem56.update((booking.Subject) parkingSpot64);
        parkingSensor33.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot64.occupySpot("hi!");
        parkingSpot64.occupySpot("");
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        extendCommand33.doAction();
        extendCommand33.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        double double35 = bookingReceiver12.getRate(userType34);
        booking.CancelCommand cancelCommand38 = new booking.CancelCommand(bookingReceiver12, "EXTEND", "BOOK");
        bookingReceiver12.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        bookingReceiver45.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        java.lang.String str72 = bookingReceiver71.getAction();
        booking.UserType userType76 = null;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver71, "hi!", "", 100, userType76);
        booking.UserType userType81 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver71, "hi!", "hi!", 100, userType81);
        booking.BookingReceiver bookingReceiver86 = new booking.BookingReceiver();
        booking.UserType userType90 = booking.UserType.FACULTY;
        bookingReceiver86.bookSpace("", "", 100, userType90);
        bookingReceiver71.extendBooking("", "", (int) 'a', userType90);
        double double93 = bookingReceiver59.getRate(userType90);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver45, "BOOK", "", 100, userType90);
        bookingReceiver12.extendBooking("", "", (int) '#', userType90);
        bookingReceiver0.extendBooking("", "", (int) '#', userType90);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.FACULTY + "'", userType81.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 8.0d + "'", double93 == 8.0d);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        java.lang.String str44 = parkingSpot29.getLicensePlate();
        parkingSpot29.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot50.detach((booking.Observer) bookingSystem70);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        bookingSystem70.update((booking.Subject) parkingSpot77);
        parkingSpot47.attach((booking.Observer) bookingSystem70);
        parkingSpot29.detach((booking.Observer) bookingSystem70);
        parkingSpot0.attach((booking.Observer) bookingSystem70);
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        booking.CancelCommand cancelCommand22 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        bookingReceiver31.cancelBooking("hi!", "hi!");
        java.lang.String str35 = bookingReceiver31.getAction();
        booking.BookingReceiver bookingReceiver36 = null;
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        booking.UserType userType44 = booking.UserType.FACULTY;
        bookingReceiver40.bookSpace("", "", 100, userType44);
        booking.BookCommand bookCommand46 = new booking.BookCommand(bookingReceiver36, "hi!", "", 0, userType44);
        double double47 = bookingReceiver31.getRate(userType44);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver31, "BOOK", "EXTEND", (int) (short) 10, userType51);
        booking.BookCommand bookCommand53 = new booking.BookCommand(bookingReceiver26, "CANCEL", "hi!", (int) ' ', userType51);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        bookingReceiver54.cancelBooking("hi!", "hi!");
        java.lang.String str58 = bookingReceiver54.getAction();
        booking.BookingReceiver bookingReceiver59 = null;
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        booking.UserType userType67 = booking.UserType.FACULTY;
        bookingReceiver63.bookSpace("", "", 100, userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver59, "hi!", "", 0, userType67);
        double double70 = bookingReceiver54.getRate(userType67);
        double double71 = bookingReceiver26.getRate(userType67);
        bookingReceiver0.extendBooking("BOOK", "EXTEND", (int) 'a', userType67);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "CANCEL" + "'", str35, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 8.0d + "'", double47 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CANCEL" + "'", str58, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 8.0d + "'", double70 == 8.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 8.0d + "'", double71 == 8.0d);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        double double29 = bookingReceiver25.getAmount();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        booking.UserType userType59 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver49, "hi!", "hi!", 100, userType59);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        booking.UserType userType68 = booking.UserType.FACULTY;
        bookingReceiver64.bookSpace("", "", 100, userType68);
        bookingReceiver49.extendBooking("", "", (int) 'a', userType68);
        bookingReceiver33.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType68);
        bookingReceiver25.extendBooking("hi!", "hi!", (int) (byte) 10, userType68);
        java.lang.String str73 = bookingReceiver25.getAction();
        booking.UserType userType77 = booking.UserType.VISITOR;
        bookingReceiver25.bookSpace("BOOK", "", (int) (byte) 100, userType77);
        bookingReceiver0.bookSpace("", "CANCEL", (int) (byte) 1, userType77);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "EXTEND" + "'", str73, "EXTEND");
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.VISITOR + "'", userType77.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.occupySpot("hi!");
        java.lang.String str30 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        boolean boolean32 = parkingSpot4.isOccupied();
        java.lang.Class<?> wildcardClass33 = parkingSpot4.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        java.lang.String str37 = bookingReceiver30.getAction();
        booking.UserType userType41 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver30, "hi!", "hi!", (int) (byte) 0, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.UserType userType56 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver46, "hi!", "hi!", 100, userType56);
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.UserType userType65 = booking.UserType.FACULTY;
        bookingReceiver61.bookSpace("", "", 100, userType65);
        bookingReceiver46.extendBooking("", "", (int) 'a', userType65);
        bookingReceiver30.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType65);
        double double69 = bookingReceiver0.getRate(userType65);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        bookingReceiver73.cancelBooking("hi!", "hi!");
        bookingReceiver73.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        double double86 = bookingReceiver73.getRate(userType84);
        bookingReceiver0.extendBooking("EXTEND", "EXTEND", (int) '4', userType84);
        java.lang.String str88 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.NON_FACULTY + "'", userType41.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 8.0d + "'", double69 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 8.0d + "'", double86 == 8.0d);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "EXTEND" + "'", str88, "EXTEND");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("BOOK");
        parkingSpot2.occupySpot("hi!");
        boolean boolean55 = parkingSpot2.isOccupied();
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        bookingSystem59.update((booking.Subject) parkingSpot60);
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot66);
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot66.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        bookingSystem74.update((booking.Subject) parkingSpot75);
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        parkingSpot66.attach((booking.Observer) bookingSystem80);
        parkingSpot2.detach((booking.Observer) bookingSystem80);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor12 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSensor12.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        parkingSpot13.detach((booking.Observer) parkingSensor28);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSensor45.update((booking.Subject) parkingSpot46);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        parkingSpot13.attach((booking.Observer) parkingSensor60);
        parkingSpot13.occupySpot("hi!");
        java.lang.String str64 = parkingSpot13.getLicensePlate();
        boolean boolean65 = parkingSpot13.isOccupied();
        parkingSpot13.freeSpot();
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem10.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        java.lang.String str72 = parkingSpot69.getLicensePlate();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        bookingSystem10.update((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        double double23 = bookingReceiver10.getAmount();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver27, "", "", 0, userType56);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        java.lang.String str67 = bookingReceiver60.getAction();
        booking.UserType userType71 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver60, "hi!", "hi!", (int) (byte) 0, userType71);
        double double73 = bookingReceiver27.getRate(userType71);
        bookingReceiver10.bookSpace("", "", (int) (short) 100, userType71);
        double double75 = bookingReceiver0.getRate(userType71);
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.NON_FACULTY + "'", userType71.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        booking.BookingReceiver bookingReceiver27 = null;
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        double double54 = bookingReceiver31.getRate(userType53);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver27, "EXTEND", "", 100, userType53);
        commandInvoker0.setCommand((booking.ICommand) bookCommand55);
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        java.lang.String str43 = bookingReceiver36.getAction();
        booking.UserType userType47 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver36, "hi!", "hi!", (int) (byte) 0, userType47);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver20, "CANCEL", "CANCEL", (int) (short) 1, userType47);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        double double76 = bookingReceiver53.getRate(userType75);
        bookingReceiver20.extendBooking("hi!", "", (int) (byte) -1, userType75);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", 0, userType75);
        extendCommand78.doAction();
        extendCommand78.doAction();
        extendCommand78.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.NON_FACULTY + "'", userType47.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        bookingReceiver35.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver35, "CANCEL", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand46);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSensor parkingSensor13 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        bookingSystem17.update((booking.Subject) parkingSpot18);
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        bookingSystem23.update((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        parkingSensor41.update((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        parkingSpot42.detach((booking.Observer) parkingSensor57);
        bookingSystem34.update((booking.Subject) parkingSpot42);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot24.detach((booking.Observer) parkingSensor60);
        parkingSensor13.update((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot67.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        parkingSpot24.detach((booking.Observer) bookingSystem78);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        java.lang.String str15 = bookingReceiver0.getAction();
        double double16 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = null;
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.BookCommand bookCommand26 = new booking.BookCommand(bookingReceiver16, "BOOK", "hi!", 0, userType24);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType24);
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        java.lang.String str31 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CANCEL" + "'", str31, "CANCEL");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem4 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        boolean boolean5 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        double double56 = bookingReceiver54.getDeposit();
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver60, "", "", (int) (byte) 100, userType75);
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        java.lang.String str82 = bookingReceiver81.getAction();
        booking.UserType userType86 = null;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver81, "hi!", "", 100, userType86);
        booking.UserType userType91 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver81, "hi!", "hi!", 100, userType91);
        bookingReceiver60.bookSpace("hi!", "hi!", (int) (short) -1, userType91);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver54, "EXTEND", "BOOK", (int) (byte) -1, userType91);
        bookingReceiver0.extendBooking("CANCEL", "CANCEL", (int) '4', userType91);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.FACULTY + "'", userType91.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver25, "CANCEL", "CANCEL", (int) (short) 1, userType52);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType52);
        double double56 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        booking.UserType userType73 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand74 = new booking.BookCommand(bookingReceiver63, "hi!", "hi!", 100, userType73);
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        booking.UserType userType82 = booking.UserType.FACULTY;
        bookingReceiver78.bookSpace("", "", 100, userType82);
        bookingReceiver63.extendBooking("", "", (int) 'a', userType82);
        bookingReceiver0.extendBooking("CANCEL", "hi!", 100, userType82);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.FACULTY + "'", userType73.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType82 + "' != '" + booking.UserType.FACULTY + "'", userType82.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        double double48 = bookingReceiver0.getDeposit();
        java.lang.String str49 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSpot64.detach((booking.Observer) parkingSensor79);
        bookingSystem56.update((booking.Subject) parkingSpot64);
        parkingSensor33.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        parkingSpot64.occupySpot("EXTEND");
        parkingSpot64.freeSpot();
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("BOOK");
        parkingSpot2.freeSpot();
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        parkingSpot4.detach((booking.Observer) bookingSystem16);
        parkingSpot4.occupySpot("CANCEL");
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        parkingSpot29.attach((booking.Observer) parkingSensor76);
        parkingSpot26.attach((booking.Observer) parkingSensor76);
        parkingSpot26.occupySpot("EXTEND");
        parkingSensor25.update((booking.Subject) parkingSpot26);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        java.lang.Class<?> wildcardClass22 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        java.lang.String str34 = bookingReceiver0.getAction();
        double double35 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "BOOK" + "'", str34, "BOOK");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-8.0d) + "'", double35 == (-8.0d));
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        double double10 = bookingReceiver0.getAmount();
        java.lang.String str11 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        java.lang.String str19 = parkingSpot2.getLicensePlate();
        boolean boolean20 = parkingSpot2.isOccupied();
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        bookingReceiver52.cancelBooking("hi!", "hi!");
        bookingReceiver52.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        double double65 = bookingReceiver52.getRate(userType63);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "", "BOOK", (int) ' ', userType63);
        java.lang.Class<?> wildcardClass67 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 8.0d + "'", double65 == 8.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor16);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        bookingSystem76.update((booking.Subject) parkingSpot77);
        parkingSpot69.detach((booking.Observer) bookingSystem76);
        parkingSpot69.occupySpot("hi!");
        parkingSpot69.occupySpot("hi!");
        parkingSpot69.occupySpot("");
        parkingSensor68.update((booking.Subject) parkingSpot69);
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        java.lang.String str90 = parkingSpot69.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        booking.UserType userType57 = booking.UserType.FACULTY;
        bookingReceiver53.bookSpace("", "", 100, userType57);
        double double59 = bookingReceiver46.getRate(userType57);
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        bookingReceiver63.cancelBooking("hi!", "hi!");
        booking.UserType userType67 = booking.UserType.STUDENT;
        double double68 = bookingReceiver63.getRate(userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver46, "hi!", "CANCEL", (int) (short) 10, userType67);
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver35, "BOOK", "EXTEND", (int) '4', userType67);
        extendCommand70.doAction();
        extendCommand70.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand70);
        extendCommand70.doAction();
        extendCommand70.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8.0d + "'", double59 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.STUDENT + "'", userType67.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5.0d + "'", double68 == 5.0d);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.freeSpot();
        boolean boolean19 = parkingSpot17.isOccupied();
        parkingSpot17.freeSpot();
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        bookingSystem28.update((booking.Subject) parkingSpot29);
        parkingSpot21.detach((booking.Observer) bookingSystem28);
        parkingSpot17.detach((booking.Observer) bookingSystem28);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        boolean boolean36 = parkingSpot17.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        boolean boolean54 = parkingSpot2.isOccupied();
        parkingSpot2.freeSpot();
        booking.ParkingSensor parkingSensor56 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        boolean boolean57 = parkingSpot2.isOccupied();
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        double double60 = bookingReceiver13.getDeposit();
        booking.UserType userType64 = null;
        booking.BookCommand bookCommand65 = new booking.BookCommand(bookingReceiver13, "hi!", "BOOK", (int) (short) 100, userType64);
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.UserType userType84 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver69, "", "", (int) (short) 1, userType84);
        bookingReceiver13.bookSpace("", "CANCEL", 100, userType84);
        double double87 = bookingReceiver0.getRate(userType84);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 8.0d + "'", double87 == 8.0d);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        double double20 = bookingReceiver16.getAmount();
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        java.lang.String str31 = bookingReceiver24.getAction();
        booking.UserType userType35 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver24, "hi!", "hi!", (int) (byte) 0, userType35);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.UserType userType59 = booking.UserType.FACULTY;
        bookingReceiver55.bookSpace("", "", 100, userType59);
        bookingReceiver40.extendBooking("", "", (int) 'a', userType59);
        bookingReceiver24.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType59);
        bookingReceiver16.extendBooking("hi!", "hi!", (int) (byte) 10, userType59);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", 1, userType59);
        double double65 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.NON_FACULTY + "'", userType35.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        boolean boolean49 = parkingSpot18.isOccupied();
        booking.Observer observer50 = null;
        parkingSpot18.attach(observer50);
        boolean boolean52 = parkingSpot18.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.occupySpot("");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot2);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        java.lang.String str19 = bookingReceiver12.getAction();
        booking.UserType userType23 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver12, "hi!", "hi!", (int) (byte) 0, userType23);
        double double25 = bookingReceiver12.getAmount();
        java.lang.String str26 = bookingReceiver12.getAction();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.UserType userType59 = booking.UserType.FACULTY;
        bookingReceiver55.bookSpace("", "", 100, userType59);
        bookingReceiver40.extendBooking("", "", (int) 'a', userType59);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver30, "", "", 0, userType59);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver12, "hi!", "", 1, userType59);
        double double64 = bookingReceiver0.getRate(userType59);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        java.lang.String str75 = bookingReceiver68.getAction();
        booking.UserType userType79 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver68, "hi!", "hi!", (int) (byte) 0, userType79);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (short) 0, userType79);
        double double82 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.NON_FACULTY + "'", userType23.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 8.0d + "'", double64 == 8.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.NON_FACULTY + "'", userType79.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        java.lang.String str20 = bookingReceiver16.getAction();
        booking.BookingReceiver bookingReceiver21 = null;
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver21, "hi!", "", 0, userType29);
        double double32 = bookingReceiver16.getRate(userType29);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver16, "BOOK", "EXTEND", (int) (short) 10, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver11, "CANCEL", "hi!", (int) ' ', userType36);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) '#', userType36);
        java.lang.String str40 = bookingReceiver0.getAction();
        java.lang.String str41 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CANCEL" + "'", str7, "CANCEL");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CANCEL" + "'", str20, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 8.0d + "'", double32 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CANCEL" + "'", str40, "CANCEL");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CANCEL" + "'", str41, "CANCEL");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.occupySpot("hi!");
        java.lang.String str30 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        boolean boolean32 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        boolean boolean46 = parkingSpot33.isOccupied();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSensor parkingSensor48 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot59.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        bookingSystem67.update((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot59.attach((booking.Observer) bookingSystem73);
        parkingSensor48.update((booking.Subject) parkingSpot59);
        parkingSpot4.detach((booking.Observer) parkingSensor48);
        boolean boolean77 = parkingSpot4.isOccupied();
        booking.Observer observer78 = null;
        parkingSpot4.attach(observer78);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver64, "", "", (int) (short) 1, userType79);
        bookingReceiver43.extendBooking("BOOK", "", (int) '4', userType79);
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver0, "EXTEND", "CANCEL", 0, userType79);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSensor57.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        parkingSpot58.detach((booking.Observer) parkingSensor73);
        bookingSystem50.update((booking.Subject) parkingSpot58);
        parkingSpot58.freeSpot();
        parkingSensor42.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.freeSpot();
        boolean boolean80 = parkingSpot78.isOccupied();
        booking.ParkingSensor parkingSensor81 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot86);
        booking.ParkingSpot parkingSpot90 = new booking.ParkingSpot();
        parkingSpot90.occupySpot("hi!");
        bookingSystem89.update((booking.Subject) parkingSpot90);
        parkingSpot82.detach((booking.Observer) bookingSystem89);
        boolean boolean95 = parkingSpot82.isOccupied();
        booking.ParkingSensor parkingSensor96 = new booking.ParkingSensor((booking.Subject) parkingSpot82);
        booking.ParkingSensor parkingSensor97 = new booking.ParkingSensor((booking.Subject) parkingSpot82);
        parkingSensor81.update((booking.Subject) parkingSpot82);
        parkingSensor42.update((booking.Subject) parkingSpot82);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        booking.UserType userType14 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver4, "hi!", "hi!", 100, userType14);
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) (short) 0, userType14);
        // The following exception was thrown during execution in test generation
        try {
            extendCommand16.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.extendBooking(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + userType14 + "' != '" + booking.UserType.FACULTY + "'", userType14.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot15.occupySpot("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: License plate must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        booking.CancelCommand cancelCommand77 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand77.doAction();
        cancelCommand77.doAction();
        cancelCommand77.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        extendCommand16.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        java.lang.String str34 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        cancelCommand37.doAction();
        cancelCommand37.doAction();
        cancelCommand37.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "BOOK" + "'", str34, "BOOK");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        double double32 = bookingReceiver25.getDeposit();
        java.lang.String str33 = bookingReceiver25.getAction();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        booking.UserType userType57 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand58 = new booking.BookCommand(bookingReceiver47, "hi!", "hi!", 100, userType57);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        booking.UserType userType66 = booking.UserType.FACULTY;
        bookingReceiver62.bookSpace("", "", 100, userType66);
        bookingReceiver47.extendBooking("", "", (int) 'a', userType66);
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver37, "", "", 0, userType66);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        java.lang.String str77 = bookingReceiver70.getAction();
        booking.UserType userType81 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver70, "hi!", "hi!", (int) (byte) 0, userType81);
        double double83 = bookingReceiver37.getRate(userType81);
        bookingReceiver25.extendBooking("hi!", "", (int) (short) -1, userType81);
        bookingReceiver0.bookSpace("EXTEND", "EXTEND", 100, userType81);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.NON_FACULTY + "'", userType81.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.0d + "'", double83 == 10.0d);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.CancelCommand cancelCommand3 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        parkingSpot49.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "EXTEND");
        bookingReceiver0.cancelBooking("hi!", "");
        double double54 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.UserType userType16 = null;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver11, "hi!", "", 100, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver11, "", "", 0, userType40);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver44, "hi!", "hi!", (int) (byte) 0, userType55);
        double double57 = bookingReceiver11.getRate(userType55);
        double double58 = bookingReceiver0.getRate(userType55);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        bookingReceiver62.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        booking.UserType userType73 = booking.UserType.FACULTY;
        bookingReceiver69.bookSpace("", "", 100, userType73);
        double double75 = bookingReceiver62.getRate(userType73);
        double double76 = bookingReceiver0.getRate(userType73);
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        bookingReceiver77.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver84 = null;
        booking.BookingReceiver bookingReceiver88 = new booking.BookingReceiver();
        booking.UserType userType92 = booking.UserType.FACULTY;
        bookingReceiver88.bookSpace("", "", 100, userType92);
        booking.BookCommand bookCommand94 = new booking.BookCommand(bookingReceiver84, "hi!", "", 0, userType92);
        bookingReceiver77.extendBooking("hi!", "BOOK", 1, userType92);
        double double96 = bookingReceiver0.getRate(userType92);
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.FACULTY + "'", userType73.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 8.0d + "'", double75 == 8.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.FACULTY + "'", userType92.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 8.0d + "'", double96 == 8.0d);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        boolean boolean65 = parkingSpot52.isOccupied();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot78.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot78.attach((booking.Observer) bookingSystem92);
        parkingSensor67.update((booking.Subject) parkingSpot78);
        parkingSpot49.attach((booking.Observer) parkingSensor67);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        java.lang.Class<?> wildcardClass98 = bookingSystem97.getClass();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getAmount();
        java.lang.String str51 = bookingReceiver0.getAction();
        double double52 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double56 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand59 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CANCEL" + "'", str51, "CANCEL");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        java.lang.String str67 = parkingSpot64.getLicensePlate();
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        bookingSystem63.update((booking.Subject) parkingSpot64);
        boolean boolean71 = parkingSpot64.isOccupied();
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        bookCommand28.doAction();
        bookCommand28.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 10, userType47);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        bookingReceiver55.cancelBooking("hi!", "hi!");
        bookingReceiver55.cancelBooking("", "");
        booking.CancelCommand cancelCommand64 = new booking.CancelCommand(bookingReceiver55, "", "hi!");
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        bookingReceiver68.cancelBooking("hi!", "hi!");
        bookingReceiver68.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        booking.UserType userType79 = booking.UserType.FACULTY;
        bookingReceiver75.bookSpace("", "", 100, userType79);
        double double81 = bookingReceiver68.getRate(userType79);
        bookingReceiver55.bookSpace("BOOK", "EXTEND", (int) (byte) 10, userType79);
        bookingReceiver0.bookSpace("CANCEL", "hi!", 1, userType79);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 8.0d + "'", double81 == 8.0d);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSensor parkingSensor13 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        bookingSystem17.update((booking.Subject) parkingSpot18);
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        bookingSystem23.update((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        parkingSensor41.update((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        parkingSpot42.detach((booking.Observer) parkingSensor57);
        bookingSystem34.update((booking.Subject) parkingSpot42);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot24.detach((booking.Observer) parkingSensor60);
        parkingSensor13.update((booking.Subject) parkingSpot24);
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot24.occupySpot("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: License plate must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        double double48 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver52, "hi!", "hi!", 100, userType62);
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        booking.UserType userType71 = booking.UserType.FACULTY;
        bookingReceiver67.bookSpace("", "", 100, userType71);
        bookingReceiver52.extendBooking("", "", (int) 'a', userType71);
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        double double75 = bookingReceiver52.getRate(userType74);
        bookingReceiver52.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver82 = null;
        booking.BookingReceiver bookingReceiver86 = new booking.BookingReceiver();
        bookingReceiver86.cancelBooking("hi!", "hi!");
        booking.UserType userType90 = booking.UserType.STUDENT;
        double double91 = bookingReceiver86.getRate(userType90);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver82, "BOOK", "hi!", 0, userType90);
        bookingReceiver52.bookSpace("EXTEND", "BOOK", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 1, userType90);
        java.lang.String str95 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 80.0d + "'", double48 == 80.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.STUDENT + "'", userType90.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5.0d + "'", double91 == 5.0d);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "EXTEND" + "'", str95, "EXTEND");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        bookingSystem72.update((booking.Subject) parkingSpot73);
        parkingSpot65.detach((booking.Observer) bookingSystem72);
        parkingSpot52.detach((booking.Observer) bookingSystem72);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot79.detach((booking.Observer) bookingSystem86);
        bookingSystem72.update((booking.Subject) parkingSpot79);
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot79);
        parkingSpot49.detach((booking.Observer) parkingSensor93);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        parkingSpot49.occupySpot("CANCEL");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        booking.BookCommand bookCommand17 = new booking.BookCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (short) 1, userType15);
        bookCommand17.doAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand51);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        booking.UserType userType69 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver58, "hi!", "hi!", (int) (byte) 0, userType69);
        double double71 = bookingReceiver58.getAmount();
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        bookingReceiver75.cancelBooking("hi!", "hi!");
        booking.UserType userType79 = booking.UserType.STUDENT;
        double double80 = bookingReceiver75.getRate(userType79);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver58, "EXTEND", "", (int) (byte) 10, userType79);
        bookCommand81.doAction();
        bookCommand81.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand81);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.NON_FACULTY + "'", userType69.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.STUDENT + "'", userType79.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 5.0d + "'", double80 == 5.0d);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        double double18 = bookingReceiver12.getDeposit();
        java.lang.String str19 = bookingReceiver12.getAction();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        bookingReceiver28.cancelBooking("hi!", "hi!");
        java.lang.String str32 = bookingReceiver28.getAction();
        booking.BookingReceiver bookingReceiver33 = null;
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver33, "hi!", "", 0, userType41);
        double double44 = bookingReceiver28.getRate(userType41);
        booking.UserType userType48 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver28, "BOOK", "EXTEND", (int) (short) 10, userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver23, "CANCEL", "hi!", (int) ' ', userType48);
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) '#', userType48);
        bookingReceiver0.bookSpace("BOOK", "", 0, userType48);
        java.lang.String str53 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        java.lang.String str58 = bookingReceiver57.getAction();
        booking.UserType userType62 = null;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver57, "hi!", "", 100, userType62);
        java.lang.String str64 = bookingReceiver57.getAction();
        booking.UserType userType68 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver57, "hi!", "hi!", (int) (byte) 0, userType68);
        booking.CancelCommand cancelCommand72 = new booking.CancelCommand(bookingReceiver57, "hi!", "BOOK");
        bookingReceiver57.cancelBooking("CANCEL", "BOOK");
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        bookingReceiver79.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver86 = null;
        booking.BookingReceiver bookingReceiver90 = new booking.BookingReceiver();
        booking.UserType userType94 = booking.UserType.FACULTY;
        bookingReceiver90.bookSpace("", "", 100, userType94);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver86, "hi!", "", 0, userType94);
        bookingReceiver79.extendBooking("hi!", "BOOK", 1, userType94);
        bookingReceiver57.extendBooking("hi!", "BOOK", 1, userType94);
        bookingReceiver0.extendBooking("EXTEND", "", 100, userType94);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CANCEL" + "'", str19, "CANCEL");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CANCEL" + "'", str32, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 8.0d + "'", double44 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BOOK" + "'", str53, "BOOK");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.NON_FACULTY + "'", userType68.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.FACULTY + "'", userType94.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        double double12 = bookingReceiver4.getDeposit();
        java.lang.String str13 = bookingReceiver4.getAction();
        bookingReceiver4.cancelBooking("BOOK", "");
        double double17 = bookingReceiver4.getAmount();
        double double18 = bookingReceiver4.getAmount();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        double double26 = bookingReceiver22.getAmount();
        bookingReceiver22.cancelBooking("EXTEND", "hi!");
        java.lang.String str30 = bookingReceiver22.getAction();
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        bookingReceiver34.cancelBooking("hi!", "hi!");
        booking.UserType userType38 = booking.UserType.STUDENT;
        double double39 = bookingReceiver34.getRate(userType38);
        booking.CancelCommand cancelCommand42 = new booking.CancelCommand(bookingReceiver34, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.UserType userType53 = booking.UserType.STUDENT;
        double double54 = bookingReceiver46.getRate(userType53);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver34, "", "hi!", (int) '#', userType53);
        bookingReceiver22.bookSpace("", "hi!", (int) 'a', userType53);
        bookingReceiver4.extendBooking("", "", (int) (byte) 100, userType53);
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", (int) (short) 1, userType53);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CANCEL" + "'", str30, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.STUDENT + "'", userType38.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5.0d + "'", double39 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.STUDENT + "'", userType53.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot66.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        parkingSpot66.occupySpot("BOOK");
        bookingSystem61.update((booking.Subject) parkingSpot66);
        parkingSpot66.freeSpot();
        java.lang.String str78 = parkingSpot66.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot53.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot53.freeSpot();
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem48.update((booking.Subject) parkingSpot53);
        parkingSpot23.attach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        java.lang.String str74 = parkingSpot69.getLicensePlate();
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        parkingSensor76.update((booking.Subject) parkingSpot77);
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        parkingSpot69.detach((booking.Observer) parkingSensor91);
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        bookingSystem48.update((booking.Subject) parkingSpot69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        bookingSystem21.update((booking.Subject) parkingSpot22);
        boolean boolean26 = parkingSpot22.isOccupied();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot22);
        parkingSensor17.update((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        bookingSystem46.update((booking.Subject) parkingSpot47);
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        parkingSensor70.update((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot85);
        parkingSpot71.detach((booking.Observer) parkingSensor86);
        bookingSystem63.update((booking.Subject) parkingSpot71);
        booking.ParkingSensor parkingSensor89 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        parkingSpot53.detach((booking.Observer) parkingSensor89);
        parkingSensor42.update((booking.Subject) parkingSpot53);
        parkingSpot22.attach((booking.Observer) parkingSensor42);
        boolean boolean93 = parkingSpot22.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        java.lang.String str51 = parkingSpot10.getLicensePlate();
        parkingSpot10.freeSpot();
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver0.bookSpace("hi!", "BOOK", (int) (short) 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver46, "", "", (int) (byte) 100, userType61);
        java.lang.String str64 = bookingReceiver46.getAction();
        double double65 = bookingReceiver46.getAmount();
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        booking.UserType userType88 = booking.UserType.FACULTY;
        bookingReceiver84.bookSpace("", "", 100, userType88);
        bookingReceiver69.extendBooking("", "", (int) 'a', userType88);
        bookingReceiver46.bookSpace("hi!", "BOOK", (int) (short) 0, userType88);
        double double92 = bookingReceiver0.getRate(userType88);
        java.lang.String str93 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.0d + "'", double92 == 8.0d);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "BOOK" + "'", str93, "BOOK");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        double double27 = bookingReceiver0.getDeposit();
        java.lang.String str28 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand31 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        cancelCommand31.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CANCEL" + "'", str28, "CANCEL");
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        double double30 = bookingReceiver0.getDeposit();
        java.lang.String str31 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "EXTEND" + "'", str31, "EXTEND");
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        parkingSpot0.attach((booking.Observer) bookingSystem23);
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        bookingSystem49.update((booking.Subject) parkingSpot50);
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        bookingSystem55.update((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        parkingSensor73.update((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor89 = new booking.ParkingSensor((booking.Subject) parkingSpot88);
        parkingSpot74.detach((booking.Observer) parkingSensor89);
        bookingSystem66.update((booking.Subject) parkingSpot74);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot74);
        parkingSpot56.detach((booking.Observer) parkingSensor92);
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        parkingSpot56.freeSpot();
        bookingSystem45.update((booking.Subject) parkingSpot56);
        booking.Subject subject97 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingSystem45.update(subject97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.UserType userType35 = booking.UserType.VISITOR;
        double double36 = bookingReceiver0.getRate(userType35);
        bookingReceiver0.cancelBooking("BOOK", "BOOK");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        bookingReceiver43.extendBooking("hi!", "", 0, userType72);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType72);
        extendCommand76.doAction();
        extendCommand76.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.VISITOR + "'", userType35.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 15.0d + "'", double36 == 15.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.UserType userType62 = booking.UserType.FACULTY;
        bookingReceiver58.bookSpace("", "", 100, userType62);
        bookingReceiver43.extendBooking("", "", (int) 'a', userType62);
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        double double66 = bookingReceiver43.getRate(userType65);
        bookingReceiver43.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver73 = null;
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        bookingReceiver77.cancelBooking("hi!", "hi!");
        booking.UserType userType81 = booking.UserType.STUDENT;
        double double82 = bookingReceiver77.getRate(userType81);
        booking.BookCommand bookCommand83 = new booking.BookCommand(bookingReceiver73, "BOOK", "hi!", 0, userType81);
        bookingReceiver43.bookSpace("EXTEND", "BOOK", (int) (short) -1, userType81);
        bookingReceiver0.bookSpace("BOOK", "", (int) (byte) 100, userType81);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.STUDENT + "'", userType81.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5.0d + "'", double82 == 5.0d);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        bookingReceiver0.cancelBooking("hi!", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        bookingReceiver43.bookSpace("hi!", "hi!", (int) (short) -1, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "", "", 1, userType74);
        double double78 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand81 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        cancelCommand81.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 80.0d + "'", double78 == 80.0d);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        java.lang.String str50 = parkingSpot45.getLicensePlate();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        parkingSensor52.update((booking.Subject) parkingSpot53);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) parkingSensor67);
        parkingSpot45.freeSpot();
        parkingSpot45.occupySpot("CANCEL");
        parkingSpot45.freeSpot();
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        bookingSystem20.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        java.lang.Class<?> wildcardClass77 = parkingSpot45.getClass();
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        java.lang.String str13 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand16 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        cancelCommand16.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        bookingReceiver22.extendBooking("", "", (int) 'a', userType41);
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver12, "", "", 0, userType41);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        booking.UserType userType56 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver45, "hi!", "hi!", (int) (byte) 0, userType56);
        double double58 = bookingReceiver12.getRate(userType56);
        bookingReceiver0.extendBooking("hi!", "", (int) (short) -1, userType56);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        bookingReceiver60.cancelBooking("hi!", "hi!");
        booking.UserType userType64 = booking.UserType.STUDENT;
        double double65 = bookingReceiver60.getRate(userType64);
        booking.CancelCommand cancelCommand68 = new booking.CancelCommand(bookingReceiver60, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        bookingReceiver72.cancelBooking("hi!", "hi!");
        bookingReceiver72.cancelBooking("", "");
        booking.UserType userType79 = booking.UserType.STUDENT;
        double double80 = bookingReceiver72.getRate(userType79);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver60, "", "hi!", (int) '#', userType79);
        double double82 = bookingReceiver0.getRate(userType79);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.NON_FACULTY + "'", userType56.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.STUDENT + "'", userType64.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 5.0d + "'", double65 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.STUDENT + "'", userType79.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 5.0d + "'", double80 == 5.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5.0d + "'", double82 == 5.0d);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        java.lang.String str76 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver0, "hi!", "");
        bookingReceiver0.cancelBooking("EXTEND", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        double double22 = bookingReceiver0.getDeposit();
        booking.UserType userType23 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double24 = bookingReceiver0.getRate(userType23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSpot9.detach((booking.Observer) bookingSystem29);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        bookingSystem29.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot4.attach((booking.Observer) parkingSensor52);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot58.freeSpot();
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot58.detach((booking.Observer) bookingSystem70);
        parkingSpot58.occupySpot("CANCEL");
        parkingSensor52.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        parkingSpot88.occupySpot("hi!");
        bookingSystem87.update((booking.Subject) parkingSpot88);
        parkingSpot80.detach((booking.Observer) bookingSystem87);
        boolean boolean93 = parkingSpot80.isOccupied();
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot80);
        parkingSensor52.update((booking.Subject) parkingSpot80);
        boolean boolean96 = parkingSpot80.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        bookingSystem48.update((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor56 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        bookingSystem54.update((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        bookingSystem80.update((booking.Subject) parkingSpot81);
        parkingSpot73.detach((booking.Observer) bookingSystem80);
        parkingSensor72.update((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
        parkingSpot73.detach((booking.Observer) parkingSensor88);
        bookingSystem65.update((booking.Subject) parkingSpot73);
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot73);
        parkingSpot55.detach((booking.Observer) parkingSensor91);
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        parkingSensor44.update((booking.Subject) parkingSpot55);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        double double15 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.CancelCommand cancelCommand39 = new booking.CancelCommand(bookingReceiver19, "hi!", "hi!");
        double double40 = bookingReceiver19.getAmount();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        booking.UserType userType45 = booking.UserType.STUDENT;
        double double46 = bookingReceiver41.getRate(userType45);
        double double47 = bookingReceiver41.getAmount();
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        double double50 = bookingReceiver48.getDeposit();
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        booking.UserType userType69 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver58, "hi!", "hi!", (int) (byte) 0, userType69);
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver54, "", "", (int) (byte) 100, userType69);
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver54, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        java.lang.String str79 = bookingReceiver78.getAction();
        booking.UserType userType83 = null;
        booking.ExtendCommand extendCommand84 = new booking.ExtendCommand(bookingReceiver78, "hi!", "", 100, userType83);
        booking.UserType userType88 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand89 = new booking.BookCommand(bookingReceiver78, "hi!", "hi!", 100, userType88);
        booking.UserType userType93 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver78, "", "", (int) (short) 1, userType93);
        bookingReceiver54.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType93);
        bookingReceiver48.extendBooking("CANCEL", "hi!", (-1), userType93);
        double double97 = bookingReceiver41.getRate(userType93);
        double double98 = bookingReceiver19.getRate(userType93);
        bookingReceiver0.extendBooking("", "BOOK", (int) (short) 10, userType93);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.STUDENT + "'", userType45.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 5.0d + "'", double46 == 5.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.NON_FACULTY + "'", userType69.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.FACULTY + "'", userType93.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 8.0d + "'", double97 == 8.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 8.0d + "'", double98 == 8.0d);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        java.lang.String str35 = bookingReceiver28.getAction();
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver28, "hi!", "hi!", (int) (byte) 0, userType39);
        double double41 = bookingReceiver28.getAmount();
        java.lang.String str42 = bookingReceiver28.getAction();
        double double43 = bookingReceiver28.getDeposit();
        double double44 = bookingReceiver28.getDeposit();
        booking.CancelCommand cancelCommand47 = new booking.CancelCommand(bookingReceiver28, "", "BOOK");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand47);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        double double75 = bookingReceiver0.getAmount();
        java.lang.String str76 = bookingReceiver0.getAction();
        java.lang.String str77 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSpot26.detach((booking.Observer) bookingSystem46);
        parkingSpot26.occupySpot("CANCEL");
        parkingSensor25.update((booking.Subject) parkingSpot26);
        parkingSensor9.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSensor9.update((booking.Subject) parkingSpot57);
        boolean boolean59 = parkingSpot57.isOccupied();
        boolean boolean60 = parkingSpot57.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot57);
        parkingSpot57.freeSpot();
        parkingSpot57.occupySpot("CANCEL");
        parkingSpot57.occupySpot("CANCEL");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.CommandInvoker commandInvoker31 = new booking.CommandInvoker();
        commandInvoker31.executeCommand();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        bookCommand44.doAction();
        bookCommand44.doAction();
        commandInvoker31.setCommand((booking.ICommand) bookCommand44);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        commandInvoker31.setCommand((booking.ICommand) extendCommand64);
        extendCommand64.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand64);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        parkingSpot27.occupySpot("BOOK");
        parkingSpot27.occupySpot("");
        java.lang.String str47 = parkingSpot27.getLicensePlate();
        parkingSpot27.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        java.lang.String str46 = bookingReceiver39.getAction();
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver39, "hi!", "hi!", (int) (byte) 0, userType50);
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver35, "", "", (int) (byte) 100, userType50);
        booking.CancelCommand cancelCommand55 = new booking.CancelCommand(bookingReceiver35, "hi!", "hi!");
        cancelCommand55.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand55);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand12.doAction();
        java.lang.Class<?> wildcardClass14 = cancelCommand12.getClass();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        parkingSpot3.detach((booking.Observer) parkingSensor18);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot3.attach((booking.Observer) parkingSensor50);
        parkingSpot0.attach((booking.Observer) parkingSensor50);
        parkingSpot0.freeSpot();
        boolean boolean54 = parkingSpot0.isOccupied();
        java.lang.String str55 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        java.lang.String str4 = parkingSpot0.getLicensePlate();
        parkingSpot0.freeSpot();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver8, "", "", 0, userType37);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        double double54 = bookingReceiver8.getRate(userType52);
        double double55 = bookingReceiver0.getRate(userType52);
        double double56 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        java.lang.String str35 = bookingReceiver28.getAction();
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver28, "hi!", "hi!", (int) (byte) 0, userType39);
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (byte) 100, userType39);
        booking.CancelCommand cancelCommand44 = new booking.CancelCommand(bookingReceiver24, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        bookingReceiver24.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType63);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", (int) ' ', userType63);
        booking.CancelCommand cancelCommand69 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType35);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        booking.UserType userType52 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand53 = new booking.BookCommand(bookingReceiver42, "hi!", "hi!", 100, userType52);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        booking.UserType userType64 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand65 = new booking.BookCommand(bookingReceiver54, "hi!", "hi!", 100, userType64);
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        booking.UserType userType73 = booking.UserType.FACULTY;
        bookingReceiver69.bookSpace("", "", 100, userType73);
        bookingReceiver54.extendBooking("", "", (int) 'a', userType73);
        double double76 = bookingReceiver42.getRate(userType73);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "EXTEND", "CANCEL", 0, userType73);
        bookCommand77.doAction();
        bookCommand77.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.FACULTY + "'", userType73.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSensor42.update((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        parkingSpot59.detach((booking.Observer) bookingSystem79);
        parkingSpot59.occupySpot("CANCEL");
        parkingSensor58.update((booking.Subject) parkingSpot59);
        parkingSensor42.update((booking.Subject) parkingSpot59);
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        bookingSystem20.update((booking.Subject) parkingSpot59);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 10, userType21);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.UserType userType28 = booking.UserType.FACULTY;
        bookingReceiver24.bookSpace("", "", 100, userType28);
        bookingReceiver24.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand35 = new booking.CancelCommand(bookingReceiver24, "CANCEL", "");
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        bookingReceiver39.cancelBooking("hi!", "hi!");
        double double43 = bookingReceiver39.getAmount();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        booking.UserType userType73 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand74 = new booking.BookCommand(bookingReceiver63, "hi!", "hi!", 100, userType73);
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        booking.UserType userType82 = booking.UserType.FACULTY;
        bookingReceiver78.bookSpace("", "", 100, userType82);
        bookingReceiver63.extendBooking("", "", (int) 'a', userType82);
        bookingReceiver47.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType82);
        bookingReceiver39.extendBooking("hi!", "hi!", (int) (byte) 10, userType82);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver24, "EXTEND", "EXTEND", (int) 'a', userType82);
        double double88 = bookingReceiver0.getRate(userType82);
        double double89 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.FACULTY + "'", userType73.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType82 + "' != '" + booking.UserType.FACULTY + "'", userType82.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 8.0d + "'", double88 == 8.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        parkingSpot15.occupySpot("EXTEND");
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        double double26 = bookingReceiver19.getDeposit();
        java.lang.String str27 = bookingReceiver19.getAction();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver31.getRate(userType75);
        bookingReceiver19.extendBooking("hi!", "", (int) (short) -1, userType75);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", (int) '4', userType75);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        java.lang.String str51 = parkingSpot10.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        bookingReceiver4.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.UserType userType49 = booking.UserType.FACULTY;
        bookingReceiver45.bookSpace("", "", 100, userType49);
        bookingReceiver30.extendBooking("", "", (int) 'a', userType49);
        double double52 = bookingReceiver18.getRate(userType49);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver4, "BOOK", "", 100, userType49);
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", (int) '#', userType49);
        java.lang.Class<?> wildcardClass55 = userType49.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 8.0d + "'", double52 == 8.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        double double17 = bookingReceiver0.getAmount();
        double double18 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        java.lang.String str79 = bookingReceiver0.getAction();
        double double80 = bookingReceiver0.getDeposit();
        booking.UserType userType84 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "hi!", (int) (short) -1, userType84);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "CANCEL" + "'", str79, "CANCEL");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.NON_FACULTY + "'", userType84.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        booking.UserType userType32 = booking.UserType.FACULTY;
        bookingReceiver28.bookSpace("", "", 100, userType32);
        bookingReceiver13.extendBooking("", "", (int) 'a', userType32);
        booking.UserType userType35 = booking.UserType.NON_FACULTY;
        double double36 = bookingReceiver13.getRate(userType35);
        bookingReceiver13.cancelBooking("BOOK", "hi!");
        java.lang.String str40 = bookingReceiver13.getAction();
        double double41 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        double double47 = bookingReceiver45.getDeposit();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        java.lang.String str62 = bookingReceiver55.getAction();
        booking.UserType userType66 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver55, "hi!", "hi!", (int) (byte) 0, userType66);
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver51, "", "", (int) (byte) 100, userType66);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        java.lang.String str73 = bookingReceiver72.getAction();
        booking.UserType userType77 = null;
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver72, "hi!", "", 100, userType77);
        booking.UserType userType82 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand83 = new booking.BookCommand(bookingReceiver72, "hi!", "hi!", 100, userType82);
        bookingReceiver51.bookSpace("hi!", "hi!", (int) (short) -1, userType82);
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver45, "EXTEND", "BOOK", (int) (byte) -1, userType82);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver13, "CANCEL", "", 0, userType82);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", (int) (byte) 100, userType82);
        java.lang.Class<?> wildcardClass88 = bookCommand87.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.NON_FACULTY + "'", userType35.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CANCEL" + "'", str40, "CANCEL");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.NON_FACULTY + "'", userType66.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + userType82 + "' != '" + booking.UserType.FACULTY + "'", userType82.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        parkingSpot3.detach((booking.Observer) parkingSensor18);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot3.attach((booking.Observer) parkingSensor50);
        parkingSpot0.attach((booking.Observer) parkingSensor50);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.freeSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        parkingSpot59.detach((booking.Observer) bookingSystem69);
        parkingSpot0.detach((booking.Observer) bookingSystem69);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor3 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        parkingSpot4.occupySpot("CANCEL");
        parkingSensor3.update((booking.Subject) parkingSpot4);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        java.lang.String str11 = parkingSpot4.getLicensePlate();
        parkingSpot4.occupySpot("BOOK");
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSensor15.update((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        parkingSensor31.update((booking.Subject) parkingSpot32);
        parkingSpot16.detach((booking.Observer) parkingSensor31);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor48 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        parkingSensor48.update((booking.Subject) parkingSpot49);
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        parkingSpot16.attach((booking.Observer) parkingSensor63);
        parkingSpot16.occupySpot("hi!");
        java.lang.String str67 = parkingSpot16.getLicensePlate();
        boolean boolean68 = parkingSpot16.isOccupied();
        parkingSpot16.freeSpot();
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        boolean boolean85 = parkingSpot72.isOccupied();
        java.lang.String str86 = parkingSpot72.getLicensePlate();
        parkingSpot72.freeSpot();
        bookingSystem71.update((booking.Subject) parkingSpot72);
        boolean boolean89 = parkingSpot72.isOccupied();
        bookingSystem13.update((booking.Subject) parkingSpot72);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor12 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSensor12.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        parkingSpot13.detach((booking.Observer) parkingSensor28);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSensor45.update((booking.Subject) parkingSpot46);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        parkingSpot13.attach((booking.Observer) parkingSensor60);
        parkingSpot13.occupySpot("hi!");
        java.lang.String str64 = parkingSpot13.getLicensePlate();
        boolean boolean65 = parkingSpot13.isOccupied();
        parkingSpot13.freeSpot();
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem10.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        java.lang.String str72 = parkingSpot69.getLicensePlate();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        bookingSystem10.update((booking.Subject) parkingSpot69);
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        parkingSpot0.occupySpot("CANCEL");
        java.lang.String str29 = parkingSpot0.getLicensePlate();
        parkingSpot0.occupySpot("EXTEND");
        java.lang.Class<?> wildcardClass32 = parkingSpot0.getClass();
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        java.lang.String str17 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        double double29 = bookingReceiver21.getDeposit();
        java.lang.String str30 = bookingReceiver21.getAction();
        bookingReceiver21.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver37 = null;
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        booking.UserType userType45 = booking.UserType.STUDENT;
        double double46 = bookingReceiver41.getRate(userType45);
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver37, "BOOK", "hi!", 0, userType45);
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver21, "CANCEL", "BOOK", (int) (short) 0, userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "", "CANCEL", (int) (short) 10, userType45);
        double double50 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CANCEL" + "'", str17, "CANCEL");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.STUDENT + "'", userType45.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 5.0d + "'", double46 == 5.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("EXTEND");
        java.lang.String str16 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        double double16 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        java.lang.String str60 = bookingReceiver53.getAction();
        booking.UserType userType64 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver53, "hi!", "hi!", (int) (byte) 0, userType64);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver37, "CANCEL", "CANCEL", (int) (short) 1, userType64);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        booking.UserType userType80 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver70, "hi!", "hi!", 100, userType80);
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        booking.UserType userType89 = booking.UserType.FACULTY;
        bookingReceiver85.bookSpace("", "", 100, userType89);
        bookingReceiver70.extendBooking("", "", (int) 'a', userType89);
        booking.UserType userType92 = booking.UserType.NON_FACULTY;
        double double93 = bookingReceiver70.getRate(userType92);
        bookingReceiver37.extendBooking("hi!", "", (int) (byte) -1, userType92);
        bookingReceiver20.extendBooking("", "", 100, userType92);
        bookingReceiver0.extendBooking("BOOK", "BOOK", (int) (short) -1, userType92);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.NON_FACULTY + "'", userType64.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.NON_FACULTY + "'", userType92.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        java.lang.Class<?> wildcardClass21 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        java.lang.String str48 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        cancelCommand51.doAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "EXTEND" + "'", str48, "EXTEND");
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        parkingSensor77.update((booking.Subject) parkingSpot78);
        parkingSpot62.detach((booking.Observer) parkingSensor77);
        parkingSpot33.detach((booking.Observer) parkingSensor77);
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        parkingSpot15.attach((booking.Observer) bookingSystem94);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("CANCEL");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        bookingReceiver13.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        double double61 = bookingReceiver27.getRate(userType58);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", 100, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 1, userType58);
        double double64 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver0, "hi!", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        bookingReceiver14.cancelBooking("hi!", "hi!");
        bookingReceiver14.cancelBooking("", "");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver14.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 0, userType21);
        bookCommand23.doAction();
        bookCommand23.doAction();
        bookCommand23.doAction();
        bookCommand23.doAction();
        bookCommand23.doAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getDeposit();
        booking.UserType userType51 = null;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver0, "hi!", "BOOK", (int) (short) 100, userType51);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand52.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        java.lang.String str25 = bookingReceiver0.getAction();
        java.lang.Class<?> wildcardClass26 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "EXTEND" + "'", str25, "EXTEND");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        bookingSystem24.update((booking.Subject) parkingSpot31);
        boolean boolean45 = parkingSpot31.isOccupied();
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        bookingSystem3.update((booking.Subject) parkingSpot31);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        bookingReceiver13.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        double double61 = bookingReceiver27.getRate(userType58);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", 100, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 1, userType58);
        bookCommand63.doAction();
        bookCommand63.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.CommandInvoker commandInvoker13 = new booking.CommandInvoker();
        commandInvoker13.executeCommand();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        extendCommand27.doAction();
        commandInvoker13.setCommand((booking.ICommand) extendCommand27);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        bookCommand41.doAction();
        commandInvoker13.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.UserType userType56 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver46, "hi!", "hi!", 100, userType56);
        bookCommand57.doAction();
        bookCommand57.doAction();
        bookCommand57.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand57);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot49.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.freeSpot();
        boolean boolean67 = parkingSpot65.isOccupied();
        parkingSpot65.freeSpot();
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        bookingSystem76.update((booking.Subject) parkingSpot77);
        parkingSpot69.detach((booking.Observer) bookingSystem76);
        parkingSpot65.detach((booking.Observer) bookingSystem76);
        bookingSystem58.update((booking.Subject) parkingSpot65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        bookingSystem61.update((booking.Subject) parkingSpot62);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSensor57.update((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot76.freeSpot();
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot85);
        booking.ParkingSpot parkingSpot89 = new booking.ParkingSpot();
        parkingSpot89.occupySpot("hi!");
        bookingSystem88.update((booking.Subject) parkingSpot89);
        parkingSpot81.detach((booking.Observer) bookingSystem88);
        parkingSpot76.detach((booking.Observer) bookingSystem88);
        parkingSpot76.freeSpot();
        java.lang.String str96 = parkingSpot76.getLicensePlate();
        java.lang.String str97 = parkingSpot76.getLicensePlate();
        parkingSensor57.update((booking.Subject) parkingSpot76);
        boolean boolean99 = parkingSpot76.isOccupied();
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = null;
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.UserType userType28 = booking.UserType.FACULTY;
        bookingReceiver24.bookSpace("", "", 100, userType28);
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver20, "hi!", "", 0, userType28);
        bookingReceiver0.bookSpace("", "BOOK", (int) (byte) 10, userType28);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        java.lang.String str46 = bookingReceiver39.getAction();
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver39, "hi!", "hi!", (int) (byte) 0, userType50);
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver35, "", "", (int) (byte) 100, userType50);
        java.lang.String str53 = bookingReceiver35.getAction();
        double double54 = bookingReceiver35.getAmount();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        bookingReceiver58.extendBooking("", "", (int) 'a', userType77);
        bookingReceiver35.bookSpace("hi!", "BOOK", (int) (short) 0, userType77);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) (short) 1, userType77);
        double double82 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 8.0d + "'", double82 == 8.0d);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "hi!");
        booking.CancelCommand cancelCommand45 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        java.lang.String str46 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CANCEL" + "'", str46, "CANCEL");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        boolean boolean23 = parkingSpot10.isOccupied();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        double double30 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 776.0d + "'", double30 == 776.0d);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        bookingSystem15.update((booking.Subject) parkingSpot16);
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot22);
        bookingSystem21.update((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSensor39.update((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot54);
        parkingSpot40.detach((booking.Observer) parkingSensor55);
        bookingSystem32.update((booking.Subject) parkingSpot40);
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        parkingSpot22.detach((booking.Observer) parkingSensor58);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        bookingSystem72.update((booking.Subject) parkingSpot73);
        parkingSpot64.detach((booking.Observer) bookingSystem72);
        parkingSpot64.freeSpot();
        parkingSensor58.update((booking.Subject) parkingSpot64);
        bookingSystem11.update((booking.Subject) parkingSpot64);
        java.lang.String str82 = parkingSpot64.getLicensePlate();
        java.lang.String str83 = parkingSpot64.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver0, "hi!", "EXTEND");
        java.lang.String str38 = bookingReceiver0.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType42);
        // The following exception was thrown during execution in test generation
        try {
            extendCommand43.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        double double34 = bookingReceiver26.getDeposit();
        java.lang.String str35 = bookingReceiver26.getAction();
        bookingReceiver26.cancelBooking("BOOK", "");
        double double39 = bookingReceiver26.getAmount();
        double double40 = bookingReceiver26.getAmount();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        double double48 = bookingReceiver44.getAmount();
        bookingReceiver44.cancelBooking("EXTEND", "hi!");
        java.lang.String str52 = bookingReceiver44.getAction();
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        bookingReceiver56.cancelBooking("hi!", "hi!");
        booking.UserType userType60 = booking.UserType.STUDENT;
        double double61 = bookingReceiver56.getRate(userType60);
        booking.CancelCommand cancelCommand64 = new booking.CancelCommand(bookingReceiver56, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        bookingReceiver68.cancelBooking("hi!", "hi!");
        bookingReceiver68.cancelBooking("", "");
        booking.UserType userType75 = booking.UserType.STUDENT;
        double double76 = bookingReceiver68.getRate(userType75);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver56, "", "hi!", (int) '#', userType75);
        bookingReceiver44.bookSpace("", "hi!", (int) 'a', userType75);
        bookingReceiver26.extendBooking("", "", (int) (byte) 100, userType75);
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType75);
        double double81 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CANCEL" + "'", str52, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.STUDENT + "'", userType60.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 5.0d + "'", double61 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.STUDENT + "'", userType75.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5.0d + "'", double76 == 5.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getDeposit();
        booking.UserType userType51 = null;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (byte) 0, userType51);
        java.lang.Class<?> wildcardClass53 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        java.lang.String str52 = parkingSpot10.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSpot27.detach((booking.Observer) bookingSystem47);
        parkingSpot27.occupySpot("CANCEL");
        parkingSensor26.update((booking.Subject) parkingSpot27);
        parkingSensor10.update((booking.Subject) parkingSpot27);
        boolean boolean58 = parkingSpot27.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot27);
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        bookingSystem70.update((booking.Subject) parkingSpot71);
        bookingSystem60.update((booking.Subject) parkingSpot71);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getAmount();
        double double15 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType20);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        cancelCommand30.doAction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        double double15 = bookingReceiver2.getAmount();
        java.lang.String str16 = bookingReceiver2.getAction();
        double double17 = bookingReceiver2.getDeposit();
        double double18 = bookingReceiver2.getDeposit();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        java.lang.String str26 = bookingReceiver22.getAction();
        booking.BookingReceiver bookingReceiver27 = null;
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver27, "hi!", "", 0, userType35);
        double double38 = bookingReceiver22.getRate(userType35);
        booking.UserType userType42 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver22, "BOOK", "EXTEND", (int) (short) 10, userType42);
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver2, "EXTEND", "hi!", (int) 'a', userType42);
        commandInvoker0.setCommand((booking.ICommand) bookCommand44);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CANCEL" + "'", str26, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 8.0d + "'", double38 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver25, "CANCEL", "CANCEL", (int) (short) 1, userType52);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType52);
        double double56 = bookingReceiver0.getDeposit();
        java.lang.String str57 = bookingReceiver0.getAction();
        double double58 = bookingReceiver0.getAmount();
        java.lang.String str59 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "BOOK" + "'", str57, "BOOK");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1000.0d + "'", double58 == 1000.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "BOOK" + "'", str59, "BOOK");
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        parkingSpot0.freeSpot();
        java.lang.String str5 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        bookingReceiver15.cancelBooking("hi!", "hi!");
        double double19 = bookingReceiver15.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        bookingReceiver23.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType58);
        bookingReceiver15.extendBooking("hi!", "hi!", (int) (byte) 10, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) 'a', userType58);
        java.lang.String str64 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "CANCEL" + "'", str64, "CANCEL");
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        java.lang.String str73 = bookingReceiver0.getAction();
        double double74 = bookingReceiver0.getAmount();
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        bookingReceiver79.cancelBooking("hi!", "hi!");
        java.lang.String str83 = bookingReceiver79.getAction();
        booking.BookingReceiver bookingReceiver84 = null;
        booking.BookingReceiver bookingReceiver88 = new booking.BookingReceiver();
        booking.UserType userType92 = booking.UserType.FACULTY;
        bookingReceiver88.bookSpace("", "", 100, userType92);
        booking.BookCommand bookCommand94 = new booking.BookCommand(bookingReceiver84, "hi!", "", 0, userType92);
        double double95 = bookingReceiver79.getRate(userType92);
        bookingReceiver0.extendBooking("hi!", "", 1, userType92);
        java.lang.String str97 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "BOOK" + "'", str73, "BOOK");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-8.0d) + "'", double74 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "BOOK" + "'", str75, "BOOK");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "CANCEL" + "'", str83, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.FACULTY + "'", userType92.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 8.0d + "'", double95 == 8.0d);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "EXTEND" + "'", str97, "EXTEND");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        parkingSpot0.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        bookingSystem51.update((booking.Subject) parkingSpot52);
        parkingSpot44.detach((booking.Observer) bookingSystem51);
        parkingSpot31.detach((booking.Observer) bookingSystem51);
        parkingSpot31.occupySpot("CANCEL");
        parkingSensor30.update((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor62 = new booking.ParkingSensor((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSensor62.update((booking.Subject) parkingSpot63);
        parkingSpot31.detach((booking.Observer) parkingSensor62);
        parkingSpot0.attach((booking.Observer) parkingSensor62);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand20.doAction();
        java.lang.Class<?> wildcardClass22 = cancelCommand20.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        boolean boolean22 = parkingSpot9.isOccupied();
        parkingSpot9.occupySpot("EXTEND");
        bookingSystem3.update((booking.Subject) parkingSpot9);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        boolean boolean65 = parkingSpot52.isOccupied();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot78.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot78.attach((booking.Observer) bookingSystem92);
        parkingSensor67.update((booking.Subject) parkingSpot78);
        parkingSpot49.attach((booking.Observer) parkingSensor67);
        java.lang.String str96 = parkingSpot49.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.UserType userType16 = null;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver11, "hi!", "", 100, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver11, "", "", 0, userType40);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver44, "hi!", "hi!", (int) (byte) 0, userType55);
        double double57 = bookingReceiver11.getRate(userType55);
        double double58 = bookingReceiver0.getRate(userType55);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        bookingReceiver62.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        booking.UserType userType73 = booking.UserType.FACULTY;
        bookingReceiver69.bookSpace("", "", 100, userType73);
        double double75 = bookingReceiver62.getRate(userType73);
        booking.UserType userType79 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver62, "BOOK", "", (int) '#', userType79);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 1, userType79);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.FACULTY + "'", userType73.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 8.0d + "'", double75 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.VISITOR + "'", userType79.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        java.lang.String str24 = bookingReceiver17.getAction();
        booking.UserType userType28 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver17, "hi!", "hi!", (int) (byte) 0, userType28);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver17, "hi!", "BOOK");
        cancelCommand32.doAction();
        cancelCommand32.doAction();
        cancelCommand32.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand32);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.NON_FACULTY + "'", userType28.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        booking.UserType userType21 = booking.UserType.FACULTY;
        bookingReceiver17.bookSpace("", "", 100, userType21);
        bookingReceiver2.extendBooking("", "", (int) 'a', userType21);
        booking.UserType userType24 = booking.UserType.NON_FACULTY;
        double double25 = bookingReceiver2.getRate(userType24);
        bookingReceiver2.cancelBooking("BOOK", "hi!");
        java.lang.String str29 = bookingReceiver2.getAction();
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver2, "BOOK", "EXTEND");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand32);
        java.lang.Class<?> wildcardClass34 = cancelCommand32.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.FACULTY + "'", userType21.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.NON_FACULTY + "'", userType24.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot21.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        parkingSpot21.freeSpot();
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem16.update((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        bookingSystem16.update((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        bookingSystem51.update((booking.Subject) parkingSpot52);
        parkingSpot44.detach((booking.Observer) bookingSystem51);
        parkingSensor43.update((booking.Subject) parkingSpot44);
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        parkingSpot41.detach((booking.Observer) parkingSensor58);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        bookingSystem16.update((booking.Subject) parkingSpot41);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        extendCommand74.doAction();
        extendCommand74.doAction();
        extendCommand74.doAction();
        extendCommand74.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        java.lang.String str17 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        java.lang.String str25 = bookingReceiver18.getAction();
        booking.UserType userType29 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver18, "hi!", "hi!", (int) (byte) 0, userType29);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.UserType userType53 = booking.UserType.FACULTY;
        bookingReceiver49.bookSpace("", "", 100, userType53);
        bookingReceiver34.extendBooking("", "", (int) 'a', userType53);
        bookingReceiver18.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType53);
        double double57 = bookingReceiver0.getRate(userType53);
        java.lang.Class<?> wildcardClass58 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CANCEL" + "'", str17, "CANCEL");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.NON_FACULTY + "'", userType29.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 8.0d + "'", double57 == 8.0d);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver8, "", "", 0, userType37);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        double double54 = bookingReceiver8.getRate(userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        bookingReceiver58.extendBooking("", "", (int) 'a', userType77);
        booking.UserType userType80 = booking.UserType.NON_FACULTY;
        double double81 = bookingReceiver58.getRate(userType80);
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver8, "hi!", "BOOK", 1, userType80);
        booking.BookCommand bookCommand83 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType80);
        bookCommand83.doAction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.NON_FACULTY + "'", userType80.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "EXTEND");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        java.lang.String str77 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CANCEL" + "'", str77, "CANCEL");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        bookingReceiver15.cancelBooking("hi!", "hi!");
        double double19 = bookingReceiver15.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        bookingReceiver23.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType58);
        bookingReceiver15.extendBooking("hi!", "hi!", (int) (byte) 10, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) 'a', userType58);
        bookCommand63.doAction();
        bookCommand63.doAction();
        bookCommand63.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("CANCEL");
        parkingSpot4.freeSpot();
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot38.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        parkingSpot38.freeSpot();
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot38);
        parkingSpot4.attach((booking.Observer) parkingSensor49);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        bookingSystem47.update((booking.Subject) parkingSpot55);
        parkingSpot55.freeSpot();
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot55);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        parkingSpot2.freeSpot();
        boolean boolean34 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        bookingReceiver35.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver35, "CANCEL", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand46);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        bookingReceiver48.cancelBooking("hi!", "hi!");
        booking.UserType userType52 = booking.UserType.STUDENT;
        double double53 = bookingReceiver48.getRate(userType52);
        booking.CancelCommand cancelCommand56 = new booking.CancelCommand(bookingReceiver48, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        bookingReceiver60.cancelBooking("hi!", "hi!");
        bookingReceiver60.cancelBooking("", "");
        booking.UserType userType67 = booking.UserType.STUDENT;
        double double68 = bookingReceiver60.getRate(userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver48, "", "hi!", (int) '#', userType67);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        bookingReceiver73.cancelBooking("hi!", "hi!");
        java.lang.String str77 = bookingReceiver73.getAction();
        booking.BookingReceiver bookingReceiver78 = null;
        booking.BookingReceiver bookingReceiver82 = new booking.BookingReceiver();
        booking.UserType userType86 = booking.UserType.FACULTY;
        bookingReceiver82.bookSpace("", "", 100, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver78, "hi!", "", 0, userType86);
        double double89 = bookingReceiver73.getRate(userType86);
        bookingReceiver48.extendBooking("hi!", "CANCEL", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand93 = new booking.CancelCommand(bookingReceiver48, "hi!", "CANCEL");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand93);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.STUDENT + "'", userType52.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 5.0d + "'", double53 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.STUDENT + "'", userType67.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5.0d + "'", double68 == 5.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CANCEL" + "'", str77, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.Class<?> wildcardClass16 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        java.lang.String str34 = parkingSpot19.getLicensePlate();
        parkingSpot19.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        parkingSpot40.detach((booking.Observer) bookingSystem60);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        bookingSystem74.update((booking.Subject) parkingSpot75);
        parkingSpot67.detach((booking.Observer) bookingSystem74);
        bookingSystem60.update((booking.Subject) parkingSpot67);
        parkingSpot37.attach((booking.Observer) bookingSystem60);
        parkingSpot19.detach((booking.Observer) bookingSystem60);
        parkingSensor16.update((booking.Subject) parkingSpot19);
        booking.Subject subject84 = null;
        // The following exception was thrown during execution in test generation
        try {
            parkingSensor16.update(subject84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        double double45 = bookingReceiver33.getAmount();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        booking.UserType userType59 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver49, "hi!", "hi!", 100, userType59);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        booking.UserType userType68 = booking.UserType.FACULTY;
        bookingReceiver64.bookSpace("", "", 100, userType68);
        bookingReceiver49.extendBooking("", "", (int) 'a', userType68);
        bookingReceiver33.extendBooking("CANCEL", "hi!", (int) (short) 10, userType68);
        double double72 = bookingReceiver33.getDeposit();
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        bookingReceiver76.cancelBooking("hi!", "hi!");
        bookingReceiver76.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        booking.UserType userType87 = booking.UserType.FACULTY;
        bookingReceiver83.bookSpace("", "", 100, userType87);
        double double89 = bookingReceiver76.getRate(userType87);
        booking.UserType userType93 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver76, "BOOK", "", (int) '#', userType93);
        bookingReceiver33.bookSpace("", "BOOK", (int) (short) 1, userType93);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 1, userType93);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.VISITOR + "'", userType93.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        double double51 = bookingReceiver0.getAmount();
        java.lang.String str52 = bookingReceiver0.getAction();
        double double53 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand56 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-8.0d) + "'", double51 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "EXTEND" + "'", str52, "EXTEND");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-8.0d) + "'", double53 == (-8.0d));
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "hi!", "CANCEL", (int) (short) 10, userType21);
        bookCommand23.doAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        double double52 = bookingReceiver0.getDeposit();
        booking.UserType userType56 = null;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) 'a', userType56);
        double double58 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        bookingReceiver43.bookSpace("hi!", "hi!", (int) (short) -1, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "", "", 1, userType74);
        bookCommand77.doAction();
        bookCommand77.doAction();
        bookCommand77.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        bookingReceiver19.cancelBooking("hi!", "hi!");
        java.lang.String str23 = bookingReceiver19.getAction();
        booking.BookingReceiver bookingReceiver24 = null;
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        booking.UserType userType32 = booking.UserType.FACULTY;
        bookingReceiver28.bookSpace("", "", 100, userType32);
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver24, "hi!", "", 0, userType32);
        double double35 = bookingReceiver19.getRate(userType32);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver19, "BOOK", "EXTEND", (int) (short) 10, userType39);
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver14, "CANCEL", "hi!", (int) ' ', userType39);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        bookingReceiver42.cancelBooking("hi!", "hi!");
        java.lang.String str46 = bookingReceiver42.getAction();
        booking.BookingReceiver bookingReceiver47 = null;
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver47, "hi!", "", 0, userType55);
        double double58 = bookingReceiver42.getRate(userType55);
        double double59 = bookingReceiver14.getRate(userType55);
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 0, userType55);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CANCEL" + "'", str23, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 8.0d + "'", double35 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CANCEL" + "'", str46, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 8.0d + "'", double58 == 8.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8.0d + "'", double59 == 8.0d);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        parkingSpot0.attach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        parkingSensor46.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor62 = new booking.ParkingSensor((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        bookingSystem83.update((booking.Subject) parkingSpot84);
        parkingSpot76.detach((booking.Observer) bookingSystem83);
        parkingSpot63.detach((booking.Observer) bookingSystem83);
        parkingSpot63.occupySpot("CANCEL");
        parkingSensor62.update((booking.Subject) parkingSpot63);
        parkingSensor46.update((booking.Subject) parkingSpot63);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot63);
        bookingSystem23.update((booking.Subject) parkingSpot63);
        java.lang.Class<?> wildcardClass96 = parkingSpot63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean14 = parkingSpot10.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType27);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver12, "hi!", "hi!");
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver12, "", "CANCEL", (int) (byte) 1, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) (short) 1, userType36);
        double double39 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver18, "", "", 0, userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "hi!", "", 1, userType47);
        double double52 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        bookingReceiver17.cancelBooking("", "");
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver17, "", "hi!");
        cancelCommand26.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand26);
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver29, "hi!", "hi!", 100, userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.UserType userType48 = booking.UserType.FACULTY;
        bookingReceiver44.bookSpace("", "", 100, userType48);
        bookingReceiver29.extendBooking("", "", (int) 'a', userType48);
        booking.UserType userType51 = booking.UserType.NON_FACULTY;
        double double52 = bookingReceiver29.getRate(userType51);
        booking.CancelCommand cancelCommand55 = new booking.CancelCommand(bookingReceiver29, "EXTEND", "BOOK");
        cancelCommand55.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand55);
        cancelCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.NON_FACULTY + "'", userType51.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSensor parkingSensor13 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        bookingSystem17.update((booking.Subject) parkingSpot18);
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        bookingSystem23.update((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        parkingSensor41.update((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        parkingSpot42.detach((booking.Observer) parkingSensor57);
        bookingSystem34.update((booking.Subject) parkingSpot42);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot24.detach((booking.Observer) parkingSensor60);
        parkingSensor13.update((booking.Subject) parkingSpot24);
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot24);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        boolean boolean45 = parkingSpot32.isOccupied();
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        parkingSpot59.detach((booking.Observer) bookingSystem79);
        bookingSystem53.update((booking.Subject) parkingSpot59);
        parkingSpot32.detach((booking.Observer) bookingSystem53);
        parkingSpot4.attach((booking.Observer) bookingSystem53);
        parkingSpot4.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        bookCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        booking.BookingReceiver bookingReceiver30 = null;
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.UserType userType56 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver46, "hi!", "hi!", 100, userType56);
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.UserType userType65 = booking.UserType.FACULTY;
        bookingReceiver61.bookSpace("", "", 100, userType65);
        bookingReceiver46.extendBooking("", "", (int) 'a', userType65);
        double double68 = bookingReceiver34.getRate(userType65);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver30, "hi!", "EXTEND", 10, userType65);
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", (int) (short) 10, userType65);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 8.0d + "'", double68 == 8.0d);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        parkingSpot18.occupySpot("EXTEND");
        java.lang.String str52 = parkingSpot18.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        bookingReceiver5.cancelBooking("hi!", "hi!");
        java.lang.String str9 = bookingReceiver5.getAction();
        booking.BookingReceiver bookingReceiver10 = null;
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.UserType userType18 = booking.UserType.FACULTY;
        bookingReceiver14.bookSpace("", "", 100, userType18);
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver10, "hi!", "", 0, userType18);
        double double21 = bookingReceiver5.getRate(userType18);
        booking.UserType userType25 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver5, "BOOK", "EXTEND", (int) (short) 10, userType25);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) ' ', userType25);
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType18 + "' != '" + booking.UserType.FACULTY + "'", userType18.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 8.0d + "'", double21 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        double double20 = bookingReceiver16.getAmount();
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        java.lang.String str31 = bookingReceiver24.getAction();
        booking.UserType userType35 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver24, "hi!", "hi!", (int) (byte) 0, userType35);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.UserType userType59 = booking.UserType.FACULTY;
        bookingReceiver55.bookSpace("", "", 100, userType59);
        bookingReceiver40.extendBooking("", "", (int) 'a', userType59);
        bookingReceiver24.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType59);
        bookingReceiver16.extendBooking("hi!", "hi!", (int) (byte) 10, userType59);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", 1, userType59);
        java.lang.String str65 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand68 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        cancelCommand68.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.NON_FACULTY + "'", userType35.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "EXTEND" + "'", str65, "EXTEND");
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getDeposit();
        booking.UserType userType51 = null;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (byte) 0, userType51);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand52.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        parkingSpot0.freeSpot();
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        extendCommand32.doAction();
        extendCommand32.doAction();
        extendCommand32.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSensor57.update((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        parkingSpot58.detach((booking.Observer) parkingSensor73);
        bookingSystem50.update((booking.Subject) parkingSpot58);
        parkingSpot58.freeSpot();
        parkingSensor42.update((booking.Subject) parkingSpot58);
        java.lang.String str78 = parkingSpot58.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand30);
        commandInvoker0.executeCommand();
        java.lang.Class<?> wildcardClass39 = commandInvoker0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        java.lang.String str10 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        bookingReceiver14.extendBooking("", "", (int) 'a', userType33);
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        double double37 = bookingReceiver14.getRate(userType36);
        booking.CancelCommand cancelCommand40 = new booking.CancelCommand(bookingReceiver14, "EXTEND", "BOOK");
        bookingReceiver14.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        bookingReceiver47.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        java.lang.String str62 = bookingReceiver61.getAction();
        booking.UserType userType66 = null;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver61, "hi!", "", 100, userType66);
        booking.UserType userType71 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand72 = new booking.BookCommand(bookingReceiver61, "hi!", "hi!", 100, userType71);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        booking.BookingReceiver bookingReceiver88 = new booking.BookingReceiver();
        booking.UserType userType92 = booking.UserType.FACULTY;
        bookingReceiver88.bookSpace("", "", 100, userType92);
        bookingReceiver73.extendBooking("", "", (int) 'a', userType92);
        double double95 = bookingReceiver61.getRate(userType92);
        booking.ExtendCommand extendCommand96 = new booking.ExtendCommand(bookingReceiver47, "BOOK", "", 100, userType92);
        bookingReceiver14.extendBooking("", "", (int) '#', userType92);
        booking.ExtendCommand extendCommand98 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (-1), userType92);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.FACULTY + "'", userType92.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 8.0d + "'", double95 == 8.0d);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        boolean boolean19 = parkingSpot2.isOccupied();
        parkingSpot2.occupySpot("");
        parkingSpot2.occupySpot("EXTEND");
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSensor25.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        parkingSpot26.detach((booking.Observer) parkingSensor41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSpot43.detach((booking.Observer) bookingSystem63);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot70.detach((booking.Observer) bookingSystem77);
        bookingSystem63.update((booking.Subject) parkingSpot70);
        booking.ParkingSensor parkingSensor84 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        parkingSensor41.update((booking.Subject) parkingSpot70);
        parkingSpot2.attach((booking.Observer) parkingSensor41);
        parkingSpot2.occupySpot("hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        parkingSpot11.detach((booking.Observer) bookingSystem31);
        parkingSpot11.occupySpot("CANCEL");
        parkingSpot11.occupySpot("EXTEND");
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        bookingSystem10.update((booking.Subject) parkingSpot11);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        commandInvoker0.setCommand((booking.ICommand) extendCommand63);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        java.lang.String str72 = bookingReceiver65.getAction();
        booking.UserType userType76 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver65, "hi!", "hi!", (int) (byte) 0, userType76);
        extendCommand77.doAction();
        extendCommand77.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand77);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.NON_FACULTY + "'", userType76.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        boolean boolean54 = parkingSpot2.isOccupied();
        parkingSpot2.freeSpot();
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        bookingSystem61.update((booking.Subject) parkingSpot62);
        java.lang.String str67 = parkingSpot62.getLicensePlate();
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        bookingSystem57.update((booking.Subject) parkingSpot62);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        booking.CancelCommand cancelCommand81 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        booking.CancelCommand cancelCommand84 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.ParkingSpot parkingSpot91 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot91);
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot91);
        parkingSpot68.detach((booking.Observer) parkingSensor93);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        bookingReceiver0.cancelBooking("BOOK", "BOOK");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-8.0d) + "'", double81 == (-8.0d));
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        double double13 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        extendCommand33.doAction();
        commandInvoker19.setCommand((booking.ICommand) extendCommand33);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver37, "BOOK", "CANCEL");
        commandInvoker19.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        bookingReceiver65.cancelBooking("hi!", "hi!");
        bookingReceiver65.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        booking.UserType userType76 = booking.UserType.FACULTY;
        bookingReceiver72.bookSpace("", "", 100, userType76);
        double double78 = bookingReceiver65.getRate(userType76);
        booking.UserType userType82 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver65, "BOOK", "", (int) '#', userType82);
        extendCommand83.doAction();
        extendCommand83.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand83);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 8.0d + "'", double78 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType82 + "' != '" + booking.UserType.VISITOR + "'", userType82.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        bookingReceiver43.bookSpace("hi!", "hi!", (int) (short) -1, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "", "", 1, userType74);
        bookCommand77.doAction();
        java.lang.Class<?> wildcardClass79 = bookCommand77.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        java.lang.String str82 = bookingReceiver0.getAction();
        java.lang.String str83 = bookingReceiver0.getAction();
        double double84 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-8.0d) + "'", double81 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "BOOK" + "'", str82, "BOOK");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "BOOK" + "'", str83, "BOOK");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-8.0d) + "'", double84 == (-8.0d));
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        double double25 = bookingReceiver0.getDeposit();
        double double26 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSensor50.update((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot65);
        parkingSpot51.detach((booking.Observer) parkingSensor66);
        parkingSpot18.detach((booking.Observer) parkingSensor66);
        parkingSpot18.occupySpot("EXTEND");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getAmount();
        java.lang.String str51 = bookingReceiver0.getAction();
        double double52 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double56 = bookingReceiver0.getAmount();
        double double57 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CANCEL" + "'", str51, "CANCEL");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        boolean boolean32 = parkingSpot19.isOccupied();
        parkingSpot19.occupySpot("EXTEND");
        parkingSpot19.freeSpot();
        parkingSensor17.update((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        parkingSpot37.detach((booking.Observer) bookingSystem57);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.Observer observer65 = null;
        parkingSpot37.detach(observer65);
        parkingSensor17.update((booking.Subject) parkingSpot37);
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSpot15.detach((booking.Observer) bookingSystem35);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        bookingSystem35.update((booking.Subject) parkingSpot42);
        booking.ParkingSensor parkingSensor56 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        bookingSystem80.update((booking.Subject) parkingSpot81);
        parkingSpot73.detach((booking.Observer) bookingSystem80);
        parkingSensor72.update((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
        parkingSpot73.detach((booking.Observer) parkingSensor88);
        bookingSystem65.update((booking.Subject) parkingSpot73);
        parkingSpot73.freeSpot();
        parkingSensor57.update((booking.Subject) parkingSpot73);
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot73);
        parkingSpot0.attach((booking.Observer) parkingSensor93);
        boolean boolean95 = parkingSpot0.isOccupied();
        boolean boolean96 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("CANCEL");
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = null;
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        bookingReceiver28.cancelBooking("hi!", "hi!");
        bookingReceiver28.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        double double41 = bookingReceiver28.getRate(userType39);
        java.lang.String str42 = bookingReceiver28.getAction();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver46.getAmount();
        java.lang.String str60 = bookingReceiver46.getAction();
        double double61 = bookingReceiver46.getDeposit();
        double double62 = bookingReceiver46.getDeposit();
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        bookingReceiver66.cancelBooking("hi!", "hi!");
        java.lang.String str70 = bookingReceiver66.getAction();
        booking.BookingReceiver bookingReceiver71 = null;
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        booking.UserType userType79 = booking.UserType.FACULTY;
        bookingReceiver75.bookSpace("", "", 100, userType79);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver71, "hi!", "", 0, userType79);
        double double82 = bookingReceiver66.getRate(userType79);
        booking.UserType userType86 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver66, "BOOK", "EXTEND", (int) (short) 10, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver46, "EXTEND", "hi!", (int) 'a', userType86);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver28, "", "", 1, userType86);
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver24, "EXTEND", "EXTEND", 0, userType86);
        bookingReceiver0.bookSpace("CANCEL", "hi!", (int) (byte) 1, userType86);
        java.lang.String str92 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand95 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 8.0d + "'", double41 == 8.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CANCEL" + "'", str42, "CANCEL");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "CANCEL" + "'", str70, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 8.0d + "'", double82 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "BOOK" + "'", str92, "BOOK");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker18 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (short) 1, userType34);
        commandInvoker18.setCommand((booking.ICommand) extendCommand35);
        extendCommand35.doAction();
        extendCommand35.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand35);
        booking.BookingReceiver bookingReceiver40 = null;
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        booking.UserType userType48 = booking.UserType.STUDENT;
        double double49 = bookingReceiver44.getRate(userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver40, "BOOK", "hi!", 0, userType48);
        commandInvoker0.setCommand((booking.ICommand) bookCommand50);
        // The following exception was thrown during execution in test generation
        try {
            commandInvoker0.executeCommand();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.STUDENT + "'", userType48.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        booking.CancelCommand cancelCommand52 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        cancelCommand52.doAction();
        cancelCommand52.doAction();
        cancelCommand52.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        booking.UserType userType24 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver13, "hi!", "hi!", (int) (byte) 0, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver13, "hi!", "BOOK");
        bookingReceiver13.cancelBooking("CANCEL", "BOOK");
        java.lang.String str32 = bookingReceiver13.getAction();
        double double33 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        booking.UserType userType57 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand58 = new booking.BookCommand(bookingReceiver47, "hi!", "hi!", 100, userType57);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        booking.UserType userType66 = booking.UserType.FACULTY;
        bookingReceiver62.bookSpace("", "", 100, userType66);
        bookingReceiver47.extendBooking("", "", (int) 'a', userType66);
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver37, "", "", 0, userType66);
        bookingReceiver13.bookSpace("EXTEND", "", (int) (byte) 100, userType66);
        double double71 = bookingReceiver0.getRate(userType66);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.NON_FACULTY + "'", userType24.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CANCEL" + "'", str32, "CANCEL");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 8.0d + "'", double71 == 8.0d);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        bookingReceiver4.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.UserType userType49 = booking.UserType.FACULTY;
        bookingReceiver45.bookSpace("", "", 100, userType49);
        bookingReceiver30.extendBooking("", "", (int) 'a', userType49);
        double double52 = bookingReceiver18.getRate(userType49);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver4, "BOOK", "", 100, userType49);
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", (int) '#', userType49);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand54.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 8.0d + "'", double52 == 8.0d);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (short) 100, userType21);
        java.lang.String str24 = bookingReceiver0.getAction();
        double double25 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CANCEL" + "'", str24, "CANCEL");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        java.lang.String str50 = bookingReceiver43.getAction();
        double double51 = bookingReceiver43.getDeposit();
        java.lang.String str52 = bookingReceiver43.getAction();
        double double53 = bookingReceiver43.getAmount();
        booking.BookingReceiver bookingReceiver57 = null;
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        java.lang.String str62 = bookingReceiver61.getAction();
        booking.UserType userType66 = null;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver61, "hi!", "", 100, userType66);
        booking.UserType userType71 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand72 = new booking.BookCommand(bookingReceiver61, "hi!", "hi!", 100, userType71);
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.UserType userType80 = booking.UserType.FACULTY;
        bookingReceiver76.bookSpace("", "", 100, userType80);
        bookingReceiver61.extendBooking("", "", (int) 'a', userType80);
        booking.UserType userType83 = booking.UserType.NON_FACULTY;
        double double84 = bookingReceiver61.getRate(userType83);
        booking.BookCommand bookCommand85 = new booking.BookCommand(bookingReceiver57, "EXTEND", "", 100, userType83);
        bookingReceiver43.bookSpace("CANCEL", "", 1, userType83);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType83);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 80.0d + "'", double39 == 80.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.NON_FACULTY + "'", userType83.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        bookingReceiver19.bookSpace("hi!", "hi!", (int) (short) -1, userType50);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        java.lang.String str67 = bookingReceiver60.getAction();
        booking.UserType userType71 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver60, "hi!", "hi!", (int) (byte) 0, userType71);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver56, "", "", (int) (byte) 100, userType71);
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        java.lang.String str78 = bookingReceiver77.getAction();
        booking.UserType userType82 = null;
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver77, "hi!", "", 100, userType82);
        booking.UserType userType87 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver77, "hi!", "hi!", 100, userType87);
        bookingReceiver56.bookSpace("hi!", "hi!", (int) (short) -1, userType87);
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver19, "hi!", "", 0, userType87);
        commandInvoker0.setCommand((booking.ICommand) bookCommand90);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.NON_FACULTY + "'", userType71.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver13.extendBooking("hi!", "", 0, userType42);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) -1, userType42);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        booking.UserType userType70 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver60, "hi!", "hi!", 100, userType70);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        booking.UserType userType79 = booking.UserType.FACULTY;
        bookingReceiver75.bookSpace("", "", 100, userType79);
        bookingReceiver60.extendBooking("", "", (int) 'a', userType79);
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver50, "", "", 0, userType79);
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        java.lang.String str84 = bookingReceiver83.getAction();
        booking.UserType userType88 = null;
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver83, "hi!", "", 100, userType88);
        java.lang.String str90 = bookingReceiver83.getAction();
        booking.UserType userType94 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand95 = new booking.ExtendCommand(bookingReceiver83, "hi!", "hi!", (int) (byte) 0, userType94);
        double double96 = bookingReceiver50.getRate(userType94);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver0, "", "", 0, userType94);
        bookCommand97.doAction();
        bookCommand97.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.FACULTY + "'", userType70.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.NON_FACULTY + "'", userType94.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        bookingReceiver60.cancelBooking("hi!", "hi!");
        double double64 = bookingReceiver60.getAmount();
        bookingReceiver60.cancelBooking("EXTEND", "hi!");
        java.lang.String str68 = bookingReceiver60.getAction();
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        bookingReceiver72.cancelBooking("hi!", "hi!");
        booking.UserType userType76 = booking.UserType.STUDENT;
        double double77 = bookingReceiver72.getRate(userType76);
        booking.CancelCommand cancelCommand80 = new booking.CancelCommand(bookingReceiver72, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        bookingReceiver84.cancelBooking("hi!", "hi!");
        bookingReceiver84.cancelBooking("", "");
        booking.UserType userType91 = booking.UserType.STUDENT;
        double double92 = bookingReceiver84.getRate(userType91);
        booking.BookCommand bookCommand93 = new booking.BookCommand(bookingReceiver72, "", "hi!", (int) '#', userType91);
        bookingReceiver60.bookSpace("", "hi!", (int) 'a', userType91);
        double double95 = bookingReceiver53.getRate(userType91);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver0, "CANCEL", "", (int) (short) 10, userType91);
        bookCommand96.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "CANCEL" + "'", str68, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.STUDENT + "'", userType76.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 5.0d + "'", double77 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.STUDENT + "'", userType91.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 5.0d + "'", double92 == 5.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5.0d + "'", double95 == 5.0d);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        bookingReceiver5.cancelBooking("hi!", "hi!");
        java.lang.String str9 = bookingReceiver5.getAction();
        booking.BookingReceiver bookingReceiver10 = null;
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.UserType userType18 = booking.UserType.FACULTY;
        bookingReceiver14.bookSpace("", "", 100, userType18);
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver10, "hi!", "", 0, userType18);
        double double21 = bookingReceiver5.getRate(userType18);
        booking.UserType userType25 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver5, "BOOK", "EXTEND", (int) (short) 10, userType25);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) ' ', userType25);
        double double28 = bookingReceiver0.getAmount();
        booking.UserType userType32 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.extendBooking("", "hi!", (int) (byte) 100, userType32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.UserType.ordinal()\" because \"userType\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType18 + "' != '" + booking.UserType.FACULTY + "'", userType18.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 8.0d + "'", double21 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getDeposit();
        double double51 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        double double49 = bookingReceiver0.getAmount();
        double double50 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-8.0d) + "'", double49 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.freeSpot();
        boolean boolean43 = parkingSpot41.isOccupied();
        parkingSpot41.freeSpot();
        bookingSystem20.update((booking.Subject) parkingSpot41);
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSpot60.detach((booking.Observer) bookingSystem67);
        parkingSpot47.detach((booking.Observer) bookingSystem67);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        bookingSystem67.update((booking.Subject) parkingSpot74);
        parkingSpot74.freeSpot();
        java.lang.String str89 = parkingSpot74.getLicensePlate();
        bookingSystem46.update((booking.Subject) parkingSpot74);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand91 = new booking.CancelCommand(bookingReceiver0, "", "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookCommand32.doAction();
        bookCommand32.doAction();
        commandInvoker19.setCommand((booking.ICommand) bookCommand32);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        bookCommand48.doAction();
        bookCommand48.doAction();
        bookCommand48.doAction();
        bookCommand48.doAction();
        commandInvoker19.setCommand((booking.ICommand) bookCommand48);
        bookCommand48.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand48);
        bookCommand48.doAction();
        bookCommand48.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.String str17 = parkingSpot2.getLicensePlate();
        java.lang.String str18 = parkingSpot2.getLicensePlate();
        parkingSpot2.freeSpot();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        double double20 = bookingReceiver0.getAmount();
        double double21 = bookingReceiver0.getAmount();
        java.lang.String str22 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        booking.UserType userType38 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver27, "hi!", "hi!", (int) (byte) 0, userType38);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver23, "", "", (int) (byte) 100, userType38);
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver23, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        java.lang.String str52 = bookingReceiver51.getAction();
        booking.UserType userType56 = null;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver51, "hi!", "", 100, userType56);
        java.lang.String str58 = bookingReceiver51.getAction();
        booking.UserType userType62 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver51, "hi!", "hi!", (int) (byte) 0, userType62);
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver47, "", "", (int) (byte) 100, userType62);
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver47, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        java.lang.String str72 = bookingReceiver71.getAction();
        booking.UserType userType76 = null;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver71, "hi!", "", 100, userType76);
        booking.UserType userType81 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver71, "hi!", "hi!", 100, userType81);
        booking.UserType userType86 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver71, "", "", (int) (short) 1, userType86);
        bookingReceiver47.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType86);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver23, "EXTEND", "", (int) ' ', userType86);
        double double90 = bookingReceiver0.getRate(userType86);
        bookingReceiver0.cancelBooking("EXTEND", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CANCEL" + "'", str22, "CANCEL");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.NON_FACULTY + "'", userType38.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.NON_FACULTY + "'", userType62.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.FACULTY + "'", userType81.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 8.0d + "'", double90 == 8.0d);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver13, "hi!", "CANCEL", (int) ' ', userType63);
        bookingReceiver0.bookSpace("hi!", "hi!", 10, userType63);
        double double66 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand69 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        bookingReceiver22.extendBooking("", "", (int) 'a', userType41);
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver12, "", "", 0, userType41);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        booking.UserType userType56 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver45, "hi!", "hi!", (int) (byte) 0, userType56);
        double double58 = bookingReceiver12.getRate(userType56);
        bookingReceiver0.extendBooking("hi!", "", (int) (short) -1, userType56);
        booking.CancelCommand cancelCommand62 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double66 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.NON_FACULTY + "'", userType56.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        boolean boolean58 = parkingSpot45.isOccupied();
        java.lang.String str59 = parkingSpot45.getLicensePlate();
        parkingSpot45.occupySpot("CANCEL");
        boolean boolean62 = parkingSpot45.isOccupied();
        java.lang.String str63 = parkingSpot45.getLicensePlate();
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        parkingSpot27.detach((booking.Observer) bookingSystem64);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver7 = null;
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        booking.BookCommand bookCommand17 = new booking.BookCommand(bookingReceiver7, "hi!", "", 0, userType15);
        bookingReceiver0.extendBooking("hi!", "BOOK", 1, userType15);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.UserType userType26 = booking.UserType.FACULTY;
        bookingReceiver22.bookSpace("", "", 100, userType26);
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 0, userType26);
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        double double52 = bookingReceiver0.getDeposit();
        booking.UserType userType56 = null;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) 'a', userType56);
        double double58 = bookingReceiver0.getDeposit();
        double double59 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        double double15 = bookingReceiver0.getDeposit();
        double double16 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        java.lang.String str24 = bookingReceiver20.getAction();
        booking.BookingReceiver bookingReceiver25 = null;
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver25, "hi!", "", 0, userType33);
        double double36 = bookingReceiver20.getRate(userType33);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "EXTEND", (int) (short) 10, userType40);
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) 'a', userType40);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        java.lang.String str50 = bookingReceiver43.getAction();
        booking.UserType userType54 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver43, "hi!", "hi!", (int) (byte) 0, userType54);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver43, "hi!", "BOOK");
        bookingReceiver43.cancelBooking("CANCEL", "BOOK");
        double double62 = bookingReceiver43.getAmount();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        bookingReceiver63.cancelBooking("hi!", "hi!");
        bookingReceiver63.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        booking.UserType userType74 = booking.UserType.FACULTY;
        bookingReceiver70.bookSpace("", "", 100, userType74);
        double double76 = bookingReceiver63.getRate(userType74);
        booking.UserType userType80 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver63, "BOOK", "", (int) '#', userType80);
        double double82 = bookingReceiver43.getRate(userType80);
        double double83 = bookingReceiver0.getRate(userType80);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        java.lang.Class<?> wildcardClass87 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CANCEL" + "'", str24, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 8.0d + "'", double36 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.NON_FACULTY + "'", userType54.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.VISITOR + "'", userType80.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 15.0d + "'", double82 == 15.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 15.0d + "'", double83 == 15.0d);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        java.lang.String str35 = bookingReceiver28.getAction();
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver28, "hi!", "hi!", (int) (byte) 0, userType39);
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (byte) 100, userType39);
        booking.CancelCommand cancelCommand44 = new booking.CancelCommand(bookingReceiver24, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        bookingReceiver24.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType63);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", (int) ' ', userType63);
        extendCommand66.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver0, "CANCEL", "EXTEND", (int) '#', userType37);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        double double48 = bookingReceiver44.getAmount();
        bookingReceiver44.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.UserType userType59 = booking.UserType.FACULTY;
        bookingReceiver55.bookSpace("", "", 100, userType59);
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver44, "", "", (int) (short) 100, userType59);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", 1, userType59);
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        boolean boolean24 = parkingSpot11.isOccupied();
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        bookingSystem45.update((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) bookingSystem45);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot38.detach((booking.Observer) bookingSystem58);
        bookingSystem32.update((booking.Subject) parkingSpot38);
        parkingSpot11.detach((booking.Observer) bookingSystem32);
        parkingSpot11.occupySpot("hi!");
        parkingSensor10.update((booking.Subject) parkingSpot11);
        java.lang.String str70 = parkingSpot11.getLicensePlate();
        boolean boolean71 = parkingSpot11.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        bookingReceiver22.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        double double35 = bookingReceiver22.getRate(userType33);
        booking.UserType userType39 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver22, "BOOK", "", (int) '#', userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        java.lang.String str55 = bookingReceiver48.getAction();
        booking.UserType userType59 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver48, "hi!", "hi!", (int) (byte) 0, userType59);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver44, "", "", (int) (byte) 100, userType59);
        booking.BookCommand bookCommand62 = new booking.BookCommand(bookingReceiver22, "CANCEL", "EXTEND", (int) '#', userType59);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver22, "CANCEL", "CANCEL", (int) (short) -1, userType76);
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (short) -1, userType76);
        booking.CancelCommand cancelCommand82 = new booking.CancelCommand(bookingReceiver0, "hi!", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 8.0d + "'", double35 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.VISITOR + "'", userType39.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.NON_FACULTY + "'", userType59.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot2.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        parkingSpot60.detach((booking.Observer) bookingSystem70);
        bookingSystem58.update((booking.Subject) parkingSpot60);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        double double8 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        bookingReceiver12.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        booking.UserType userType38 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver27, "hi!", "hi!", (int) (byte) 0, userType38);
        double double40 = bookingReceiver27.getAmount();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        booking.UserType userType48 = booking.UserType.STUDENT;
        double double49 = bookingReceiver44.getRate(userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver27, "EXTEND", "", (int) (byte) 10, userType48);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver12, "hi!", "BOOK", (int) (short) 1, userType48);
        bookingReceiver0.bookSpace("CANCEL", "hi!", 10, userType48);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.NON_FACULTY + "'", userType38.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.STUDENT + "'", userType48.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver34, "", "BOOK");
        java.lang.String str49 = bookingReceiver34.getAction();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        booking.UserType userType54 = booking.UserType.STUDENT;
        double double55 = bookingReceiver50.getRate(userType54);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver50, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        bookingReceiver62.cancelBooking("", "");
        booking.UserType userType69 = booking.UserType.STUDENT;
        double double70 = bookingReceiver62.getRate(userType69);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver50, "", "hi!", (int) '#', userType69);
        double double72 = bookingReceiver34.getRate(userType69);
        bookingReceiver0.bookSpace("", "CANCEL", (int) (byte) 100, userType69);
        bookingReceiver0.cancelBooking("BOOK", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.STUDENT + "'", userType54.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.STUDENT + "'", userType69.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5.0d + "'", double70 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        java.lang.String str76 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver0, "hi!", "");
        cancelCommand79.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        double double27 = bookingReceiver0.getDeposit();
        java.lang.String str28 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand31 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.CancelCommand cancelCommand50 = new booking.CancelCommand(bookingReceiver35, "hi!", "BOOK");
        bookingReceiver35.cancelBooking("CANCEL", "BOOK");
        java.lang.String str54 = bookingReceiver35.getAction();
        double double55 = bookingReceiver35.getDeposit();
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        booking.UserType userType88 = booking.UserType.FACULTY;
        bookingReceiver84.bookSpace("", "", 100, userType88);
        bookingReceiver69.extendBooking("", "", (int) 'a', userType88);
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver59, "", "", 0, userType88);
        bookingReceiver35.bookSpace("EXTEND", "", (int) (byte) 100, userType88);
        bookingReceiver0.extendBooking("BOOK", "hi!", (int) ' ', userType88);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CANCEL" + "'", str28, "CANCEL");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CANCEL" + "'", str54, "CANCEL");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "hi!", "CANCEL", (int) (short) 10, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        booking.UserType userType38 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver27, "hi!", "hi!", (int) (byte) 0, userType38);
        double double40 = bookingReceiver27.getAmount();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        booking.UserType userType48 = booking.UserType.STUDENT;
        double double49 = bookingReceiver44.getRate(userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver27, "EXTEND", "", (int) (byte) 10, userType48);
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", (int) 'a', userType48);
        double double52 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.NON_FACULTY + "'", userType38.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.STUDENT + "'", userType48.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        boolean boolean10 = parkingSpot4.isOccupied();
        parkingSpot4.occupySpot("BOOK");
        java.lang.String str13 = parkingSpot4.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "BOOK" + "'", str13, "BOOK");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        java.lang.String str10 = bookingReceiver9.getAction();
        booking.UserType userType14 = null;
        booking.ExtendCommand extendCommand15 = new booking.ExtendCommand(bookingReceiver9, "hi!", "", 100, userType14);
        double double16 = bookingReceiver9.getDeposit();
        java.lang.String str17 = bookingReceiver9.getAction();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver21, "", "", 0, userType50);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        double double67 = bookingReceiver21.getRate(userType65);
        bookingReceiver9.extendBooking("hi!", "", (int) (short) -1, userType65);
        double double69 = bookingReceiver0.getRate(userType65);
        double double70 = bookingReceiver0.getDeposit();
        double double71 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 8.0d + "'", double70 == 8.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 8.0d + "'", double71 == 8.0d);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        parkingSpot2.freeSpot();
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        bookingReceiver14.cancelBooking("hi!", "hi!");
        bookingReceiver14.cancelBooking("", "");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver14.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 0, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        double double35 = bookingReceiver27.getDeposit();
        java.lang.String str36 = bookingReceiver27.getAction();
        bookingReceiver27.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.UserType userType65 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver55, "hi!", "hi!", 100, userType65);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        booking.UserType userType74 = booking.UserType.FACULTY;
        bookingReceiver70.bookSpace("", "", 100, userType74);
        bookingReceiver55.extendBooking("", "", (int) 'a', userType74);
        double double77 = bookingReceiver43.getRate(userType74);
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver27, "BOOK", "BOOK", (int) (byte) 10, userType74);
        bookingReceiver0.extendBooking("hi!", "", 1, userType74);
        booking.UserType userType83 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("", "hi!", (int) (byte) 100, userType83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 8.0d + "'", double77 == 8.0d);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.String str17 = parkingSpot2.getLicensePlate();
        parkingSpot2.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        bookingSystem30.update((booking.Subject) parkingSpot31);
        parkingSpot23.detach((booking.Observer) bookingSystem30);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSpot23.detach((booking.Observer) bookingSystem43);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        bookingSystem43.update((booking.Subject) parkingSpot50);
        parkingSpot20.attach((booking.Observer) bookingSystem43);
        parkingSpot2.detach((booking.Observer) bookingSystem43);
        boolean boolean66 = parkingSpot2.isOccupied();
        parkingSpot2.occupySpot("CANCEL");
        parkingSpot2.freeSpot();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver13, "hi!", "CANCEL", (int) ' ', userType63);
        bookingReceiver0.bookSpace("hi!", "hi!", 10, userType63);
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.UserType userType84 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver69, "", "", (int) (short) 1, userType84);
        bookingReceiver0.bookSpace("EXTEND", "BOOK", (int) 'a', userType84);
        double double87 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 776.0d + "'", double87 == 776.0d);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        bookingReceiver0.cancelBooking("BOOK", "BOOK");
        double double37 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 8.0d + "'", double37 == 8.0d);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        bookingReceiver43.cancelBooking("hi!", "hi!");
        bookingReceiver43.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        booking.UserType userType54 = booking.UserType.FACULTY;
        bookingReceiver50.bookSpace("", "", 100, userType54);
        double double56 = bookingReceiver43.getRate(userType54);
        booking.UserType userType60 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver43, "BOOK", "", (int) '#', userType60);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 1, userType60);
        double double63 = bookingReceiver0.getDeposit();
        double double64 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.VISITOR + "'", userType60.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 15.0d + "'", double63 == 15.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 15.0d + "'", double64 == 15.0d);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        boolean boolean85 = parkingSpot68.isOccupied();
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem4 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        parkingSpot5.occupySpot("hi!");
        booking.BookingSystem bookingSystem8 = new booking.BookingSystem((booking.Subject) parkingSpot5);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        bookingSystem8.update((booking.Subject) parkingSpot9);
        boolean boolean13 = parkingSpot9.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        parkingSpot17.detach((booking.Observer) bookingSystem37);
        parkingSpot17.occupySpot("CANCEL");
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSpot60.detach((booking.Observer) bookingSystem67);
        parkingSpot47.detach((booking.Observer) bookingSystem67);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        bookingSystem67.update((booking.Subject) parkingSpot74);
        parkingSpot17.attach((booking.Observer) bookingSystem67);
        parkingSpot17.occupySpot("hi!");
        parkingSensor14.update((booking.Subject) parkingSpot17);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        parkingSpot0.attach((booking.Observer) bookingSystem92);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSensor parkingSensor20 = new booking.ParkingSensor((booking.Subject) parkingSpot6);
        java.lang.String str21 = parkingSpot6.getLicensePlate();
        bookingSystem3.update((booking.Subject) parkingSpot6);
        parkingSpot6.occupySpot("hi!");
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        parkingSensor26.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSpot43.detach((booking.Observer) bookingSystem63);
        parkingSpot43.occupySpot("CANCEL");
        parkingSensor42.update((booking.Subject) parkingSpot43);
        parkingSensor26.update((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSensor26.update((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        boolean boolean84 = parkingSpot80.isOccupied();
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot80);
        parkingSpot74.attach((booking.Observer) parkingSensor85);
        parkingSpot6.attach((booking.Observer) parkingSensor85);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        double double46 = bookingReceiver12.getRate(userType43);
        booking.UserType userType47 = booking.UserType.VISITOR;
        double double48 = bookingReceiver12.getRate(userType47);
        bookingReceiver12.cancelBooking("BOOK", "BOOK");
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType84);
        bookingReceiver0.extendBooking("EXTEND", "hi!", (int) (short) 10, userType84);
        bookingReceiver0.cancelBooking("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 8.0d + "'", double46 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.VISITOR + "'", userType47.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 15.0d + "'", double48 == 15.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.UserType userType37 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "", (int) '#', userType37);
        double double39 = bookingReceiver0.getRate(userType37);
        bookingReceiver0.cancelBooking("EXTEND", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.VISITOR + "'", userType37.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 15.0d + "'", double39 == 15.0d);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        java.lang.Class<?> wildcardClass20 = bookCommand11.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot10.attach((booking.Observer) bookingSystem24);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSpot27.detach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSensor55.update((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor71 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        parkingSensor71.update((booking.Subject) parkingSpot72);
        parkingSpot56.detach((booking.Observer) parkingSensor71);
        parkingSpot27.detach((booking.Observer) parkingSensor71);
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        java.lang.String str89 = parkingSpot27.getLicensePlate();
        java.lang.String str90 = parkingSpot27.getLicensePlate();
        parkingSensor26.update((booking.Subject) parkingSpot27);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        double double13 = bookingReceiver0.getAmount();
        java.lang.Class<?> wildcardClass14 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        java.lang.String str73 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        bookingReceiver77.cancelBooking("hi!", "hi!");
        booking.UserType userType81 = booking.UserType.STUDENT;
        double double82 = bookingReceiver77.getRate(userType81);
        bookingReceiver0.extendBooking("hi!", "", 0, userType81);
        double double84 = bookingReceiver0.getAmount();
        java.lang.String str85 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "BOOK" + "'", str73, "BOOK");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.STUDENT + "'", userType81.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5.0d + "'", double82 == 5.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "EXTEND" + "'", str85, "EXTEND");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        booking.CancelCommand cancelCommand54 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        cancelCommand54.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        java.lang.String str29 = bookingReceiver22.getAction();
        booking.UserType userType33 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver22, "hi!", "hi!", (int) (byte) 0, userType33);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver22, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        bookingReceiver41.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        double double54 = bookingReceiver41.getRate(userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        bookingReceiver58.cancelBooking("hi!", "hi!");
        booking.UserType userType62 = booking.UserType.STUDENT;
        double double63 = bookingReceiver58.getRate(userType62);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver41, "hi!", "CANCEL", (int) (short) 10, userType62);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        java.lang.String str75 = bookingReceiver68.getAction();
        booking.UserType userType79 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver68, "hi!", "hi!", (int) (byte) 0, userType79);
        double double81 = bookingReceiver68.getAmount();
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        bookingReceiver85.cancelBooking("hi!", "hi!");
        booking.UserType userType89 = booking.UserType.STUDENT;
        double double90 = bookingReceiver85.getRate(userType89);
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver68, "EXTEND", "", (int) (byte) 10, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver41, "BOOK", "CANCEL", (int) 'a', userType89);
        bookingReceiver22.extendBooking("EXTEND", "EXTEND", (int) (short) 10, userType89);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (-1), userType89);
        extendCommand94.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.NON_FACULTY + "'", userType33.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 8.0d + "'", double54 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.STUDENT + "'", userType62.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.NON_FACULTY + "'", userType79.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.STUDENT + "'", userType89.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5.0d + "'", double90 == 5.0d);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot20.freeSpot();
        java.lang.String str25 = parkingSpot20.getLicensePlate();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) parkingSensor42);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        parkingSpot4.attach((booking.Observer) parkingSensor44);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        bookingReceiver10.cancelBooking("hi!", "hi!");
        bookingReceiver10.cancelBooking("", "");
        booking.CancelCommand cancelCommand19 = new booking.CancelCommand(bookingReceiver10, "", "hi!");
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        bookingReceiver33.extendBooking("", "", (int) 'a', userType52);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver23, "", "", 0, userType52);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        java.lang.String str57 = bookingReceiver56.getAction();
        booking.UserType userType61 = null;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver56, "hi!", "", 100, userType61);
        java.lang.String str63 = bookingReceiver56.getAction();
        booking.UserType userType67 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver56, "hi!", "hi!", (int) (byte) 0, userType67);
        double double69 = bookingReceiver23.getRate(userType67);
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver23, "hi!", "CANCEL", (int) ' ', userType73);
        bookingReceiver10.bookSpace("hi!", "hi!", 10, userType73);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 1, userType73);
        extendCommand76.doAction();
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.NON_FACULTY + "'", userType67.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        parkingSpot0.freeSpot();
        // The following exception was thrown during execution in test generation
        try {
            parkingSpot0.occupySpot("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: License plate must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getAmount();
        java.lang.String str51 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        bookingReceiver52.cancelBooking("hi!", "hi!");
        double double56 = bookingReceiver52.getAmount();
        bookingReceiver52.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        booking.UserType userType67 = booking.UserType.FACULTY;
        bookingReceiver63.bookSpace("", "", 100, userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver52, "", "", (int) (short) 100, userType67);
        double double70 = bookingReceiver0.getRate(userType67);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CANCEL" + "'", str51, "CANCEL");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 8.0d + "'", double70 == 8.0d);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot85);
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot0.detach((booking.Observer) bookingSystem84);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        java.lang.String str45 = parkingSpot27.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.occupySpot("EXTEND");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        java.lang.String str50 = parkingSpot45.getLicensePlate();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        parkingSensor52.update((booking.Subject) parkingSpot53);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) parkingSensor67);
        parkingSpot45.freeSpot();
        parkingSpot45.occupySpot("CANCEL");
        parkingSpot45.freeSpot();
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        bookingSystem20.update((booking.Subject) parkingSpot45);
        boolean boolean75 = parkingSpot45.isOccupied();
        parkingSpot45.occupySpot("hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        booking.CancelCommand cancelCommand27 = new booking.CancelCommand(bookingReceiver13, "", "BOOK");
        java.lang.String str28 = bookingReceiver13.getAction();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        bookingReceiver29.cancelBooking("hi!", "hi!");
        booking.UserType userType33 = booking.UserType.STUDENT;
        double double34 = bookingReceiver29.getRate(userType33);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver29, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        bookingReceiver41.cancelBooking("", "");
        booking.UserType userType48 = booking.UserType.STUDENT;
        double double49 = bookingReceiver41.getRate(userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver29, "", "hi!", (int) '#', userType48);
        double double51 = bookingReceiver13.getRate(userType48);
        double double52 = bookingReceiver0.getRate(userType48);
        double double53 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.STUDENT + "'", userType33.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5.0d + "'", double34 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.STUDENT + "'", userType48.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 5.0d + "'", double51 == 5.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 5.0d + "'", double52 == 5.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand46 = new booking.BookCommand(bookingReceiver35, "hi!", "hi!", 100, userType45);
        bookCommand46.doAction();
        bookCommand46.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand46);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        double double63 = bookingReceiver50.getAmount();
        java.lang.String str64 = bookingReceiver50.getAction();
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver50, "hi!", "CANCEL");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand67);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        double double10 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        cancelCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        boolean boolean45 = parkingSpot32.isOccupied();
        boolean boolean46 = parkingSpot32.isOccupied();
        parkingSensor1.update((booking.Subject) parkingSpot32);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        double double54 = bookingReceiver52.getDeposit();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        booking.UserType userType89 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver79, "hi!", "hi!", 100, userType89);
        bookingReceiver58.bookSpace("hi!", "hi!", (int) (short) -1, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver52, "EXTEND", "BOOK", (int) (byte) -1, userType89);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", (int) '#', userType89);
        java.lang.String str94 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        java.lang.Class<?> wildcardClass98 = cancelCommand97.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSpot27.detach((booking.Observer) bookingSystem47);
        parkingSpot27.occupySpot("CANCEL");
        parkingSensor26.update((booking.Subject) parkingSpot27);
        parkingSensor10.update((booking.Subject) parkingSpot27);
        boolean boolean58 = parkingSpot27.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot27);
        parkingSpot27.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        parkingSpot2.freeSpot();
        parkingSpot2.occupySpot("EXTEND");
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        parkingSpot36.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        bookingSystem56.update((booking.Subject) parkingSpot63);
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot63);
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot63);
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot63);
        booking.ParkingSensor parkingSensor80 = new booking.ParkingSensor((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.freeSpot();
        parkingSpot81.freeSpot();
        parkingSensor80.update((booking.Subject) parkingSpot81);
        parkingSpot2.attach((booking.Observer) parkingSensor80);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.BookingSystem bookingSystem1 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        bookingSystem22.update((booking.Subject) parkingSpot29);
        parkingSpot29.freeSpot();
        bookingSystem1.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot49.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        java.lang.String str57 = parkingSpot49.getLicensePlate();
        parkingSpot49.freeSpot();
        parkingSpot49.freeSpot();
        bookingSystem1.update((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot2.detach((booking.Observer) bookingSystem58);
        java.lang.String str60 = parkingSpot2.getLicensePlate();
        java.lang.String str61 = parkingSpot2.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.freeSpot();
        boolean boolean34 = parkingSpot32.isOccupied();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        boolean boolean49 = parkingSpot36.isOccupied();
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.freeSpot();
        boolean boolean56 = parkingSpot54.isOccupied();
        parkingSpot54.freeSpot();
        parkingSpot54.freeSpot();
        parkingSensor53.update((booking.Subject) parkingSpot54);
        bookingSystem12.update((booking.Subject) parkingSpot54);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        double double79 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand82 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        java.lang.String str26 = bookingReceiver0.getAction();
        double double27 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        double double52 = bookingReceiver31.getAmount();
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        java.lang.String str57 = bookingReceiver56.getAction();
        booking.UserType userType61 = null;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver56, "hi!", "", 100, userType61);
        java.lang.String str63 = bookingReceiver56.getAction();
        booking.UserType userType67 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver56, "hi!", "hi!", (int) (byte) 0, userType67);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        java.lang.String str73 = bookingReceiver72.getAction();
        booking.UserType userType77 = null;
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver72, "hi!", "", 100, userType77);
        java.lang.String str79 = bookingReceiver72.getAction();
        booking.UserType userType83 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand84 = new booking.ExtendCommand(bookingReceiver72, "hi!", "hi!", (int) (byte) 0, userType83);
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver56, "CANCEL", "CANCEL", (int) (short) 1, userType83);
        bookingReceiver31.bookSpace("EXTEND", "", (int) (byte) 100, userType83);
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", (int) (short) -1, userType83);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.NON_FACULTY + "'", userType67.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.NON_FACULTY + "'", userType83.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        double double42 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 8.0d + "'", double42 == 8.0d);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        boolean boolean15 = parkingSpot0.isOccupied();
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot16.freeSpot();
        java.lang.String str19 = parkingSpot16.getLicensePlate();
        booking.ParkingSensor parkingSensor20 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot25.freeSpot();
        java.lang.String str30 = parkingSpot25.getLicensePlate();
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSensor32.update((booking.Subject) parkingSpot33);
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) parkingSensor47);
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        parkingSensor20.update((booking.Subject) parkingSpot25);
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        parkingSpot0.detach((booking.Observer) bookingSystem53);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSensor25.update((booking.Subject) parkingSpot26);
        parkingSpot10.detach((booking.Observer) parkingSensor25);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSensor42.update((booking.Subject) parkingSpot43);
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        parkingSpot10.attach((booking.Observer) parkingSensor57);
        parkingSpot7.attach((booking.Observer) parkingSensor57);
        parkingSpot4.attach((booking.Observer) parkingSensor57);
        parkingSpot4.occupySpot("EXTEND");
        parkingSpot4.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        bookingSystem68.update((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot69.detach((booking.Observer) bookingSystem77);
        parkingSpot4.attach((booking.Observer) bookingSystem77);
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot0.attach((booking.Observer) bookingSystem85);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
        parkingSpot87.freeSpot();
        java.lang.String str90 = parkingSpot87.getLicensePlate();
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
        parkingSpot87.freeSpot();
        bookingSystem85.update((booking.Subject) parkingSpot87);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        bookingReceiver37.cancelBooking("hi!", "hi!");
        bookingReceiver37.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.UserType userType48 = booking.UserType.FACULTY;
        bookingReceiver44.bookSpace("", "", 100, userType48);
        double double50 = bookingReceiver37.getRate(userType48);
        booking.UserType userType54 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver37, "BOOK", "", (int) '#', userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        java.lang.String str70 = bookingReceiver63.getAction();
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver63, "hi!", "hi!", (int) (byte) 0, userType74);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver59, "", "", (int) (byte) 100, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver37, "CANCEL", "EXTEND", (int) '#', userType74);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 0, userType74);
        extendCommand78.doAction();
        extendCommand78.doAction();
        extendCommand78.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.VISITOR + "'", userType54.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double13 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        double double76 = bookingReceiver0.getDeposit();
        java.lang.String str77 = bookingReceiver0.getAction();
        double double78 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        java.lang.String str35 = bookingReceiver28.getAction();
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver28, "hi!", "hi!", (int) (byte) 0, userType39);
        double double41 = bookingReceiver28.getAmount();
        java.lang.String str42 = bookingReceiver28.getAction();
        double double43 = bookingReceiver28.getDeposit();
        double double44 = bookingReceiver28.getDeposit();
        booking.CancelCommand cancelCommand47 = new booking.CancelCommand(bookingReceiver28, "", "BOOK");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand47);
        cancelCommand47.doAction();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        bookingReceiver5.cancelBooking("hi!", "hi!");
        java.lang.String str9 = bookingReceiver5.getAction();
        booking.BookingReceiver bookingReceiver10 = null;
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.UserType userType18 = booking.UserType.FACULTY;
        bookingReceiver14.bookSpace("", "", 100, userType18);
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver10, "hi!", "", 0, userType18);
        double double21 = bookingReceiver5.getRate(userType18);
        booking.UserType userType25 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver5, "BOOK", "EXTEND", (int) (short) 10, userType25);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) ' ', userType25);
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        java.lang.Class<?> wildcardClass31 = bookCommand27.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType18 + "' != '" + booking.UserType.FACULTY + "'", userType18.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 8.0d + "'", double21 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        java.lang.String str75 = bookingReceiver0.getAction();
        double double76 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver0, "", "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "BOOK" + "'", str75, "BOOK");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        cancelCommand78.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        double double10 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        java.lang.String str14 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.Observer observer28 = null;
        parkingSpot0.detach(observer28);
        parkingSpot0.freeSpot();
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        bookingReceiver0.bookSpace("", "hi!", (int) 'a', userType31);
        java.lang.String str35 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        bookingReceiver39.cancelBooking("hi!", "hi!");
        java.lang.String str43 = bookingReceiver39.getAction();
        booking.BookingReceiver bookingReceiver44 = null;
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver44, "hi!", "", 0, userType52);
        double double55 = bookingReceiver39.getRate(userType52);
        booking.UserType userType59 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver39, "BOOK", "EXTEND", (int) (short) 10, userType59);
        booking.CancelCommand cancelCommand63 = new booking.CancelCommand(bookingReceiver39, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        bookingReceiver67.cancelBooking("hi!", "hi!");
        java.lang.String str71 = bookingReceiver67.getAction();
        booking.BookingReceiver bookingReceiver72 = null;
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.UserType userType80 = booking.UserType.FACULTY;
        bookingReceiver76.bookSpace("", "", 100, userType80);
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver72, "hi!", "", 0, userType80);
        double double83 = bookingReceiver67.getRate(userType80);
        bookingReceiver39.extendBooking("BOOK", "CANCEL", (int) (short) 1, userType80);
        booking.BookCommand bookCommand85 = new booking.BookCommand(bookingReceiver0, "hi!", "CANCEL", (int) (byte) 10, userType80);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "BOOK" + "'", str35, "BOOK");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CANCEL" + "'", str43, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 8.0d + "'", double55 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "CANCEL" + "'", str71, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 8.0d + "'", double83 == 8.0d);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        parkingSpot12.detach((booking.Observer) bookingSystem32);
        parkingSpot12.occupySpot("CANCEL");
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSpot42.detach((booking.Observer) bookingSystem62);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        bookingSystem76.update((booking.Subject) parkingSpot77);
        parkingSpot69.detach((booking.Observer) bookingSystem76);
        bookingSystem62.update((booking.Subject) parkingSpot69);
        parkingSpot12.attach((booking.Observer) bookingSystem62);
        parkingSpot12.occupySpot("hi!");
        parkingSensor9.update((booking.Subject) parkingSpot12);
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        boolean boolean14 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot20.freeSpot();
        java.lang.String str25 = parkingSpot20.getLicensePlate();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) parkingSensor42);
        parkingSpot20.occupySpot("hi!");
        java.lang.String str46 = parkingSpot20.getLicensePlate();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        boolean boolean48 = parkingSpot20.isOccupied();
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        boolean boolean62 = parkingSpot49.isOccupied();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        bookingSystem68.update((booking.Subject) parkingSpot69);
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        bookingSystem74.update((booking.Subject) parkingSpot75);
        parkingSpot75.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        bookingSystem83.update((booking.Subject) parkingSpot84);
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        parkingSpot75.attach((booking.Observer) bookingSystem89);
        parkingSensor64.update((booking.Subject) parkingSpot75);
        parkingSpot20.detach((booking.Observer) parkingSensor64);
        parkingSensor15.update((booking.Subject) parkingSpot20);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getDeposit();
        booking.UserType userType54 = booking.UserType.STUDENT;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 0, userType54);
        extendCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.STUDENT + "'", userType54.equals(booking.UserType.STUDENT));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        java.lang.String str43 = bookingReceiver36.getAction();
        booking.UserType userType47 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver36, "hi!", "hi!", (int) (byte) 0, userType47);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver20, "CANCEL", "CANCEL", (int) (short) 1, userType47);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        double double76 = bookingReceiver53.getRate(userType75);
        bookingReceiver20.extendBooking("hi!", "", (int) (byte) -1, userType75);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", 0, userType75);
        double double79 = bookingReceiver0.getDeposit();
        java.lang.String str80 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.NON_FACULTY + "'", userType47.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        cancelCommand20.doAction();
        cancelCommand20.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        bookingReceiver33.extendBooking("", "", (int) 'a', userType52);
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        double double56 = bookingReceiver33.getRate(userType55);
        bookingReceiver0.extendBooking("hi!", "", (int) (byte) -1, userType55);
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        java.lang.String str72 = bookingReceiver65.getAction();
        booking.UserType userType76 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver65, "hi!", "hi!", (int) (byte) 0, userType76);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver61, "", "", (int) (byte) 100, userType76);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (short) 0, userType76);
        double double80 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand83 = new booking.CancelCommand(bookingReceiver0, "", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.NON_FACULTY + "'", userType76.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }
}

