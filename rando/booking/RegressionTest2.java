package rando.booking;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        java.lang.String str15 = parkingSpot4.getLicensePlate();
        parkingSpot4.freeSpot();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        bookingReceiver0.bookSpace("", "hi!", (int) 'a', userType31);
        java.lang.String str35 = bookingReceiver0.getAction();
        double double36 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "BOOK" + "'", str35, "BOOK");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.freeSpot();
        boolean boolean63 = parkingSpot61.isOccupied();
        parkingSpot61.freeSpot();
        bookingSystem40.update((booking.Subject) parkingSpot61);
        parkingSpot4.detach((booking.Observer) bookingSystem40);
        boolean boolean67 = parkingSpot4.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver8, "", "", 0, userType37);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        double double54 = bookingReceiver8.getRate(userType52);
        double double55 = bookingReceiver0.getRate(userType52);
        java.lang.String str56 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "CANCEL" + "'", str56, "CANCEL");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double9 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        booking.UserType userType17 = booking.UserType.STUDENT;
        double double18 = bookingReceiver13.getRate(userType17);
        double double19 = bookingReceiver13.getAmount();
        bookingReceiver13.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand25 = new booking.CancelCommand(bookingReceiver13, "hi!", "hi!");
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver13, "CANCEL", "BOOK");
        double double29 = bookingReceiver13.getAmount();
        double double30 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        bookingReceiver34.cancelBooking("hi!", "hi!");
        booking.UserType userType38 = booking.UserType.STUDENT;
        double double39 = bookingReceiver34.getRate(userType38);
        booking.CancelCommand cancelCommand42 = new booking.CancelCommand(bookingReceiver34, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.UserType userType53 = booking.UserType.STUDENT;
        double double54 = bookingReceiver46.getRate(userType53);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver34, "", "hi!", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        java.lang.String str57 = bookingReceiver56.getAction();
        booking.UserType userType61 = null;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver56, "hi!", "", 100, userType61);
        java.lang.String str63 = bookingReceiver56.getAction();
        booking.UserType userType67 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver56, "hi!", "hi!", (int) (byte) 0, userType67);
        booking.CancelCommand cancelCommand71 = new booking.CancelCommand(bookingReceiver56, "hi!", "BOOK");
        bookingReceiver56.cancelBooking("CANCEL", "BOOK");
        double double75 = bookingReceiver56.getAmount();
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        bookingReceiver76.cancelBooking("hi!", "hi!");
        bookingReceiver76.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        booking.UserType userType87 = booking.UserType.FACULTY;
        bookingReceiver83.bookSpace("", "", 100, userType87);
        double double89 = bookingReceiver76.getRate(userType87);
        booking.UserType userType93 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver76, "BOOK", "", (int) '#', userType93);
        double double95 = bookingReceiver56.getRate(userType93);
        double double96 = bookingReceiver34.getRate(userType93);
        bookingReceiver13.extendBooking("EXTEND", "", 1, userType93);
        booking.BookCommand bookCommand98 = new booking.BookCommand(bookingReceiver0, "CANCEL", "CANCEL", 0, userType93);
        bookCommand98.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 8.0d + "'", double9 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.STUDENT + "'", userType17.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.STUDENT + "'", userType38.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5.0d + "'", double39 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.STUDENT + "'", userType53.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.NON_FACULTY + "'", userType67.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.VISITOR + "'", userType93.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 15.0d + "'", double95 == 15.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 15.0d + "'", double96 == 15.0d);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        booking.ParkingSensor parkingSensor4 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        parkingSpot5.occupySpot("hi!");
        booking.BookingSystem bookingSystem8 = new booking.BookingSystem((booking.Subject) parkingSpot5);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        bookingSystem8.update((booking.Subject) parkingSpot9);
        parkingSpot9.freeSpot();
        java.lang.String str14 = parkingSpot9.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) parkingSensor31);
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        parkingSensor4.update((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot41.freeSpot();
        java.lang.String str46 = parkingSpot41.getLicensePlate();
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor48 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        parkingSensor48.update((booking.Subject) parkingSpot49);
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) parkingSensor63);
        parkingSpot41.freeSpot();
        parkingSpot41.occupySpot("CANCEL");
        parkingSpot41.freeSpot();
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        parkingSpot9.attach((booking.Observer) bookingSystem69);
        parkingSpot9.occupySpot("EXTEND");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        java.lang.String str6 = bookingReceiver0.getAction();
        booking.UserType userType10 = null;
        booking.ExtendCommand extendCommand11 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 1, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        cancelCommand14.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CANCEL" + "'", str6, "CANCEL");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("CANCEL");
        java.lang.String str59 = parkingSpot0.getLicensePlate();
        parkingSpot0.freeSpot();
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CANCEL" + "'", str59, "CANCEL");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        bookingReceiver7.cancelBooking("hi!", "hi!");
        double double11 = bookingReceiver7.getAmount();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        bookingReceiver15.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType50);
        bookingReceiver7.extendBooking("hi!", "hi!", (int) (byte) 10, userType50);
        double double55 = bookingReceiver0.getRate(userType50);
        double double56 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 8.0d + "'", double55 == 8.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        double double54 = bookingReceiver52.getDeposit();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        booking.UserType userType89 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver79, "hi!", "hi!", 100, userType89);
        bookingReceiver58.bookSpace("hi!", "hi!", (int) (short) -1, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver52, "EXTEND", "BOOK", (int) (byte) -1, userType89);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", (int) '#', userType89);
        java.lang.String str94 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        double double98 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 280.0d + "'", double98 == 280.0d);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor84 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        bookingReceiver13.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        double double61 = bookingReceiver27.getRate(userType58);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", 100, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 1, userType58);
        double double64 = bookingReceiver0.getDeposit();
        double double65 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        java.lang.String str41 = parkingSpot27.getLicensePlate();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        parkingSpot27.occupySpot("hi!");
        booking.Observer observer45 = null;
        parkingSpot27.attach(observer45);
        parkingSpot27.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver31.getRate(userType75);
        booking.UserType userType81 = null;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver31, "BOOK", "CANCEL", (int) (short) 100, userType81);
        commandInvoker0.setCommand((booking.ICommand) extendCommand82);
        // The following exception was thrown during execution in test generation
        try {
            extendCommand82.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        double double15 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.CancelCommand cancelCommand39 = new booking.CancelCommand(bookingReceiver19, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (short) 1, userType58);
        bookingReceiver19.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType58);
        bookingReceiver13.extendBooking("CANCEL", "hi!", (-1), userType58);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        bookingReceiver65.cancelBooking("hi!", "hi!");
        bookingReceiver65.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        booking.UserType userType76 = booking.UserType.FACULTY;
        bookingReceiver72.bookSpace("", "", 100, userType76);
        double double78 = bookingReceiver65.getRate(userType76);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver13, "", "BOOK", (int) ' ', userType76);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 100, userType76);
        booking.CancelCommand cancelCommand83 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 8.0d + "'", double78 == 8.0d);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver4, "", "", (int) (byte) 100, userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        booking.UserType userType35 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand36 = new booking.BookCommand(bookingReceiver25, "hi!", "hi!", 100, userType35);
        bookingReceiver4.bookSpace("hi!", "hi!", (int) (short) -1, userType35);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        booking.UserType userType56 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver45, "hi!", "hi!", (int) (byte) 0, userType56);
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver41, "", "", (int) (byte) 100, userType56);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver62, "hi!", "hi!", 100, userType72);
        bookingReceiver41.bookSpace("hi!", "hi!", (int) (short) -1, userType72);
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver4, "hi!", "", 0, userType72);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", (int) (short) 10, userType72);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.NON_FACULTY + "'", userType56.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        boolean boolean50 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        java.lang.String str67 = parkingSpot64.getLicensePlate();
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        bookingSystem63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        bookingSystem74.update((booking.Subject) parkingSpot75);
        boolean boolean79 = parkingSpot75.isOccupied();
        parkingSpot75.freeSpot();
        booking.ParkingSensor parkingSensor81 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        bookingSystem63.update((booking.Subject) parkingSpot75);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.occupySpot("hi!");
        boolean boolean68 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        cancelCommand18.doAction();
        cancelCommand18.doAction();
        cancelCommand18.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot87.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot87.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor97 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
        parkingSensor82.update((booking.Subject) parkingSpot87);
        java.lang.Class<?> wildcardClass99 = parkingSpot87.getClass();
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        parkingSpot15.occupySpot("");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        double double33 = bookingReceiver20.getAmount();
        java.lang.String str34 = bookingReceiver20.getAction();
        double double35 = bookingReceiver20.getDeposit();
        double double36 = bookingReceiver20.getDeposit();
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        bookingReceiver40.cancelBooking("hi!", "hi!");
        java.lang.String str44 = bookingReceiver40.getAction();
        booking.BookingReceiver bookingReceiver45 = null;
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.UserType userType53 = booking.UserType.FACULTY;
        bookingReceiver49.bookSpace("", "", 100, userType53);
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver45, "hi!", "", 0, userType53);
        double double56 = bookingReceiver40.getRate(userType53);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver40, "BOOK", "EXTEND", (int) (short) 10, userType60);
        booking.BookCommand bookCommand62 = new booking.BookCommand(bookingReceiver20, "EXTEND", "hi!", (int) 'a', userType60);
        commandInvoker0.setCommand((booking.ICommand) bookCommand62);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        bookingReceiver64.cancelBooking("hi!", "hi!");
        double double68 = bookingReceiver64.getAmount();
        bookingReceiver64.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver64, "EXTEND", "EXTEND");
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        bookingReceiver78.cancelBooking("hi!", "hi!");
        bookingReceiver78.cancelBooking("", "");
        booking.UserType userType85 = booking.UserType.STUDENT;
        double double86 = bookingReceiver78.getRate(userType85);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver64, "EXTEND", "", (int) (byte) 0, userType85);
        bookCommand87.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand87);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CANCEL" + "'", str44, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.STUDENT + "'", userType85.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.0d + "'", double86 == 5.0d);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        cancelCommand37.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        double double23 = bookingReceiver21.getDeposit();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        java.lang.String str38 = bookingReceiver31.getAction();
        booking.UserType userType42 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver31, "hi!", "hi!", (int) (byte) 0, userType42);
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver27, "", "", (int) (byte) 100, userType42);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        bookingReceiver27.bookSpace("hi!", "hi!", (int) (short) -1, userType58);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver21, "EXTEND", "BOOK", (int) (byte) -1, userType58);
        bookingReceiver0.bookSpace("BOOK", "CANCEL", (int) (byte) 0, userType58);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.NON_FACULTY + "'", userType42.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        double double17 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        double double25 = bookingReceiver21.getAmount();
        bookingReceiver21.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver29, "", "", 0, userType58);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        double double75 = bookingReceiver29.getRate(userType73);
        double double76 = bookingReceiver21.getRate(userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        bookingReceiver80.cancelBooking("hi!", "hi!");
        booking.UserType userType84 = booking.UserType.STUDENT;
        double double85 = bookingReceiver80.getRate(userType84);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver21, "", "CANCEL", (int) (byte) 100, userType84);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver0, "hi!", "CANCEL", 0, userType84);
        java.lang.Class<?> wildcardClass88 = userType84.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.STUDENT + "'", userType84.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.0d + "'", double85 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver0, "CANCEL", "EXTEND", (int) '#', userType37);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        bookingReceiver44.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        double double57 = bookingReceiver44.getRate(userType55);
        booking.UserType userType61 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver44, "BOOK", "", (int) '#', userType61);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        java.lang.String str77 = bookingReceiver70.getAction();
        booking.UserType userType81 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver70, "hi!", "hi!", (int) (byte) 0, userType81);
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver66, "", "", (int) (byte) 100, userType81);
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver44, "CANCEL", "EXTEND", (int) '#', userType81);
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "CANCEL", 0, userType81);
        extendCommand85.doAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 8.0d + "'", double57 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.VISITOR + "'", userType61.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.NON_FACULTY + "'", userType81.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        double double10 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        double double26 = bookingReceiver14.getAmount();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.UserType userType49 = booking.UserType.FACULTY;
        bookingReceiver45.bookSpace("", "", 100, userType49);
        bookingReceiver30.extendBooking("", "", (int) 'a', userType49);
        bookingReceiver14.extendBooking("CANCEL", "hi!", (int) (short) 10, userType49);
        bookingReceiver0.bookSpace("CANCEL", "CANCEL", (int) (byte) 0, userType49);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        java.lang.String str24 = bookingReceiver17.getAction();
        booking.UserType userType28 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver17, "hi!", "hi!", (int) (byte) 0, userType28);
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver13, "", "", (int) (byte) 100, userType28);
        booking.CancelCommand cancelCommand33 = new booking.CancelCommand(bookingReceiver13, "hi!", "hi!");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand33);
        cancelCommand33.doAction();
        cancelCommand33.doAction();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.NON_FACULTY + "'", userType28.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        bookingReceiver13.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        double double61 = bookingReceiver27.getRate(userType58);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", 100, userType58);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 1, userType58);
        java.lang.String str64 = bookingReceiver0.getAction();
        booking.UserType userType68 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("", "EXTEND", 0, userType68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        booking.CancelCommand cancelCommand81 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        double double82 = bookingReceiver0.getDeposit();
        java.lang.String str83 = bookingReceiver0.getAction();
        booking.UserType userType87 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("", "CANCEL", 1, userType87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        extendCommand49.doAction();
        extendCommand49.doAction();
        extendCommand49.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        booking.UserType userType21 = booking.UserType.FACULTY;
        bookingReceiver17.bookSpace("", "", 100, userType21);
        bookingReceiver2.extendBooking("", "", (int) 'a', userType21);
        booking.UserType userType24 = booking.UserType.NON_FACULTY;
        double double25 = bookingReceiver2.getRate(userType24);
        bookingReceiver2.cancelBooking("BOOK", "hi!");
        java.lang.String str29 = bookingReceiver2.getAction();
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver2, "BOOK", "EXTEND");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand32);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.FACULTY + "'", userType21.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.NON_FACULTY + "'", userType24.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        bookingReceiver0.extendBooking("hi!", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        double double49 = bookingReceiver36.getRate(userType47);
        booking.UserType userType53 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver36, "BOOK", "", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver36, "CANCEL", "EXTEND", (int) '#', userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver36, "CANCEL", "CANCEL", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 10, userType90);
        java.lang.String str94 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 8.0d + "'", double49 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.VISITOR + "'", userType53.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        bookingReceiver33.cancelBooking("hi!", "hi!");
        bookingReceiver33.cancelBooking("", "");
        booking.CancelCommand cancelCommand42 = new booking.CancelCommand(bookingReceiver33, "", "hi!");
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        booking.UserType userType57 = booking.UserType.FACULTY;
        bookingReceiver53.bookSpace("", "", 100, userType57);
        double double59 = bookingReceiver46.getRate(userType57);
        bookingReceiver33.bookSpace("BOOK", "EXTEND", (int) (byte) 10, userType57);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver0, "", "BOOK", (int) (byte) -1, userType57);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8.0d + "'", double59 == 8.0d);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        java.lang.String str10 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        java.lang.String str20 = bookingReceiver16.getAction();
        booking.BookingReceiver bookingReceiver21 = null;
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver21, "hi!", "", 0, userType29);
        double double32 = bookingReceiver16.getRate(userType29);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver16, "BOOK", "EXTEND", (int) (short) 10, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver11, "CANCEL", "hi!", (int) ' ', userType36);
        double double39 = bookingReceiver0.getRate(userType36);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CANCEL" + "'", str20, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 8.0d + "'", double32 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 8.0d + "'", double39 == 8.0d);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("hi!");
        java.lang.String str17 = parkingSpot4.getLicensePlate();
        boolean boolean18 = parkingSpot4.isOccupied();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        boolean boolean24 = parkingSpot11.isOccupied();
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        bookingSystem45.update((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) bookingSystem45);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot38.detach((booking.Observer) bookingSystem58);
        bookingSystem32.update((booking.Subject) parkingSpot38);
        parkingSpot11.detach((booking.Observer) bookingSystem32);
        parkingSpot11.occupySpot("hi!");
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        boolean boolean86 = parkingSpot68.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        bookingSystem14.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        java.lang.String str20 = parkingSpot15.getLicensePlate();
        boolean boolean21 = parkingSpot15.isOccupied();
        parkingSensor10.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        parkingSpot23.freeSpot();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        parkingSpot29.attach((booking.Observer) parkingSensor76);
        parkingSpot26.attach((booking.Observer) parkingSensor76);
        parkingSpot23.attach((booking.Observer) parkingSensor76);
        parkingSpot23.occupySpot("EXTEND");
        parkingSensor10.update((booking.Subject) parkingSpot23);
        parkingSpot23.freeSpot();
        boolean boolean84 = parkingSpot23.isOccupied();
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSpot32.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        bookingSystem52.update((booking.Subject) parkingSpot59);
        parkingSpot2.attach((booking.Observer) bookingSystem52);
        parkingSpot2.occupySpot("hi!");
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.freeSpot();
        boolean boolean78 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        bookingReceiver7.cancelBooking("hi!", "hi!");
        double double11 = bookingReceiver7.getAmount();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        bookingReceiver15.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType50);
        bookingReceiver7.extendBooking("hi!", "hi!", (int) (byte) 10, userType50);
        double double55 = bookingReceiver0.getRate(userType50);
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 8.0d + "'", double55 == 8.0d);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        parkingSpot4.detach((booking.Observer) bookingSystem16);
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        boolean boolean81 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand7 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        java.lang.String str29 = bookingReceiver25.getAction();
        booking.BookingReceiver bookingReceiver30 = null;
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        booking.UserType userType38 = booking.UserType.FACULTY;
        bookingReceiver34.bookSpace("", "", 100, userType38);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver30, "hi!", "", 0, userType38);
        double double41 = bookingReceiver25.getRate(userType38);
        bookingReceiver0.extendBooking("hi!", "CANCEL", (int) (short) 1, userType38);
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        double double46 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 8.0d + "'", double41 == 8.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker3 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        booking.UserType userType14 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver4, "hi!", "hi!", 100, userType14);
        booking.UserType userType19 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver4, "", "", (int) (short) 1, userType19);
        commandInvoker3.setCommand((booking.ICommand) extendCommand20);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        bookingReceiver22.bookSpace("hi!", "hi!", (int) (short) -1, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        java.lang.String str70 = bookingReceiver63.getAction();
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver63, "hi!", "hi!", (int) (byte) 0, userType74);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver59, "", "", (int) (byte) 100, userType74);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        bookingReceiver59.bookSpace("hi!", "hi!", (int) (short) -1, userType90);
        booking.BookCommand bookCommand93 = new booking.BookCommand(bookingReceiver22, "hi!", "", 0, userType90);
        commandInvoker3.setCommand((booking.ICommand) bookCommand93);
        commandInvoker0.setCommand((booking.ICommand) bookCommand93);
        bookCommand93.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + userType14 + "' != '" + booking.UserType.FACULTY + "'", userType14.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        java.lang.String str20 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CANCEL" + "'", str20, "CANCEL");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot10.attach((booking.Observer) bookingSystem24);
        parkingSpot10.freeSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        java.lang.String str28 = parkingSpot10.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        double double54 = bookingReceiver52.getDeposit();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        booking.UserType userType89 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver79, "hi!", "hi!", 100, userType89);
        bookingReceiver58.bookSpace("hi!", "hi!", (int) (short) -1, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver52, "EXTEND", "BOOK", (int) (byte) -1, userType89);
        bookingReceiver0.extendBooking("CANCEL", "BOOK", (int) '#', userType89);
        java.lang.String str94 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand97 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        cancelCommand97.doAction();
        cancelCommand97.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        double double10 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        cancelCommand13.doAction();
        cancelCommand13.doAction();
        cancelCommand13.doAction();
        cancelCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.freeSpot();
        boolean boolean63 = parkingSpot61.isOccupied();
        parkingSpot61.freeSpot();
        bookingSystem40.update((booking.Subject) parkingSpot61);
        parkingSpot4.detach((booking.Observer) bookingSystem40);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        boolean boolean3 = parkingSpot0.isOccupied();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("BOOK");
        parkingSpot0.freeSpot();
        parkingSpot0.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("CANCEL");
        booking.ParkingSensor parkingSensor59 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot40.detach((booking.Observer) bookingSystem47);
        parkingSpot27.detach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSensor55.update((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor71 = new booking.ParkingSensor((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        parkingSensor71.update((booking.Subject) parkingSpot72);
        parkingSpot56.detach((booking.Observer) parkingSensor71);
        parkingSpot27.detach((booking.Observer) parkingSensor71);
        parkingSpot27.occupySpot("hi!");
        parkingSpot27.freeSpot();
        parkingSpot27.occupySpot("hi!");
        parkingSensor26.update((booking.Subject) parkingSpot27);
        boolean boolean94 = parkingSpot27.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.UserType userType37 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "", (int) '#', userType37);
        double double39 = bookingReceiver0.getRate(userType37);
        bookingReceiver0.cancelBooking("", "");
        double double43 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        double double47 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.VISITOR + "'", userType37.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 15.0d + "'", double39 == 15.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        extendCommand18.doAction();
        extendCommand18.doAction();
        extendCommand18.doAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver34, "", "BOOK");
        java.lang.String str49 = bookingReceiver34.getAction();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        booking.UserType userType54 = booking.UserType.STUDENT;
        double double55 = bookingReceiver50.getRate(userType54);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver50, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        bookingReceiver62.cancelBooking("", "");
        booking.UserType userType69 = booking.UserType.STUDENT;
        double double70 = bookingReceiver62.getRate(userType69);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver50, "", "hi!", (int) '#', userType69);
        double double72 = bookingReceiver34.getRate(userType69);
        bookingReceiver0.bookSpace("", "CANCEL", (int) (byte) 100, userType69);
        double double74 = bookingReceiver0.getDeposit();
        double double75 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.STUDENT + "'", userType54.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.STUDENT + "'", userType69.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5.0d + "'", double70 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.0d + "'", double74 == 5.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 500.0d + "'", double75 == 500.0d);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.UserType userType37 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "", (int) '#', userType37);
        double double39 = bookingReceiver0.getRate(userType37);
        bookingReceiver0.cancelBooking("", "");
        double double43 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver57 = null;
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.UserType userType65 = booking.UserType.FACULTY;
        bookingReceiver61.bookSpace("", "", 100, userType65);
        booking.BookCommand bookCommand67 = new booking.BookCommand(bookingReceiver57, "hi!", "", 0, userType65);
        bookingReceiver50.extendBooking("hi!", "BOOK", 1, userType65);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (short) -1, userType65);
        booking.CancelCommand cancelCommand72 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.VISITOR + "'", userType37.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 15.0d + "'", double39 == 15.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        extendCommand12.doAction();
        extendCommand12.doAction();
        extendCommand12.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        boolean boolean14 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        java.lang.String str15 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.UserType userType55 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver40, "", "", (int) (short) 1, userType55);
        bookingReceiver19.extendBooking("BOOK", "", (int) '4', userType55);
        bookingReceiver0.extendBooking("CANCEL", "", 1, userType55);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver69 = null;
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver69, "hi!", "", 0, userType77);
        bookingReceiver62.extendBooking("hi!", "BOOK", 1, userType77);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) '#', userType77);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot18.detach((booking.Observer) parkingSensor33);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        boolean boolean50 = parkingSpot18.isOccupied();
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.occupySpot("CANCEL");
        parkingSpot10.freeSpot();
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "EXTEND");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.CancelCommand cancelCommand53 = new booking.CancelCommand(bookingReceiver16, "hi!", "EXTEND");
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        bookingReceiver57.cancelBooking("hi!", "hi!");
        booking.UserType userType61 = booking.UserType.STUDENT;
        double double62 = bookingReceiver57.getRate(userType61);
        double double63 = bookingReceiver57.getDeposit();
        java.lang.String str64 = bookingReceiver57.getAction();
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        bookingReceiver73.cancelBooking("hi!", "hi!");
        java.lang.String str77 = bookingReceiver73.getAction();
        booking.BookingReceiver bookingReceiver78 = null;
        booking.BookingReceiver bookingReceiver82 = new booking.BookingReceiver();
        booking.UserType userType86 = booking.UserType.FACULTY;
        bookingReceiver82.bookSpace("", "", 100, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver78, "hi!", "", 0, userType86);
        double double89 = bookingReceiver73.getRate(userType86);
        booking.UserType userType93 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver73, "BOOK", "EXTEND", (int) (short) 10, userType93);
        booking.BookCommand bookCommand95 = new booking.BookCommand(bookingReceiver68, "CANCEL", "hi!", (int) ' ', userType93);
        booking.ExtendCommand extendCommand96 = new booking.ExtendCommand(bookingReceiver57, "", "", (int) '#', userType93);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 100, userType93);
        bookingReceiver0.extendBooking("EXTEND", "hi!", (int) '4', userType93);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.STUDENT + "'", userType61.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 5.0d + "'", double62 == 5.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "CANCEL" + "'", str64, "CANCEL");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CANCEL" + "'", str77, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.FACULTY + "'", userType93.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        bookingReceiver7.cancelBooking("hi!", "hi!");
        double double11 = bookingReceiver7.getAmount();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        bookingReceiver15.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType50);
        bookingReceiver7.extendBooking("hi!", "hi!", (int) (byte) 10, userType50);
        double double55 = bookingReceiver0.getRate(userType50);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        bookingReceiver59.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        bookingReceiver71.cancelBooking("hi!", "hi!");
        booking.UserType userType75 = booking.UserType.STUDENT;
        double double76 = bookingReceiver71.getRate(userType75);
        booking.CancelCommand cancelCommand79 = new booking.CancelCommand(bookingReceiver71, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        bookingReceiver83.cancelBooking("hi!", "hi!");
        bookingReceiver83.cancelBooking("", "");
        booking.UserType userType90 = booking.UserType.STUDENT;
        double double91 = bookingReceiver83.getRate(userType90);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver71, "", "hi!", (int) '#', userType90);
        booking.BookCommand bookCommand93 = new booking.BookCommand(bookingReceiver59, "hi!", "EXTEND", 1, userType90);
        booking.BookCommand bookCommand94 = new booking.BookCommand(bookingReceiver0, "hi!", "", (-1), userType90);
        bookCommand94.doAction();
        bookCommand94.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 8.0d + "'", double55 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.STUDENT + "'", userType75.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5.0d + "'", double76 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.STUDENT + "'", userType90.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5.0d + "'", double91 == 5.0d);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.Class<?> wildcardClass31 = parkingSpot4.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        java.lang.String str35 = bookingReceiver28.getAction();
        booking.UserType userType39 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver28, "hi!", "hi!", (int) (byte) 0, userType39);
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (byte) 100, userType39);
        booking.CancelCommand cancelCommand44 = new booking.CancelCommand(bookingReceiver24, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        bookingReceiver24.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType63);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", (int) ' ', userType63);
        double double67 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.NON_FACULTY + "'", userType39.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        java.lang.String str20 = bookingReceiver13.getAction();
        booking.UserType userType24 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver13, "hi!", "hi!", (int) (byte) 0, userType24);
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver9, "", "", (int) (byte) 100, userType24);
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver9, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver33, "", "", (int) (byte) 100, userType48);
        booking.CancelCommand cancelCommand53 = new booking.CancelCommand(bookingReceiver33, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        java.lang.String str58 = bookingReceiver57.getAction();
        booking.UserType userType62 = null;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver57, "hi!", "", 100, userType62);
        booking.UserType userType67 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver57, "hi!", "hi!", 100, userType67);
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver57, "", "", (int) (short) 1, userType72);
        bookingReceiver33.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType72);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver9, "EXTEND", "", (int) ' ', userType72);
        double double76 = bookingReceiver0.getRate(userType72);
        java.lang.String str77 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.NON_FACULTY + "'", userType24.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CANCEL" + "'", str77, "CANCEL");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        boolean boolean3 = parkingSpot0.isOccupied();
        boolean boolean4 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        boolean boolean51 = parkingSpot18.isOccupied();
        parkingSpot18.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSensor42.update((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        parkingSpot43.detach((booking.Observer) parkingSensor58);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        parkingSensor58.update((booking.Subject) parkingSpot60);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        parkingSpot27.attach((booking.Observer) parkingSensor65);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot20.freeSpot();
        java.lang.String str25 = parkingSpot20.getLicensePlate();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) parkingSensor42);
        parkingSpot20.freeSpot();
        parkingSensor1.update((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot50.freeSpot();
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSpot50.detach((booking.Observer) bookingSystem62);
        parkingSpot50.freeSpot();
        java.lang.String str70 = parkingSpot50.getLicensePlate();
        parkingSensor1.update((booking.Subject) parkingSpot50);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand30);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        double double10 = bookingReceiver0.getDeposit();
        java.lang.String str11 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor16);
        parkingSpot0.occupySpot("BOOK");
        java.lang.String str69 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot49.detach((booking.Observer) bookingSystem58);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        boolean boolean66 = parkingSpot49.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.UserType userType72 = booking.UserType.STUDENT;
        double double73 = bookingReceiver0.getRate(userType72);
        double double74 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.STUDENT + "'", userType72.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 5.0d + "'", double73 == 5.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-8.0d) + "'", double74 == (-8.0d));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.CancelCommand cancelCommand3 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "CANCEL");
        // The following exception was thrown during execution in test generation
        try {
            cancelCommand3.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.cancelBooking(String, String)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        boolean boolean88 = parkingSpot68.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        bookingReceiver52.cancelBooking("hi!", "hi!");
        bookingReceiver52.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        double double65 = bookingReceiver52.getRate(userType63);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "", "BOOK", (int) ' ', userType63);
        bookingReceiver0.cancelBooking("CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand72 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 8.0d + "'", double65 == 8.0d);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        double double12 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 8.0d + "'", double12 == 8.0d);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSpot32.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot61.detach((booking.Observer) bookingSystem68);
        parkingSensor60.update((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot61.detach((booking.Observer) parkingSensor76);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        parkingSpot32.freeSpot();
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        parkingSpot2.detach((booking.Observer) bookingSystem95);
        parkingSpot2.freeSpot();
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        double double15 = bookingReceiver0.getDeposit();
        double double16 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand19 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        double double20 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand23 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        bookingSystem58.update((booking.Subject) parkingSpot59);
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        parkingSpot59.freeSpot();
        java.lang.String str68 = parkingSpot59.getLicensePlate();
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        parkingSpot15.detach((booking.Observer) bookingSystem69);
        parkingSpot15.occupySpot("");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("BOOK");
        parkingSpot2.occupySpot("hi!");
        parkingSpot2.occupySpot("");
        parkingSpot2.freeSpot();
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        double double26 = bookingReceiver19.getDeposit();
        java.lang.String str27 = bookingReceiver19.getAction();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver31.getRate(userType75);
        bookingReceiver19.extendBooking("hi!", "", (int) (short) -1, userType75);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver0, "hi!", "EXTEND", (int) '4', userType75);
        booking.CancelCommand cancelCommand82 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        cancelCommand82.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        bookingReceiver4.cancelBooking("hi!", "hi!");
        bookingReceiver4.cancelBooking("", "");
        booking.UserType userType11 = booking.UserType.STUDENT;
        double double12 = bookingReceiver4.getRate(userType11);
        bookingReceiver4.cancelBooking("hi!", "");
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        java.lang.String str26 = bookingReceiver19.getAction();
        booking.UserType userType30 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver19, "hi!", "hi!", (int) (byte) 0, userType30);
        double double32 = bookingReceiver19.getAmount();
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        booking.UserType userType40 = booking.UserType.STUDENT;
        double double41 = bookingReceiver36.getRate(userType40);
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver19, "EXTEND", "", (int) (byte) 10, userType40);
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver4, "hi!", "BOOK", (int) (short) 1, userType40);
        bookCommand43.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand43);
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.STUDENT + "'", userType11.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.NON_FACULTY + "'", userType30.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.STUDENT + "'", userType40.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5.0d + "'", double41 == 5.0d);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        java.lang.String str29 = bookingReceiver25.getAction();
        booking.BookingReceiver bookingReceiver30 = null;
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        booking.UserType userType38 = booking.UserType.FACULTY;
        bookingReceiver34.bookSpace("", "", 100, userType38);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver30, "hi!", "", 0, userType38);
        double double41 = bookingReceiver25.getRate(userType38);
        bookingReceiver0.extendBooking("hi!", "CANCEL", (int) (short) 1, userType38);
        double double43 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 8.0d + "'", double41 == 8.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        booking.UserType userType21 = booking.UserType.FACULTY;
        bookingReceiver17.bookSpace("", "", 100, userType21);
        bookingReceiver2.extendBooking("", "", (int) 'a', userType21);
        booking.UserType userType24 = booking.UserType.NON_FACULTY;
        double double25 = bookingReceiver2.getRate(userType24);
        bookingReceiver2.cancelBooking("BOOK", "hi!");
        java.lang.String str29 = bookingReceiver2.getAction();
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver2, "BOOK", "EXTEND");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand32);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        bookingReceiver34.cancelBooking("hi!", "hi!");
        double double38 = bookingReceiver34.getAmount();
        bookingReceiver34.cancelBooking("EXTEND", "hi!");
        java.lang.String str42 = bookingReceiver34.getAction();
        double double43 = bookingReceiver34.getAmount();
        double double44 = bookingReceiver34.getDeposit();
        booking.CancelCommand cancelCommand47 = new booking.CancelCommand(bookingReceiver34, "BOOK", "BOOK");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand47);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.FACULTY + "'", userType21.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.NON_FACULTY + "'", userType24.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CANCEL" + "'", str42, "CANCEL");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand51);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        bookingReceiver58.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand71 = new booking.CancelCommand(bookingReceiver58, "BOOK", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand71);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        bookCommand84.doAction();
        bookCommand84.doAction();
        bookCommand84.doAction();
        bookCommand84.doAction();
        bookCommand84.doAction();
        bookCommand84.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand84);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        java.lang.String str39 = bookingReceiver38.getAction();
        booking.UserType userType43 = null;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver38, "hi!", "", 100, userType43);
        java.lang.String str45 = bookingReceiver38.getAction();
        booking.UserType userType49 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver38, "hi!", "hi!", (int) (byte) 0, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver38, "CANCEL", "CANCEL", (int) (short) 1, userType65);
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) (byte) 1, userType65);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        double double72 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.NON_FACULTY + "'", userType49.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        double double47 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("");
        java.lang.String str16 = parkingSpot0.getLicensePlate();
        parkingSpot0.freeSpot();
        java.lang.String str18 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        double double18 = bookingReceiver10.getDeposit();
        double double19 = bookingReceiver10.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        bookingReceiver23.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        booking.UserType userType59 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver49, "hi!", "hi!", 100, userType59);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        booking.UserType userType68 = booking.UserType.FACULTY;
        bookingReceiver64.bookSpace("", "", 100, userType68);
        bookingReceiver49.extendBooking("", "", (int) 'a', userType68);
        double double71 = bookingReceiver37.getRate(userType68);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver23, "BOOK", "", 100, userType68);
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver10, "BOOK", "BOOK", (int) (byte) 1, userType68);
        double double74 = bookingReceiver0.getRate(userType68);
        booking.CancelCommand cancelCommand77 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        java.lang.Class<?> wildcardClass78 = cancelCommand77.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 8.0d + "'", double71 == 8.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 8.0d + "'", double74 == 8.0d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        bookingReceiver37.cancelBooking("hi!", "hi!");
        bookingReceiver37.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.UserType userType48 = booking.UserType.FACULTY;
        bookingReceiver44.bookSpace("", "", 100, userType48);
        double double50 = bookingReceiver37.getRate(userType48);
        booking.UserType userType54 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver37, "BOOK", "", (int) '#', userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        java.lang.String str70 = bookingReceiver63.getAction();
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver63, "hi!", "hi!", (int) (byte) 0, userType74);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver59, "", "", (int) (byte) 100, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver37, "CANCEL", "EXTEND", (int) '#', userType74);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 0, userType74);
        extendCommand78.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.VISITOR + "'", userType54.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        bookCommand29.doAction();
        bookCommand29.doAction();
        bookCommand29.doAction();
        bookCommand29.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand29);
        bookCommand29.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver25.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        double double41 = bookingReceiver34.getDeposit();
        java.lang.String str42 = bookingReceiver34.getAction();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        java.lang.String str57 = bookingReceiver56.getAction();
        booking.UserType userType61 = null;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver56, "hi!", "", 100, userType61);
        booking.UserType userType66 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand67 = new booking.BookCommand(bookingReceiver56, "hi!", "hi!", 100, userType66);
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        booking.UserType userType75 = booking.UserType.FACULTY;
        bookingReceiver71.bookSpace("", "", 100, userType75);
        bookingReceiver56.extendBooking("", "", (int) 'a', userType75);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver46, "", "", 0, userType75);
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        java.lang.String str86 = bookingReceiver79.getAction();
        booking.UserType userType90 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver79, "hi!", "hi!", (int) (byte) 0, userType90);
        double double92 = bookingReceiver46.getRate(userType90);
        bookingReceiver34.extendBooking("hi!", "", (int) (short) -1, userType90);
        double double94 = bookingReceiver25.getRate(userType90);
        double double95 = bookingReceiver25.getDeposit();
        booking.UserType userType96 = booking.UserType.NON_FACULTY;
        double double97 = bookingReceiver25.getRate(userType96);
        bookingReceiver0.extendBooking("", "EXTEND", 10, userType96);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.NON_FACULTY + "'", userType90.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 8.0d + "'", double95 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType96 + "' != '" + booking.UserType.NON_FACULTY + "'", userType96.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 10.0d + "'", double97 == 10.0d);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor37 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        bookingSystem45.update((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) bookingSystem45);
        parkingSensor37.update((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot56.freeSpot();
        java.lang.String str61 = parkingSpot56.getLicensePlate();
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) parkingSensor78);
        parkingSpot56.freeSpot();
        parkingSensor37.update((booking.Subject) parkingSpot56);
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        parkingSensor35.update((booking.Subject) parkingSpot56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.CommandInvoker commandInvoker13 = new booking.CommandInvoker();
        commandInvoker13.executeCommand();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        extendCommand27.doAction();
        commandInvoker13.setCommand((booking.ICommand) extendCommand27);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        bookCommand41.doAction();
        commandInvoker13.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.UserType userType56 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver46, "hi!", "hi!", 100, userType56);
        bookCommand57.doAction();
        bookCommand57.doAction();
        bookCommand57.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand57);
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker63 = new booking.CommandInvoker();
        commandInvoker63.executeCommand();
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        bookCommand76.doAction();
        bookCommand76.doAction();
        bookCommand76.doAction();
        bookCommand76.doAction();
        bookCommand76.doAction();
        bookCommand76.doAction();
        bookCommand76.doAction();
        commandInvoker63.setCommand((booking.ICommand) bookCommand76);
        bookCommand76.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand76);
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        java.lang.String str19 = bookingReceiver0.getAction();
        double double20 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (byte) 100, userType36);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        booking.UserType userType52 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand53 = new booking.BookCommand(bookingReceiver42, "hi!", "hi!", 100, userType52);
        bookingReceiver21.bookSpace("hi!", "hi!", (int) (short) -1, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        booking.UserType userType89 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver79, "hi!", "hi!", 100, userType89);
        bookingReceiver58.bookSpace("hi!", "hi!", (int) (short) -1, userType89);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver21, "hi!", "", 0, userType89);
        double double93 = bookingReceiver0.getRate(userType89);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CANCEL" + "'", str19, "CANCEL");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 8.0d + "'", double93 == 8.0d);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        booking.CancelCommand cancelCommand41 = new booking.CancelCommand(bookingReceiver0, "", "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        parkingSpot27.freeSpot();
        java.lang.Class<?> wildcardClass43 = parkingSpot27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        java.lang.String str39 = bookingReceiver38.getAction();
        booking.UserType userType43 = null;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver38, "hi!", "", 100, userType43);
        java.lang.String str45 = bookingReceiver38.getAction();
        booking.UserType userType49 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver38, "hi!", "hi!", (int) (byte) 0, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver38, "CANCEL", "CANCEL", (int) (short) 1, userType65);
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) (byte) 1, userType65);
        bookCommand68.doAction();
        bookCommand68.doAction();
        bookCommand68.doAction();
        bookCommand68.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.NON_FACULTY + "'", userType49.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        bookingReceiver20.extendBooking("", "", (int) 'a', userType39);
        bookingReceiver4.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType39);
        bookingReceiver0.bookSpace("", "hi!", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        bookingReceiver44.cancelBooking("hi!", "hi!");
        java.lang.String str48 = bookingReceiver44.getAction();
        booking.BookingReceiver bookingReceiver49 = null;
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        booking.UserType userType57 = booking.UserType.FACULTY;
        bookingReceiver53.bookSpace("", "", 100, userType57);
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver49, "hi!", "", 0, userType57);
        double double60 = bookingReceiver44.getRate(userType57);
        booking.UserType userType64 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver44, "BOOK", "EXTEND", (int) (short) 10, userType64);
        double double66 = bookingReceiver0.getRate(userType64);
        java.lang.String str67 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CANCEL" + "'", str48, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 8.0d + "'", double60 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.0d + "'", double66 == 8.0d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "BOOK" + "'", str67, "BOOK");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double9 = bookingReceiver0.getDeposit();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) 100, userType13);
        // The following exception was thrown during execution in test generation
        try {
            extendCommand14.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 8.0d + "'", double9 == 8.0d);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        bookingSystem58.update((booking.Subject) parkingSpot59);
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        parkingSpot65.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        parkingSpot65.attach((booking.Observer) bookingSystem79);
        parkingSpot65.freeSpot();
        java.lang.String str82 = parkingSpot65.getLicensePlate();
        parkingSpot65.freeSpot();
        bookingSystem47.update((booking.Subject) parkingSpot65);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        java.lang.String str19 = bookingReceiver12.getAction();
        booking.UserType userType23 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver12, "hi!", "hi!", (int) (byte) 0, userType23);
        double double25 = bookingReceiver12.getAmount();
        java.lang.String str26 = bookingReceiver12.getAction();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        booking.UserType userType59 = booking.UserType.FACULTY;
        bookingReceiver55.bookSpace("", "", 100, userType59);
        bookingReceiver40.extendBooking("", "", (int) 'a', userType59);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver30, "", "", 0, userType59);
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver12, "hi!", "", 1, userType59);
        double double64 = bookingReceiver0.getRate(userType59);
        double double65 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.NON_FACULTY + "'", userType23.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.FACULTY + "'", userType59.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 8.0d + "'", double64 == 8.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 8.0d + "'", double65 == 8.0d);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        bookingReceiver0.cancelBooking("BOOK", "EXTEND");
        java.lang.String str83 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "CANCEL" + "'", str83, "CANCEL");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        bookingReceiver46.cancelBooking("hi!", "hi!");
        bookingReceiver46.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        booking.UserType userType57 = booking.UserType.FACULTY;
        bookingReceiver53.bookSpace("", "", 100, userType57);
        double double59 = bookingReceiver46.getRate(userType57);
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        bookingReceiver63.cancelBooking("hi!", "hi!");
        booking.UserType userType67 = booking.UserType.STUDENT;
        double double68 = bookingReceiver63.getRate(userType67);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver46, "hi!", "CANCEL", (int) (short) 10, userType67);
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver35, "BOOK", "EXTEND", (int) '4', userType67);
        extendCommand70.doAction();
        extendCommand70.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand70);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8.0d + "'", double59 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.STUDENT + "'", userType67.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5.0d + "'", double68 == 5.0d);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSpot32.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        bookingSystem52.update((booking.Subject) parkingSpot59);
        parkingSpot2.attach((booking.Observer) bookingSystem52);
        parkingSpot2.occupySpot("hi!");
        boolean boolean76 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "hi!");
        booking.CancelCommand cancelCommand45 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        cancelCommand45.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.freeSpot();
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        double double17 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        double double25 = bookingReceiver21.getAmount();
        bookingReceiver21.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        booking.UserType userType49 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver39, "hi!", "hi!", 100, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        booking.UserType userType58 = booking.UserType.FACULTY;
        bookingReceiver54.bookSpace("", "", 100, userType58);
        bookingReceiver39.extendBooking("", "", (int) 'a', userType58);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver29, "", "", 0, userType58);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        double double75 = bookingReceiver29.getRate(userType73);
        double double76 = bookingReceiver21.getRate(userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        bookingReceiver80.cancelBooking("hi!", "hi!");
        booking.UserType userType84 = booking.UserType.STUDENT;
        double double85 = bookingReceiver80.getRate(userType84);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver21, "", "CANCEL", (int) (byte) 100, userType84);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver0, "hi!", "CANCEL", 0, userType84);
        double double88 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.FACULTY + "'", userType49.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.STUDENT + "'", userType84.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.0d + "'", double85 == 5.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        java.lang.String str29 = bookingReceiver22.getAction();
        booking.UserType userType33 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver22, "hi!", "hi!", (int) (byte) 0, userType33);
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver22, "hi!", "BOOK");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        bookingReceiver41.cancelBooking("hi!", "hi!");
        bookingReceiver41.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        double double54 = bookingReceiver41.getRate(userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        bookingReceiver58.cancelBooking("hi!", "hi!");
        booking.UserType userType62 = booking.UserType.STUDENT;
        double double63 = bookingReceiver58.getRate(userType62);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver41, "hi!", "CANCEL", (int) (short) 10, userType62);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        java.lang.String str75 = bookingReceiver68.getAction();
        booking.UserType userType79 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver68, "hi!", "hi!", (int) (byte) 0, userType79);
        double double81 = bookingReceiver68.getAmount();
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        bookingReceiver85.cancelBooking("hi!", "hi!");
        booking.UserType userType89 = booking.UserType.STUDENT;
        double double90 = bookingReceiver85.getRate(userType89);
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver68, "EXTEND", "", (int) (byte) 10, userType89);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver41, "BOOK", "CANCEL", (int) 'a', userType89);
        bookingReceiver22.extendBooking("EXTEND", "EXTEND", (int) (short) 10, userType89);
        booking.ExtendCommand extendCommand94 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (-1), userType89);
        double double95 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.NON_FACULTY + "'", userType33.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 8.0d + "'", double54 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.STUDENT + "'", userType62.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.NON_FACULTY + "'", userType79.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.STUDENT + "'", userType89.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5.0d + "'", double90 == 5.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("");
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("BOOK");
        java.lang.String str19 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "BOOK" + "'", str19, "BOOK");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        booking.UserType userType40 = booking.UserType.STUDENT;
        double double41 = bookingReceiver36.getRate(userType40);
        double double42 = bookingReceiver36.getAmount();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        double double45 = bookingReceiver43.getDeposit();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        java.lang.String str60 = bookingReceiver53.getAction();
        booking.UserType userType64 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver53, "hi!", "hi!", (int) (byte) 0, userType64);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver49, "", "", (int) (byte) 100, userType64);
        booking.CancelCommand cancelCommand69 = new booking.CancelCommand(bookingReceiver49, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        booking.UserType userType88 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver73, "", "", (int) (short) 1, userType88);
        bookingReceiver49.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType88);
        bookingReceiver43.extendBooking("CANCEL", "hi!", (-1), userType88);
        double double92 = bookingReceiver36.getRate(userType88);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) -1, userType88);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.STUDENT + "'", userType40.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5.0d + "'", double41 == 5.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.NON_FACULTY + "'", userType64.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.0d + "'", double92 == 8.0d);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        bookingSystem14.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        java.lang.String str20 = parkingSpot15.getLicensePlate();
        boolean boolean21 = parkingSpot15.isOccupied();
        parkingSensor10.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        parkingSpot23.freeSpot();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        parkingSpot29.attach((booking.Observer) parkingSensor76);
        parkingSpot26.attach((booking.Observer) parkingSensor76);
        parkingSpot23.attach((booking.Observer) parkingSensor76);
        parkingSpot23.occupySpot("EXTEND");
        parkingSensor10.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand30);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        extendCommand55.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand55);
        extendCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        bookingReceiver20.extendBooking("", "", (int) 'a', userType39);
        bookingReceiver4.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType39);
        bookingReceiver0.bookSpace("", "hi!", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        booking.UserType userType57 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand58 = new booking.BookCommand(bookingReceiver47, "hi!", "hi!", 100, userType57);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        booking.UserType userType66 = booking.UserType.FACULTY;
        bookingReceiver62.bookSpace("", "", 100, userType66);
        bookingReceiver47.extendBooking("", "", (int) 'a', userType66);
        booking.UserType userType69 = booking.UserType.NON_FACULTY;
        double double70 = bookingReceiver47.getRate(userType69);
        bookingReceiver47.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver77 = null;
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        bookingReceiver81.cancelBooking("hi!", "hi!");
        booking.UserType userType85 = booking.UserType.STUDENT;
        double double86 = bookingReceiver81.getRate(userType85);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver77, "BOOK", "hi!", 0, userType85);
        bookingReceiver47.bookSpace("EXTEND", "BOOK", (int) (short) -1, userType85);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", 0, userType85);
        booking.CancelCommand cancelCommand92 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.NON_FACULTY + "'", userType69.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.STUDENT + "'", userType85.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.0d + "'", double86 == 5.0d);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("EXTEND");
        boolean boolean15 = parkingSpot4.isOccupied();
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        parkingSpot19.detach((booking.Observer) parkingSensor34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        parkingSensor34.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        bookingSystem16.update((booking.Subject) parkingSpot36);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSpot9.detach((booking.Observer) bookingSystem29);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        bookingSystem29.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot4.attach((booking.Observer) parkingSensor52);
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor55 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        java.lang.String str56 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = null;
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.BookCommand bookCommand26 = new booking.BookCommand(bookingReceiver16, "BOOK", "hi!", 0, userType24);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType24);
        bookingReceiver0.cancelBooking("", "CANCEL");
        java.lang.String str31 = bookingReceiver0.getAction();
        double double32 = bookingReceiver0.getDeposit();
        java.lang.String str33 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CANCEL" + "'", str31, "CANCEL");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CANCEL" + "'", str33, "CANCEL");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        extendCommand33.doAction();
        commandInvoker19.setCommand((booking.ICommand) extendCommand33);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver37, "BOOK", "CANCEL");
        commandInvoker19.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand61);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        bookingReceiver64.cancelBooking("hi!", "hi!");
        double double68 = bookingReceiver64.getAmount();
        bookingReceiver64.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver64, "EXTEND", "EXTEND");
        cancelCommand74.doAction();
        cancelCommand74.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand74);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver79 = new booking.BookingReceiver();
        java.lang.String str80 = bookingReceiver79.getAction();
        booking.UserType userType84 = null;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver79, "hi!", "", 100, userType84);
        java.lang.String str86 = bookingReceiver79.getAction();
        booking.UserType userType90 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver79, "hi!", "hi!", (int) (byte) 0, userType90);
        extendCommand91.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand91);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.NON_FACULTY + "'", userType90.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSpot13.detach((booking.Observer) bookingSystem33);
        bookingSystem7.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot13.detach((booking.Observer) bookingSystem84);
        parkingSpot13.occupySpot("hi!");
        boolean boolean88 = parkingSpot13.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        java.lang.String str10 = bookingReceiver9.getAction();
        booking.UserType userType14 = null;
        booking.ExtendCommand extendCommand15 = new booking.ExtendCommand(bookingReceiver9, "hi!", "", 100, userType14);
        java.lang.String str16 = bookingReceiver9.getAction();
        double double17 = bookingReceiver9.getDeposit();
        java.lang.String str18 = bookingReceiver9.getAction();
        bookingReceiver9.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        booking.UserType userType35 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand36 = new booking.BookCommand(bookingReceiver25, "hi!", "hi!", 100, userType35);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        double double59 = bookingReceiver25.getRate(userType56);
        booking.BookCommand bookCommand60 = new booking.BookCommand(bookingReceiver9, "BOOK", "BOOK", (int) (byte) 10, userType56);
        double double61 = bookingReceiver0.getRate(userType56);
        bookingReceiver0.cancelBooking("BOOK", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8.0d + "'", double59 == 8.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor16);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot71.freeSpot();
        parkingSpot71.freeSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot71);
        java.lang.String str78 = parkingSpot71.getLicensePlate();
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        bookingSystem82.update((booking.Subject) parkingSpot83);
        parkingSpot83.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        parkingSpot83.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot83);
        parkingSpot71.detach((booking.Observer) parkingSensor93);
        parkingSensor16.update((booking.Subject) parkingSpot71);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        bookingReceiver4.cancelBooking("hi!", "hi!");
        bookingReceiver4.cancelBooking("", "");
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver4, "", "hi!");
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        booking.UserType userType46 = booking.UserType.FACULTY;
        bookingReceiver42.bookSpace("", "", 100, userType46);
        bookingReceiver27.extendBooking("", "", (int) 'a', userType46);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver17, "", "", 0, userType46);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        double double63 = bookingReceiver17.getRate(userType61);
        booking.UserType userType67 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver17, "hi!", "CANCEL", (int) ' ', userType67);
        bookingReceiver4.bookSpace("hi!", "hi!", 10, userType67);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        booking.UserType userType83 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand84 = new booking.BookCommand(bookingReceiver73, "hi!", "hi!", 100, userType83);
        booking.UserType userType88 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver73, "", "", (int) (short) 1, userType88);
        bookingReceiver4.bookSpace("EXTEND", "BOOK", (int) 'a', userType88);
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) 'a', userType88);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand91.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.NON_FACULTY + "'", userType67.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + userType83 + "' != '" + booking.UserType.FACULTY + "'", userType83.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.UserType userType17 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) '#', userType17);
        extendCommand18.doAction();
        extendCommand18.doAction();
        extendCommand18.doAction();
        extendCommand18.doAction();
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType17 + "' != '" + booking.UserType.VISITOR + "'", userType17.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.CommandInvoker commandInvoker13 = new booking.CommandInvoker();
        commandInvoker13.executeCommand();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        booking.UserType userType26 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver15, "hi!", "hi!", (int) (byte) 0, userType26);
        extendCommand27.doAction();
        commandInvoker13.setCommand((booking.ICommand) extendCommand27);
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        bookCommand41.doAction();
        commandInvoker13.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.setCommand((booking.ICommand) bookCommand41);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        booking.UserType userType56 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver46, "hi!", "hi!", 100, userType56);
        bookCommand57.doAction();
        bookCommand57.doAction();
        bookCommand57.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand57);
        bookCommand57.doAction();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.NON_FACULTY + "'", userType26.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        booking.UserType userType39 = booking.UserType.FACULTY;
        bookingReceiver35.bookSpace("", "", 100, userType39);
        bookingReceiver20.extendBooking("", "", (int) 'a', userType39);
        bookingReceiver4.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType39);
        bookingReceiver0.bookSpace("", "hi!", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        booking.UserType userType57 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand58 = new booking.BookCommand(bookingReceiver47, "hi!", "hi!", 100, userType57);
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        booking.UserType userType66 = booking.UserType.FACULTY;
        bookingReceiver62.bookSpace("", "", 100, userType66);
        bookingReceiver47.extendBooking("", "", (int) 'a', userType66);
        booking.UserType userType69 = booking.UserType.NON_FACULTY;
        double double70 = bookingReceiver47.getRate(userType69);
        bookingReceiver47.cancelBooking("BOOK", "hi!");
        booking.BookingReceiver bookingReceiver77 = null;
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        bookingReceiver81.cancelBooking("hi!", "hi!");
        booking.UserType userType85 = booking.UserType.STUDENT;
        double double86 = bookingReceiver81.getRate(userType85);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver77, "BOOK", "hi!", 0, userType85);
        bookingReceiver47.bookSpace("EXTEND", "BOOK", (int) (short) -1, userType85);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "", 0, userType85);
        extendCommand89.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.FACULTY + "'", userType57.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.NON_FACULTY + "'", userType69.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.STUDENT + "'", userType85.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.0d + "'", double86 == 5.0d);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSpot26.detach((booking.Observer) bookingSystem46);
        parkingSpot26.occupySpot("CANCEL");
        parkingSensor25.update((booking.Subject) parkingSpot26);
        parkingSensor9.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSensor9.update((booking.Subject) parkingSpot57);
        boolean boolean59 = parkingSpot57.isOccupied();
        boolean boolean60 = parkingSpot57.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot57);
        parkingSpot57.freeSpot();
        parkingSpot57.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        double double20 = bookingReceiver0.getAmount();
        double double21 = bookingReceiver0.getAmount();
        double double22 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = null;
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.BookCommand bookCommand26 = new booking.BookCommand(bookingReceiver16, "BOOK", "hi!", 0, userType24);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType24);
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        double double31 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand34 = new booking.CancelCommand(bookingReceiver0, "hi!", "EXTEND");
        bookingReceiver0.cancelBooking("BOOK", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        double double10 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        cancelCommand13.doAction();
        cancelCommand13.doAction();
        cancelCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        double double46 = bookingReceiver12.getRate(userType43);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        java.lang.String str73 = bookingReceiver66.getAction();
        booking.UserType userType77 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver66, "hi!", "hi!", (int) (byte) 0, userType77);
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver50, "CANCEL", "CANCEL", (int) (short) 1, userType77);
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver12, "CANCEL", "hi!", (int) (byte) 1, userType77);
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (byte) 10, userType77);
        bookCommand81.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 8.0d + "'", double46 == 8.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.NON_FACULTY + "'", userType77.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        double double10 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        java.lang.String str21 = bookingReceiver14.getAction();
        double double22 = bookingReceiver14.getAmount();
        double double23 = bookingReceiver14.getDeposit();
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        bookingReceiver27.extendBooking("hi!", "", 0, userType56);
        bookingReceiver14.bookSpace("", "BOOK", (int) (short) -1, userType56);
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver0, "", "EXTEND", 10, userType56);
        bookCommand61.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        double double51 = bookingReceiver0.getAmount();
        java.lang.String str52 = bookingReceiver0.getAction();
        double double53 = bookingReceiver0.getAmount();
        double double54 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver58 = null;
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        booking.UserType userType66 = booking.UserType.FACULTY;
        bookingReceiver62.bookSpace("", "", 100, userType66);
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver58, "hi!", "", 0, userType66);
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", (int) ' ', userType66);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-8.0d) + "'", double51 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "EXTEND" + "'", str52, "EXTEND");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-8.0d) + "'", double53 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-8.0d) + "'", double54 == (-8.0d));
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.FACULTY + "'", userType66.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor3 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot8.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot17.occupySpot("hi!");
        parkingSpot17.occupySpot("hi!");
        parkingSpot17.occupySpot("");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSensor3.update((booking.Subject) parkingSpot17);
        parkingSpot17.occupySpot("hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        booking.UserType userType32 = booking.UserType.FACULTY;
        bookingReceiver28.bookSpace("", "", 100, userType32);
        bookingReceiver13.extendBooking("", "", (int) 'a', userType32);
        booking.UserType userType35 = booking.UserType.NON_FACULTY;
        double double36 = bookingReceiver13.getRate(userType35);
        bookingReceiver13.cancelBooking("BOOK", "hi!");
        java.lang.String str40 = bookingReceiver13.getAction();
        double double41 = bookingReceiver13.getDeposit();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        double double47 = bookingReceiver45.getDeposit();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        java.lang.String str62 = bookingReceiver55.getAction();
        booking.UserType userType66 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver55, "hi!", "hi!", (int) (byte) 0, userType66);
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver51, "", "", (int) (byte) 100, userType66);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        java.lang.String str73 = bookingReceiver72.getAction();
        booking.UserType userType77 = null;
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver72, "hi!", "", 100, userType77);
        booking.UserType userType82 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand83 = new booking.BookCommand(bookingReceiver72, "hi!", "hi!", 100, userType82);
        bookingReceiver51.bookSpace("hi!", "hi!", (int) (short) -1, userType82);
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver45, "EXTEND", "BOOK", (int) (byte) -1, userType82);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver13, "CANCEL", "", 0, userType82);
        booking.UserType userType90 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver13, "EXTEND", "EXTEND", (int) '#', userType90);
        commandInvoker0.setCommand((booking.ICommand) bookCommand91);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.NON_FACULTY + "'", userType35.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CANCEL" + "'", str40, "CANCEL");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.NON_FACULTY + "'", userType66.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + userType82 + "' != '" + booking.UserType.FACULTY + "'", userType82.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.STUDENT + "'", userType90.equals(booking.UserType.STUDENT));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSpot26.detach((booking.Observer) bookingSystem46);
        parkingSpot26.occupySpot("CANCEL");
        parkingSensor25.update((booking.Subject) parkingSpot26);
        parkingSensor9.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSensor9.update((booking.Subject) parkingSpot57);
        boolean boolean59 = parkingSpot57.isOccupied();
        boolean boolean60 = parkingSpot57.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot57);
        parkingSpot57.occupySpot("CANCEL");
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        parkingSpot57.freeSpot();
        boolean boolean66 = parkingSpot57.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.CancelCommand cancelCommand19 = new booking.CancelCommand(bookingReceiver4, "hi!", "BOOK");
        bookingReceiver4.cancelBooking("CANCEL", "BOOK");
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        bookingReceiver26.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver33 = null;
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver33, "hi!", "", 0, userType41);
        bookingReceiver26.extendBooking("hi!", "BOOK", 1, userType41);
        bookingReceiver4.extendBooking("hi!", "BOOK", 1, userType41);
        booking.BookCommand bookCommand46 = new booking.BookCommand(bookingReceiver0, "hi!", "BOOK", (int) (byte) 100, userType41);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand46.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        double double47 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "EXTEND");
        double double51 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.UserType userType37 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "", (int) '#', userType37);
        double double39 = bookingReceiver0.getRate(userType37);
        bookingReceiver0.cancelBooking("", "");
        double double43 = bookingReceiver0.getDeposit();
        double double44 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand47 = new booking.CancelCommand(bookingReceiver0, "", "");
        double double48 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.VISITOR + "'", userType37.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 15.0d + "'", double39 == 15.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        java.lang.String str18 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        double double79 = bookingReceiver0.getAmount();
        java.lang.String str80 = bookingReceiver0.getAction();
        double double81 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "CANCEL" + "'", str80, "CANCEL");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        boolean boolean32 = parkingSpot19.isOccupied();
        parkingSpot19.occupySpot("EXTEND");
        parkingSpot19.freeSpot();
        parkingSensor17.update((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        parkingSpot55.detach((booking.Observer) bookingSystem75);
        parkingSpot55.occupySpot("CANCEL");
        parkingSensor54.update((booking.Subject) parkingSpot55);
        parkingSensor38.update((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor87 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        parkingSpot19.attach((booking.Observer) parkingSensor87);
        booking.Subject subject89 = null;
        // The following exception was thrown during execution in test generation
        try {
            parkingSensor87.update(subject89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        parkingSpot11.detach((booking.Observer) bookingSystem31);
        parkingSpot11.occupySpot("CANCEL");
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        parkingSpot11.attach((booking.Observer) bookingSystem61);
        parkingSpot4.attach((booking.Observer) bookingSystem61);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        java.lang.String str18 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("EXTEND");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        double double48 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = null;
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.BookCommand bookCommand26 = new booking.BookCommand(bookingReceiver16, "BOOK", "hi!", 0, userType24);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType24);
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double31 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        double double35 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        cancelCommand9.doAction();
        cancelCommand9.doAction();
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        bookingSystem68.update((booking.Subject) parkingSpot69);
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        bookingSystem74.update((booking.Subject) parkingSpot75);
        parkingSensor64.update((booking.Subject) parkingSpot75);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        booking.CommandInvoker commandInvoker27 = new booking.CommandInvoker();
        commandInvoker27.executeCommand();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        java.lang.String str36 = bookingReceiver29.getAction();
        booking.UserType userType40 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver29, "hi!", "hi!", (int) (byte) 0, userType40);
        extendCommand41.doAction();
        commandInvoker27.setCommand((booking.ICommand) extendCommand41);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        booking.UserType userType54 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver44, "hi!", "hi!", 100, userType54);
        bookCommand55.doAction();
        commandInvoker27.setCommand((booking.ICommand) bookCommand55);
        commandInvoker0.setCommand((booking.ICommand) bookCommand55);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.NON_FACULTY + "'", userType40.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.UserType userType79 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("CANCEL", "BOOK", (-1), userType79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        double double52 = bookingReceiver0.getDeposit();
        booking.UserType userType56 = null;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) 'a', userType56);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand57.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        java.lang.String str33 = bookingReceiver0.getAction();
        double double34 = bookingReceiver0.getAmount();
        double double35 = bookingReceiver0.getDeposit();
        java.lang.String str36 = bookingReceiver0.getAction();
        java.lang.String str37 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("CANCEL", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.CommandInvoker commandInvoker31 = new booking.CommandInvoker();
        commandInvoker31.executeCommand();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        bookCommand44.doAction();
        bookCommand44.doAction();
        commandInvoker31.setCommand((booking.ICommand) bookCommand44);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        commandInvoker31.setCommand((booking.ICommand) extendCommand64);
        extendCommand64.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand64);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        java.lang.String str80 = bookingReceiver73.getAction();
        booking.UserType userType84 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver73, "hi!", "hi!", (int) (byte) 0, userType84);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver69, "", "", (int) (byte) 100, userType84);
        extendCommand86.doAction();
        extendCommand86.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand86);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.NON_FACULTY + "'", userType84.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        java.lang.String str11 = parkingSpot4.getLicensePlate();
        boolean boolean12 = parkingSpot4.isOccupied();
        java.lang.String str13 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot18.freeSpot();
        java.lang.String str23 = parkingSpot18.getLicensePlate();
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSensor25.update((booking.Subject) parkingSpot26);
        booking.ParkingSensor parkingSensor40 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) parkingSensor40);
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot59);
        parkingSpot45.detach((booking.Observer) parkingSensor60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        parkingSensor60.update((booking.Subject) parkingSpot62);
        parkingSpot62.freeSpot();
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot72.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        parkingSpot72.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        parkingSpot62.detach((booking.Observer) parkingSensor82);
        bookingSystem42.update((booking.Subject) parkingSpot62);
        parkingSpot4.detach((booking.Observer) bookingSystem42);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        parkingSpot27.occupySpot("BOOK");
        parkingSpot27.occupySpot("");
        java.lang.String str47 = parkingSpot27.getLicensePlate();
        java.lang.String str48 = parkingSpot27.getLicensePlate();
        parkingSpot27.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.freeSpot();
        boolean boolean63 = parkingSpot61.isOccupied();
        parkingSpot61.freeSpot();
        bookingSystem40.update((booking.Subject) parkingSpot61);
        parkingSpot4.detach((booking.Observer) bookingSystem40);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("EXTEND");
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        parkingSpot18.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        parkingSensor33.update((booking.Subject) parkingSpot62);
        parkingSpot0.detach((booking.Observer) parkingSensor33);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        extendCommand40.doAction();
        extendCommand40.doAction();
        extendCommand40.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.UserType userType38 = booking.UserType.VISITOR;
        bookingReceiver0.extendBooking("", "hi!", (int) '#', userType38);
        java.lang.String str40 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double44 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        booking.UserType userType67 = booking.UserType.FACULTY;
        bookingReceiver63.bookSpace("", "", 100, userType67);
        bookingReceiver48.extendBooking("", "", (int) 'a', userType67);
        booking.CancelCommand cancelCommand72 = new booking.CancelCommand(bookingReceiver48, "BOOK", "CANCEL");
        java.lang.String str73 = bookingReceiver48.getAction();
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        bookingReceiver77.cancelBooking("hi!", "hi!");
        bookingReceiver77.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver84 = new booking.BookingReceiver();
        booking.UserType userType88 = booking.UserType.FACULTY;
        bookingReceiver84.bookSpace("", "", 100, userType88);
        double double90 = bookingReceiver77.getRate(userType88);
        booking.UserType userType94 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand95 = new booking.ExtendCommand(bookingReceiver77, "BOOK", "", (int) '#', userType94);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver48, "EXTEND", "EXTEND", (int) (byte) 0, userType94);
        bookingReceiver0.extendBooking("hi!", "", (int) (short) 10, userType94);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.VISITOR + "'", userType38.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "EXTEND" + "'", str40, "EXTEND");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "EXTEND" + "'", str73, "EXTEND");
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 8.0d + "'", double90 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.VISITOR + "'", userType94.equals(booking.UserType.VISITOR));
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        double double30 = bookingReceiver0.getDeposit();
        booking.UserType userType31 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double32 = bookingReceiver0.getRate(userType31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        boolean boolean3 = parkingSpot0.isOccupied();
        parkingSpot0.freeSpot();
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.CancelCommand cancelCommand42 = new booking.CancelCommand(bookingReceiver18, "BOOK", "CANCEL");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand42);
        java.lang.Class<?> wildcardClass44 = cancelCommand42.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        java.lang.String str10 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        java.lang.String str14 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CANCEL" + "'", str14, "CANCEL");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.freeSpot();
        boolean boolean15 = parkingSpot13.isOccupied();
        bookingSystem9.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot21.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot21);
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        parkingSpot13.attach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot38.freeSpot();
        java.lang.String str43 = parkingSpot38.getLicensePlate();
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor45 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSensor45.update((booking.Subject) parkingSpot46);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) parkingSensor60);
        bookingSystem32.update((booking.Subject) parkingSpot38);
        boolean boolean63 = parkingSpot38.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        bookingSystem39.update((booking.Subject) parkingSpot40);
        parkingSpot32.detach((booking.Observer) bookingSystem39);
        parkingSensor31.update((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot46);
        parkingSpot32.detach((booking.Observer) parkingSensor47);
        bookingSystem24.update((booking.Subject) parkingSpot32);
        parkingSpot32.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.Observer observer53 = null;
        parkingSpot32.detach(observer53);
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        parkingSpot2.attach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.freeSpot();
        boolean boolean59 = parkingSpot57.isOccupied();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        bookingSystem55.update((booking.Subject) parkingSpot57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        java.lang.Class<?> wildcardClass22 = bookCommand21.getClass();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        double double15 = bookingReceiver0.getDeposit();
        double double16 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        java.lang.String str24 = bookingReceiver20.getAction();
        booking.BookingReceiver bookingReceiver25 = null;
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver25, "hi!", "", 0, userType33);
        double double36 = bookingReceiver20.getRate(userType33);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "EXTEND", (int) (short) 10, userType40);
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver0, "EXTEND", "hi!", (int) 'a', userType40);
        bookingReceiver0.cancelBooking("", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CANCEL" + "'", str24, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 8.0d + "'", double36 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        double double16 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        java.lang.String str60 = bookingReceiver53.getAction();
        booking.UserType userType64 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver53, "hi!", "hi!", (int) (byte) 0, userType64);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver37, "CANCEL", "CANCEL", (int) (short) 1, userType64);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        booking.UserType userType80 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver70, "hi!", "hi!", 100, userType80);
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        booking.UserType userType89 = booking.UserType.FACULTY;
        bookingReceiver85.bookSpace("", "", 100, userType89);
        bookingReceiver70.extendBooking("", "", (int) 'a', userType89);
        booking.UserType userType92 = booking.UserType.NON_FACULTY;
        double double93 = bookingReceiver70.getRate(userType92);
        bookingReceiver37.extendBooking("hi!", "", (int) (byte) -1, userType92);
        bookingReceiver20.extendBooking("", "", 100, userType92);
        bookingReceiver0.extendBooking("BOOK", "BOOK", (int) (short) -1, userType92);
        booking.CancelCommand cancelCommand99 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "CANCEL");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.NON_FACULTY + "'", userType64.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.NON_FACULTY + "'", userType92.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand91 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand94 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        java.lang.Class<?> wildcardClass95 = cancelCommand94.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        boolean boolean34 = parkingSpot15.isOccupied();
        parkingSpot15.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        java.lang.String str6 = bookingReceiver0.getAction();
        booking.UserType userType10 = null;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) (short) 10, userType10);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CANCEL" + "'", str6, "CANCEL");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        bookingReceiver43.cancelBooking("hi!", "hi!");
        bookingReceiver43.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        booking.UserType userType54 = booking.UserType.FACULTY;
        bookingReceiver50.bookSpace("", "", 100, userType54);
        double double56 = bookingReceiver43.getRate(userType54);
        booking.UserType userType60 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver43, "BOOK", "", (int) '#', userType60);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) 1, userType60);
        double double63 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.VISITOR + "'", userType60.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 15.0d + "'", double63 == 15.0d);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        java.lang.String str15 = bookingReceiver8.getAction();
        booking.UserType userType19 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver8, "hi!", "hi!", (int) (byte) 0, userType19);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        bookingReceiver8.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType43);
        bookingReceiver0.extendBooking("hi!", "hi!", (int) (byte) 10, userType43);
        double double48 = bookingReceiver0.getAmount();
        java.lang.String str49 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.NON_FACULTY + "'", userType19.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 80.0d + "'", double48 == 80.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor4 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        parkingSpot5.occupySpot("hi!");
        booking.BookingSystem bookingSystem8 = new booking.BookingSystem((booking.Subject) parkingSpot5);
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot5);
        parkingSpot0.detach((booking.Observer) parkingSensor9);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot10.attach((booking.Observer) bookingSystem24);
        parkingSpot10.freeSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        java.lang.Class<?> wildcardClass28 = parkingSensor27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot49.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        boolean boolean58 = parkingSpot49.isOccupied();
        parkingSensor44.update((booking.Subject) parkingSpot49);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        java.lang.String str10 = bookingReceiver9.getAction();
        booking.UserType userType14 = null;
        booking.ExtendCommand extendCommand15 = new booking.ExtendCommand(bookingReceiver9, "hi!", "", 100, userType14);
        double double16 = bookingReceiver9.getDeposit();
        java.lang.String str17 = bookingReceiver9.getAction();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        bookingReceiver31.extendBooking("", "", (int) 'a', userType50);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver21, "", "", 0, userType50);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        double double67 = bookingReceiver21.getRate(userType65);
        bookingReceiver9.extendBooking("hi!", "", (int) (short) -1, userType65);
        double double69 = bookingReceiver0.getRate(userType65);
        java.lang.String str70 = bookingReceiver0.getAction();
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        bookingReceiver0.bookSpace("BOOK", "EXTEND", (int) '4', userType74);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "CANCEL" + "'", str70, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        java.lang.String str24 = bookingReceiver17.getAction();
        booking.UserType userType28 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver17, "hi!", "hi!", (int) (byte) 0, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver17, "CANCEL", "CANCEL", (int) (short) 1, userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        bookingReceiver17.extendBooking("hi!", "", (int) (byte) -1, userType72);
        bookingReceiver0.extendBooking("", "", 100, userType72);
        java.lang.String str76 = bookingReceiver0.getAction();
        java.lang.String str77 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.NON_FACULTY + "'", userType28.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "EXTEND" + "'", str76, "EXTEND");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "EXTEND" + "'", str77, "EXTEND");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        parkingSpot0.occupySpot("CANCEL");
        boolean boolean29 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        bookingReceiver6.bookSpace("hi!", "hi!", (int) (short) -1, userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) -1, userType37);
        double double41 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        booking.ParkingSensor parkingSensor4 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        parkingSpot5.occupySpot("hi!");
        booking.BookingSystem bookingSystem8 = new booking.BookingSystem((booking.Subject) parkingSpot5);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        bookingSystem8.update((booking.Subject) parkingSpot9);
        parkingSpot9.freeSpot();
        java.lang.String str14 = parkingSpot9.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) parkingSensor31);
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        parkingSensor4.update((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot41.freeSpot();
        java.lang.String str46 = parkingSpot41.getLicensePlate();
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor48 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        parkingSensor48.update((booking.Subject) parkingSpot49);
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) parkingSensor63);
        parkingSpot41.freeSpot();
        parkingSpot41.occupySpot("CANCEL");
        parkingSpot41.freeSpot();
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        parkingSpot9.attach((booking.Observer) bookingSystem69);
        boolean boolean71 = parkingSpot9.isOccupied();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "hi!", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        bookingReceiver0.extendBooking("hi!", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        double double49 = bookingReceiver36.getRate(userType47);
        booking.UserType userType53 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver36, "BOOK", "", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver36, "CANCEL", "EXTEND", (int) '#', userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver36, "CANCEL", "CANCEL", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 10, userType90);
        java.lang.String str94 = bookingReceiver0.getAction();
        java.lang.String str95 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 8.0d + "'", double49 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.VISITOR + "'", userType53.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "EXTEND" + "'", str95, "EXTEND");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        bookingSystem38.update((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot39.detach((booking.Observer) bookingSystem47);
        parkingSpot15.attach((booking.Observer) bookingSystem47);
        parkingSpot15.freeSpot();
        boolean boolean56 = parkingSpot15.isOccupied();
        java.lang.Class<?> wildcardClass57 = parkingSpot15.getClass();
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.UserType userType53 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver43, "hi!", "hi!", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (short) 1, userType58);
        bookingReceiver22.extendBooking("BOOK", "", (int) '4', userType58);
        double double61 = bookingReceiver0.getRate(userType58);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 8.0d + "'", double61 == 8.0d);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        bookCommand78.doAction();
        bookCommand78.doAction();
        java.lang.Class<?> wildcardClass81 = bookCommand78.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("CANCEL");
        java.lang.String str59 = parkingSpot0.getLicensePlate();
        java.lang.String str60 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CANCEL" + "'", str59, "CANCEL");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "CANCEL" + "'", str60, "CANCEL");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("BOOK");
        boolean boolean26 = parkingSpot19.isOccupied();
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver16 = null;
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        booking.UserType userType24 = booking.UserType.STUDENT;
        double double25 = bookingReceiver20.getRate(userType24);
        booking.BookCommand bookCommand26 = new booking.BookCommand(bookingReceiver16, "BOOK", "hi!", 0, userType24);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType24);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.UserType userType41 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver31, "hi!", "hi!", 100, userType41);
        booking.UserType userType46 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (short) 1, userType46);
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (-1), userType46);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.STUDENT + "'", userType24.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.UserType userType4 = null;
        booking.BookCommand bookCommand5 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 100, userType4);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.freeSpot();
        parkingSpot19.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem12.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        parkingSpot19.freeSpot();
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.UserType userType43 = booking.UserType.STUDENT;
        double double44 = bookingReceiver36.getRate(userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        java.lang.String str59 = bookingReceiver52.getAction();
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver52, "hi!", "hi!", (int) (byte) 0, userType63);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (byte) 100, userType63);
        booking.CancelCommand cancelCommand68 = new booking.CancelCommand(bookingReceiver48, "hi!", "hi!");
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver48, "", "CANCEL", (int) (byte) 1, userType72);
        booking.BookCommand bookCommand74 = new booking.BookCommand(bookingReceiver36, "EXTEND", "EXTEND", (int) (short) 1, userType72);
        commandInvoker0.setCommand((booking.ICommand) bookCommand74);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.STUDENT + "'", userType43.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 5.0d + "'", double44 == 5.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        java.lang.String str49 = parkingSpot18.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        boolean boolean19 = parkingSpot2.isOccupied();
        parkingSpot2.occupySpot("");
        parkingSpot2.occupySpot("EXTEND");
        boolean boolean24 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        double double25 = bookingReceiver21.getAmount();
        bookingReceiver21.cancelBooking("EXTEND", "hi!");
        java.lang.String str29 = bookingReceiver21.getAction();
        double double30 = bookingReceiver21.getAmount();
        double double31 = bookingReceiver21.getDeposit();
        booking.CancelCommand cancelCommand34 = new booking.CancelCommand(bookingReceiver21, "BOOK", "BOOK");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand34);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker38 = new booking.CommandInvoker();
        commandInvoker38.executeCommand();
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        bookCommand51.doAction();
        bookCommand51.doAction();
        commandInvoker38.setCommand((booking.ICommand) bookCommand51);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.UserType userType65 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver55, "hi!", "hi!", 100, userType65);
        booking.UserType userType70 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver55, "", "", (int) (short) 1, userType70);
        commandInvoker38.setCommand((booking.ICommand) extendCommand71);
        extendCommand71.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand71);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.FACULTY + "'", userType65.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.FACULTY + "'", userType70.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot36.freeSpot();
        java.lang.String str41 = parkingSpot36.getLicensePlate();
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        bookingSystem51.update((booking.Subject) parkingSpot52);
        parkingSpot44.detach((booking.Observer) bookingSystem51);
        parkingSensor43.update((booking.Subject) parkingSpot44);
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) parkingSensor58);
        parkingSpot36.freeSpot();
        parkingSpot36.occupySpot("CANCEL");
        parkingSpot36.freeSpot();
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        parkingSensor67.update((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot82);
        parkingSpot68.detach((booking.Observer) parkingSensor83);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot85);
        parkingSensor83.update((booking.Subject) parkingSpot85);
        booking.ParkingSensor parkingSensor90 = new booking.ParkingSensor((booking.Subject) parkingSpot85);
        parkingSpot85.freeSpot();
        parkingSensor65.update((booking.Subject) parkingSpot85);
        bookingSystem12.update((booking.Subject) parkingSpot85);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        cancelCommand30.doAction();
        cancelCommand30.doAction();
        cancelCommand30.doAction();
        cancelCommand30.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        double double22 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        bookingReceiver23.cancelBooking("hi!", "hi!");
        double double27 = bookingReceiver23.getAmount();
        bookingReceiver23.cancelBooking("EXTEND", "hi!");
        java.lang.String str31 = bookingReceiver23.getAction();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        bookingReceiver35.cancelBooking("hi!", "hi!");
        booking.UserType userType39 = booking.UserType.STUDENT;
        double double40 = bookingReceiver35.getRate(userType39);
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver35, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        bookingReceiver47.cancelBooking("hi!", "hi!");
        bookingReceiver47.cancelBooking("", "");
        booking.UserType userType54 = booking.UserType.STUDENT;
        double double55 = bookingReceiver47.getRate(userType54);
        booking.BookCommand bookCommand56 = new booking.BookCommand(bookingReceiver35, "", "hi!", (int) '#', userType54);
        bookingReceiver23.bookSpace("", "hi!", (int) 'a', userType54);
        double double58 = bookingReceiver0.getRate(userType54);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CANCEL" + "'", str31, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.STUDENT + "'", userType39.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.STUDENT + "'", userType54.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 5.0d + "'", double58 == 5.0d);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        bookingReceiver37.cancelBooking("hi!", "hi!");
        java.lang.String str41 = bookingReceiver37.getAction();
        booking.BookingReceiver bookingReceiver42 = null;
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver42, "hi!", "", 0, userType50);
        double double53 = bookingReceiver37.getRate(userType50);
        bookingReceiver12.extendBooking("hi!", "CANCEL", (int) (short) 1, userType50);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        double double88 = bookingReceiver12.getRate(userType84);
        bookingReceiver0.bookSpace("hi!", "", (int) (byte) 1, userType84);
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CANCEL" + "'", str41, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 8.0d + "'", double53 == 8.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 8.0d + "'", double88 == 8.0d);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.UserType userType16 = null;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver11, "hi!", "", 100, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver11, "", "", 0, userType40);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver44, "hi!", "hi!", (int) (byte) 0, userType55);
        double double57 = bookingReceiver11.getRate(userType55);
        double double58 = bookingReceiver0.getRate(userType55);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        double double62 = bookingReceiver0.getAmount();
        double double63 = bookingReceiver0.getAmount();
        double double64 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand67 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        cancelCommand67.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        java.lang.String str51 = parkingSpot10.getLicensePlate();
        boolean boolean52 = parkingSpot10.isOccupied();
        parkingSpot10.occupySpot("hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        java.lang.String str10 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CANCEL" + "'", str10, "CANCEL");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        bookingSystem24.update((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSpot45.detach((booking.Observer) bookingSystem65);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        bookingSystem65.update((booking.Subject) parkingSpot72);
        bookingSystem24.update((booking.Subject) parkingSpot72);
        parkingSpot0.attach((booking.Observer) bookingSystem24);
        booking.ParkingSensor parkingSensor88 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        boolean boolean15 = parkingSpot10.isOccupied();
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        parkingSpot34.detach((booking.Observer) bookingSystem54);
        parkingSpot34.occupySpot("CANCEL");
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSensor17.update((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSensor17.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        bookingSystem74.update((booking.Subject) parkingSpot75);
        parkingSpot67.detach((booking.Observer) bookingSystem74);
        parkingSpot65.detach((booking.Observer) bookingSystem74);
        parkingSpot10.detach((booking.Observer) bookingSystem74);
        java.lang.Class<?> wildcardClass82 = parkingSpot10.getClass();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        parkingSpot0.attach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSpot60.detach((booking.Observer) bookingSystem67);
        parkingSpot47.detach((booking.Observer) bookingSystem67);
        parkingSpot47.occupySpot("CANCEL");
        parkingSensor46.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot79.detach((booking.Observer) bookingSystem86);
        parkingSensor78.update((booking.Subject) parkingSpot79);
        parkingSpot47.detach((booking.Observer) parkingSensor78);
        bookingSystem23.update((booking.Subject) parkingSpot47);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver0, "EXTEND", "", (int) (byte) 10, userType21);
        java.lang.Class<?> wildcardClass24 = bookCommand23.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        double double52 = bookingReceiver0.getDeposit();
        booking.UserType userType56 = null;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) 'a', userType56);
        double double58 = bookingReceiver0.getAmount();
        double double59 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot18.detach((booking.Observer) parkingSensor33);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        boolean boolean50 = parkingSpot18.isOccupied();
        boolean boolean51 = parkingSpot18.isOccupied();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSensor parkingSensor20 = new booking.ParkingSensor((booking.Subject) parkingSpot6);
        java.lang.String str21 = parkingSpot6.getLicensePlate();
        bookingSystem3.update((booking.Subject) parkingSpot6);
        booking.ParkingSensor parkingSensor23 = new booking.ParkingSensor((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        boolean boolean37 = parkingSpot24.isOccupied();
        java.lang.String str38 = parkingSpot24.getLicensePlate();
        parkingSpot24.occupySpot("CANCEL");
        java.lang.String str41 = parkingSpot24.getLicensePlate();
        parkingSensor23.update((booking.Subject) parkingSpot24);
        parkingSpot24.freeSpot();
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver23 = null;
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        java.lang.String str34 = bookingReceiver27.getAction();
        bookingReceiver27.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        double double75 = bookingReceiver41.getRate(userType72);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver27, "BOOK", "", 100, userType72);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver23, "", "EXTEND", 100, userType72);
        bookingReceiver0.extendBooking("BOOK", "", (int) (short) 1, userType72);
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 8.0d + "'", double75 == 8.0d);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        java.lang.String str11 = parkingSpot4.getLicensePlate();
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        parkingSpot4.occupySpot("EXTEND");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        java.lang.String str29 = bookingReceiver25.getAction();
        booking.BookingReceiver bookingReceiver30 = null;
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        booking.UserType userType38 = booking.UserType.FACULTY;
        bookingReceiver34.bookSpace("", "", 100, userType38);
        booking.BookCommand bookCommand40 = new booking.BookCommand(bookingReceiver30, "hi!", "", 0, userType38);
        double double41 = bookingReceiver25.getRate(userType38);
        bookingReceiver0.extendBooking("hi!", "CANCEL", (int) (short) 1, userType38);
        booking.CancelCommand cancelCommand45 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        bookingReceiver49.cancelBooking("hi!", "hi!");
        bookingReceiver49.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        double double62 = bookingReceiver49.getRate(userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        bookingReceiver66.cancelBooking("hi!", "hi!");
        booking.UserType userType70 = booking.UserType.STUDENT;
        double double71 = bookingReceiver66.getRate(userType70);
        booking.BookCommand bookCommand72 = new booking.BookCommand(bookingReceiver49, "hi!", "CANCEL", (int) (short) 10, userType70);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "", "BOOK", (int) 'a', userType70);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 8.0d + "'", double41 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 8.0d + "'", double62 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.STUDENT + "'", userType70.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5.0d + "'", double71 == 5.0d);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor3 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        boolean boolean17 = parkingSpot4.isOccupied();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor19 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSensor3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.freeSpot();
        boolean boolean23 = parkingSpot21.isOccupied();
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        parkingSpot24.detach((booking.Observer) bookingSystem44);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        bookingSystem44.update((booking.Subject) parkingSpot51);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSensor65.update((booking.Subject) parkingSpot66);
        parkingSpot21.detach((booking.Observer) parkingSensor65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        parkingSensor70.update((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot85);
        parkingSpot71.detach((booking.Observer) parkingSensor86);
        parkingSensor65.update((booking.Subject) parkingSpot71);
        boolean boolean89 = parkingSpot71.isOccupied();
        parkingSensor3.update((booking.Subject) parkingSpot71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        double double20 = bookingReceiver13.getDeposit();
        java.lang.String str21 = bookingReceiver13.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.UserType userType53 = booking.UserType.FACULTY;
        bookingReceiver49.bookSpace("", "", 100, userType53);
        bookingReceiver34.extendBooking("", "", (int) 'a', userType53);
        double double56 = bookingReceiver22.getRate(userType53);
        double double57 = bookingReceiver13.getRate(userType53);
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", (int) (byte) 1, userType53);
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 8.0d + "'", double57 == 8.0d);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSpot51.detach((booking.Observer) bookingSystem71);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        bookingSystem71.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSensor1.update((booking.Subject) parkingSpot78);
        booking.Observer observer94 = null;
        parkingSpot78.detach(observer94);
        boolean boolean96 = parkingSpot78.isOccupied();
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        parkingSpot78.occupySpot("CANCEL");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSpot13.detach((booking.Observer) bookingSystem33);
        bookingSystem7.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot13.detach((booking.Observer) bookingSystem84);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot86);
        booking.ParkingSpot parkingSpot90 = new booking.ParkingSpot();
        parkingSpot90.occupySpot("hi!");
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot90);
        bookingSystem89.update((booking.Subject) parkingSpot90);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot90);
        booking.ParkingSensor parkingSensor96 = new booking.ParkingSensor((booking.Subject) parkingSpot90);
        boolean boolean97 = parkingSpot90.isOccupied();
        bookingSystem84.update((booking.Subject) parkingSpot90);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        java.lang.String str6 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CANCEL" + "'", str6, "CANCEL");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        bookingReceiver21.cancelBooking("", "");
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver21, "", "hi!");
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        bookingReceiver34.cancelBooking("hi!", "hi!");
        bookingReceiver34.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        double double47 = bookingReceiver34.getRate(userType45);
        bookingReceiver21.bookSpace("BOOK", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("", "", (int) '4', userType45);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 8.0d + "'", double47 == 8.0d);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSpot64.detach((booking.Observer) parkingSensor79);
        bookingSystem56.update((booking.Subject) parkingSpot64);
        parkingSensor33.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        java.lang.String str84 = parkingSpot64.getLicensePlate();
        booking.Observer observer85 = null;
        parkingSpot64.detach(observer85);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        boolean boolean31 = parkingSpot4.isOccupied();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        java.lang.String str12 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CANCEL" + "'", str12, "CANCEL");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        java.lang.String str15 = bookingReceiver14.getAction();
        booking.UserType userType19 = null;
        booking.ExtendCommand extendCommand20 = new booking.ExtendCommand(bookingReceiver14, "hi!", "", 100, userType19);
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver14, "hi!", "hi!", 100, userType24);
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver26, "hi!", "hi!", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        booking.UserType userType45 = booking.UserType.FACULTY;
        bookingReceiver41.bookSpace("", "", 100, userType45);
        bookingReceiver26.extendBooking("", "", (int) 'a', userType45);
        double double48 = bookingReceiver14.getRate(userType45);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 100, userType45);
        double double50 = bookingReceiver0.getAmount();
        java.lang.String str51 = bookingReceiver0.getAction();
        double double52 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double56 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        bookingReceiver60.cancelBooking("hi!", "hi!");
        bookingReceiver60.cancelBooking("", "");
        booking.UserType userType67 = booking.UserType.STUDENT;
        double double68 = bookingReceiver60.getRate(userType67);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        java.lang.String str77 = bookingReceiver76.getAction();
        booking.UserType userType81 = null;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver76, "hi!", "", 100, userType81);
        java.lang.String str83 = bookingReceiver76.getAction();
        booking.UserType userType87 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver76, "hi!", "hi!", (int) (byte) 0, userType87);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver72, "", "", (int) (byte) 100, userType87);
        booking.CancelCommand cancelCommand92 = new booking.CancelCommand(bookingReceiver72, "hi!", "hi!");
        booking.UserType userType96 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver72, "", "CANCEL", (int) (byte) 1, userType96);
        booking.BookCommand bookCommand98 = new booking.BookCommand(bookingReceiver60, "EXTEND", "EXTEND", (int) (short) 1, userType96);
        bookingReceiver0.bookSpace("hi!", "CANCEL", 0, userType96);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 8.0d + "'", double48 == 8.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CANCEL" + "'", str51, "CANCEL");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.STUDENT + "'", userType67.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5.0d + "'", double68 == 5.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.NON_FACULTY + "'", userType87.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType96 + "' != '" + booking.UserType.FACULTY + "'", userType96.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        bookingSystem34.update((booking.Subject) parkingSpot35);
        java.lang.String str40 = parkingSpot35.getLicensePlate();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot4.detach((booking.Observer) parkingSensor41);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        bookingReceiver9.cancelBooking("hi!", "hi!");
        java.lang.String str13 = bookingReceiver9.getAction();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        java.lang.String str28 = bookingReceiver27.getAction();
        booking.UserType userType32 = null;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver27, "hi!", "", 100, userType32);
        booking.UserType userType37 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver27, "hi!", "hi!", 100, userType37);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        booking.UserType userType46 = booking.UserType.FACULTY;
        bookingReceiver42.bookSpace("", "", 100, userType46);
        bookingReceiver27.extendBooking("", "", (int) 'a', userType46);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver17, "", "", 0, userType46);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        double double63 = bookingReceiver17.getRate(userType61);
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        java.lang.String str68 = bookingReceiver67.getAction();
        booking.UserType userType72 = null;
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver67, "hi!", "", 100, userType72);
        booking.UserType userType77 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver67, "hi!", "hi!", 100, userType77);
        booking.BookingReceiver bookingReceiver82 = new booking.BookingReceiver();
        booking.UserType userType86 = booking.UserType.FACULTY;
        bookingReceiver82.bookSpace("", "", 100, userType86);
        bookingReceiver67.extendBooking("", "", (int) 'a', userType86);
        booking.UserType userType89 = booking.UserType.NON_FACULTY;
        double double90 = bookingReceiver67.getRate(userType89);
        booking.ExtendCommand extendCommand91 = new booking.ExtendCommand(bookingReceiver17, "hi!", "BOOK", 1, userType89);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver9, "hi!", "", 0, userType89);
        bookingReceiver0.extendBooking("EXTEND", "EXTEND", (int) (short) 10, userType89);
        java.lang.String str94 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CANCEL" + "'", str13, "CANCEL");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.FACULTY + "'", userType46.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.FACULTY + "'", userType86.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.NON_FACULTY + "'", userType89.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSpot51.detach((booking.Observer) bookingSystem71);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        bookingSystem71.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSensor1.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot78);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        bookingReceiver0.cancelBooking("EXTEND", "EXTEND");
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        bookingReceiver35.cancelBooking("hi!", "hi!");
        booking.UserType userType39 = booking.UserType.STUDENT;
        double double40 = bookingReceiver35.getRate(userType39);
        double double41 = bookingReceiver35.getDeposit();
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        bookingReceiver51.cancelBooking("hi!", "hi!");
        java.lang.String str55 = bookingReceiver51.getAction();
        booking.BookingReceiver bookingReceiver56 = null;
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.UserType userType64 = booking.UserType.FACULTY;
        bookingReceiver60.bookSpace("", "", 100, userType64);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver56, "hi!", "", 0, userType64);
        double double67 = bookingReceiver51.getRate(userType64);
        booking.UserType userType71 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver51, "BOOK", "EXTEND", (int) (short) 10, userType71);
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver46, "CANCEL", "hi!", (int) ' ', userType71);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver35, "", "", (int) '#', userType71);
        bookingReceiver0.extendBooking("BOOK", "", (int) ' ', userType71);
        double double76 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.STUDENT + "'", userType39.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CANCEL" + "'", str42, "CANCEL");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CANCEL" + "'", str55, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 8.0d + "'", double67 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        parkingSpot0.attach((booking.Observer) bookingSystem23);
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        bookingSystem49.update((booking.Subject) parkingSpot50);
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        bookingSystem55.update((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        parkingSensor73.update((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor89 = new booking.ParkingSensor((booking.Subject) parkingSpot88);
        parkingSpot74.detach((booking.Observer) parkingSensor89);
        bookingSystem66.update((booking.Subject) parkingSpot74);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot74);
        parkingSpot56.detach((booking.Observer) parkingSensor92);
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        parkingSpot56.freeSpot();
        bookingSystem45.update((booking.Subject) parkingSpot56);
        java.lang.String str97 = parkingSpot56.getLicensePlate();
        booking.ParkingSensor parkingSensor98 = new booking.ParkingSensor((booking.Subject) parkingSpot56);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        bookingReceiver4.cancelBooking("hi!", "hi!");
        bookingReceiver4.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        double double17 = bookingReceiver4.getRate(userType15);
        java.lang.String str18 = bookingReceiver4.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        java.lang.String str29 = bookingReceiver22.getAction();
        booking.UserType userType33 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver22, "hi!", "hi!", (int) (byte) 0, userType33);
        double double35 = bookingReceiver22.getAmount();
        java.lang.String str36 = bookingReceiver22.getAction();
        double double37 = bookingReceiver22.getDeposit();
        double double38 = bookingReceiver22.getDeposit();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        bookingReceiver42.cancelBooking("hi!", "hi!");
        java.lang.String str46 = bookingReceiver42.getAction();
        booking.BookingReceiver bookingReceiver47 = null;
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver47, "hi!", "", 0, userType55);
        double double58 = bookingReceiver42.getRate(userType55);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver42, "BOOK", "EXTEND", (int) (short) 10, userType62);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver22, "EXTEND", "hi!", (int) 'a', userType62);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver4, "", "", 1, userType62);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", 0, userType62);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand66.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 8.0d + "'", double17 == 8.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CANCEL" + "'", str18, "CANCEL");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.NON_FACULTY + "'", userType33.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CANCEL" + "'", str46, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 8.0d + "'", double58 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        bookingReceiver0.extendBooking("hi!", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        double double49 = bookingReceiver36.getRate(userType47);
        booking.UserType userType53 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver36, "BOOK", "", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver36, "CANCEL", "EXTEND", (int) '#', userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver36, "CANCEL", "CANCEL", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 10, userType90);
        java.lang.String str94 = bookingReceiver0.getAction();
        double double95 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 8.0d + "'", double49 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.VISITOR + "'", userType53.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "EXTEND" + "'", str94, "EXTEND");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.freeSpot();
        boolean boolean63 = parkingSpot61.isOccupied();
        parkingSpot61.freeSpot();
        bookingSystem40.update((booking.Subject) parkingSpot61);
        parkingSpot4.detach((booking.Observer) bookingSystem40);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        bookingReceiver16.extendBooking("", "", (int) 'a', userType35);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (int) (short) 10, userType35);
        double double39 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        java.lang.String str48 = bookingReceiver47.getAction();
        booking.UserType userType52 = null;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver47, "hi!", "", 100, userType52);
        java.lang.String str54 = bookingReceiver47.getAction();
        booking.UserType userType58 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver47, "hi!", "hi!", (int) (byte) 0, userType58);
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver43, "", "", (int) (byte) 100, userType58);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver64, "hi!", "hi!", 100, userType74);
        bookingReceiver43.bookSpace("hi!", "hi!", (int) (short) -1, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver0, "", "", 1, userType74);
        double double78 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("BOOK", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.NON_FACULTY + "'", userType58.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 80.0d + "'", double78 == 80.0d);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSpot15.detach((booking.Observer) bookingSystem35);
        parkingSpot15.occupySpot("CANCEL");
        parkingSensor14.update((booking.Subject) parkingSpot15);
        bookingSystem9.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        bookingSystem9.update((booking.Subject) parkingSpot46);
        boolean boolean60 = parkingSpot46.isOccupied();
        java.lang.String str61 = parkingSpot46.getLicensePlate();
        parkingSpot46.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double9 = bookingReceiver0.getDeposit();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        bookingReceiver18.cancelBooking("hi!", "hi!");
        double double22 = bookingReceiver18.getAmount();
        bookingReceiver18.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver18, "", "", (int) (short) 100, userType33);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "hi!", (int) (byte) -1, userType33);
        extendCommand36.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 8.0d + "'", double9 == 8.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        java.lang.String str10 = bookingReceiver9.getAction();
        booking.UserType userType14 = null;
        booking.ExtendCommand extendCommand15 = new booking.ExtendCommand(bookingReceiver9, "hi!", "", 100, userType14);
        booking.UserType userType19 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver9, "hi!", "hi!", 100, userType19);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        double double43 = bookingReceiver9.getRate(userType40);
        double double44 = bookingReceiver0.getRate(userType40);
        booking.UserType userType48 = null;
        booking.BookCommand bookCommand49 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) '4', userType48);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 8.0d + "'", double43 == 8.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 8.0d + "'", double44 == 8.0d);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        double double10 = bookingReceiver0.getAmount();
        java.lang.String str11 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot3);
        parkingSpot0.detach((booking.Observer) parkingSensor17);
        parkingSpot0.freeSpot();
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker3 = new booking.CommandInvoker();
        commandInvoker3.executeCommand();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        java.lang.String str6 = bookingReceiver5.getAction();
        booking.UserType userType10 = null;
        booking.ExtendCommand extendCommand11 = new booking.ExtendCommand(bookingReceiver5, "hi!", "", 100, userType10);
        java.lang.String str12 = bookingReceiver5.getAction();
        booking.UserType userType16 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver5, "hi!", "hi!", (int) (byte) 0, userType16);
        extendCommand17.doAction();
        commandInvoker3.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        booking.UserType userType30 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver20, "hi!", "hi!", 100, userType30);
        bookCommand31.doAction();
        commandInvoker3.setCommand((booking.ICommand) bookCommand31);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        booking.UserType userType54 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver44, "hi!", "hi!", 100, userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        bookingReceiver44.extendBooking("", "", (int) 'a', userType63);
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver34, "", "", 0, userType63);
        commandInvoker3.setCommand((booking.ICommand) extendCommand66);
        extendCommand66.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand66);
        extendCommand66.doAction();
        extendCommand66.doAction();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.NON_FACULTY + "'", userType16.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        double double16 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.UserType userType16 = null;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver11, "hi!", "", 100, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver11, "", "", 0, userType40);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver44, "hi!", "hi!", (int) (byte) 0, userType55);
        double double57 = bookingReceiver11.getRate(userType55);
        double double58 = bookingReceiver0.getRate(userType55);
        double double59 = bookingReceiver0.getAmount();
        double double60 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        parkingSpot0.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        bookingSystem24.update((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSpot45.detach((booking.Observer) bookingSystem65);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        bookingSystem79.update((booking.Subject) parkingSpot80);
        parkingSpot72.detach((booking.Observer) bookingSystem79);
        bookingSystem65.update((booking.Subject) parkingSpot72);
        bookingSystem24.update((booking.Subject) parkingSpot72);
        parkingSpot0.attach((booking.Observer) bookingSystem24);
        parkingSpot0.occupySpot("hi!");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        parkingSpot27.freeSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        boolean boolean43 = parkingSpot27.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        double double51 = bookingReceiver0.getAmount();
        java.lang.String str52 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        java.lang.String str57 = bookingReceiver56.getAction();
        booking.UserType userType61 = null;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver56, "hi!", "", 100, userType61);
        java.lang.String str63 = bookingReceiver56.getAction();
        booking.UserType userType67 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver56, "hi!", "hi!", (int) (byte) 0, userType67);
        double double69 = bookingReceiver56.getAmount();
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        bookingReceiver73.cancelBooking("hi!", "hi!");
        booking.UserType userType77 = booking.UserType.STUDENT;
        double double78 = bookingReceiver73.getRate(userType77);
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver56, "EXTEND", "", (int) (byte) 10, userType77);
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver0, "EXTEND", "CANCEL", 1, userType77);
        bookCommand80.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-8.0d) + "'", double51 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "EXTEND" + "'", str52, "EXTEND");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.NON_FACULTY + "'", userType67.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 5.0d + "'", double78 == 5.0d);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        bookingSystem5.update((booking.Subject) parkingSpot6);
        parkingSpot6.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        parkingSpot0.attach((booking.Observer) bookingSystem16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        bookingSystem21.update((booking.Subject) parkingSpot22);
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot28.freeSpot();
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        bookingSystem16.update((booking.Subject) parkingSpot28);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (short) 1, userType32);
        commandInvoker0.setCommand((booking.ICommand) extendCommand33);
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand46 = new booking.BookCommand(bookingReceiver35, "hi!", "hi!", 100, userType45);
        bookCommand46.doAction();
        bookCommand46.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand46);
        bookCommand46.doAction();
        bookCommand46.doAction();
        bookCommand46.doAction();
        bookCommand46.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.String str10 = parkingSpot4.getLicensePlate();
        java.lang.String str11 = parkingSpot4.getLicensePlate();
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot21.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        parkingSpot21.freeSpot();
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem16.update((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        bookingSystem16.update((booking.Subject) parkingSpot36);
        parkingSpot36.occupySpot("BOOK");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver13.extendBooking("hi!", "", 0, userType42);
        bookingReceiver0.bookSpace("", "BOOK", (int) (short) -1, userType42);
        bookingReceiver0.cancelBooking("CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand52 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.Class<?> wildcardClass30 = parkingSpot4.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        bookingReceiver0.extendBooking("BOOK", "", (int) '4', userType36);
        java.lang.String str39 = bookingReceiver0.getAction();
        double double40 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand43 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "EXTEND" + "'", str39, "EXTEND");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 416.0d + "'", double40 == 416.0d);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("BOOK");
        boolean boolean31 = parkingSpot4.isOccupied();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        double double27 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        parkingSpot4.occupySpot("CANCEL");
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor13 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        bookingSystem21.update((booking.Subject) parkingSpot22);
        parkingSpot14.detach((booking.Observer) bookingSystem21);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        parkingSpot14.detach((booking.Observer) bookingSystem34);
        parkingSpot14.occupySpot("CANCEL");
        parkingSensor13.update((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        bookingSystem51.update((booking.Subject) parkingSpot52);
        parkingSpot44.detach((booking.Observer) bookingSystem51);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        bookingSystem64.update((booking.Subject) parkingSpot65);
        parkingSpot57.detach((booking.Observer) bookingSystem64);
        parkingSpot44.detach((booking.Observer) bookingSystem64);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot71);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        bookingSystem78.update((booking.Subject) parkingSpot79);
        parkingSpot71.detach((booking.Observer) bookingSystem78);
        bookingSystem64.update((booking.Subject) parkingSpot71);
        parkingSpot14.attach((booking.Observer) bookingSystem64);
        parkingSpot14.occupySpot("BOOK");
        parkingSpot14.occupySpot("");
        parkingSpot14.freeSpot();
        parkingSensor11.update((booking.Subject) parkingSpot14);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand30);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        extendCommand55.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand55);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot0);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.freeSpot();
        boolean boolean34 = parkingSpot32.isOccupied();
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        boolean boolean80 = parkingSpot32.isOccupied();
        parkingSensor1.update((booking.Subject) parkingSpot32);
        parkingSpot32.occupySpot("BOOK");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSpot9.detach((booking.Observer) bookingSystem29);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        bookingSystem29.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor51 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot4.attach((booking.Observer) parkingSensor52);
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot70.detach((booking.Observer) bookingSystem77);
        parkingSensor69.update((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot84);
        parkingSpot70.detach((booking.Observer) parkingSensor85);
        bookingSystem62.update((booking.Subject) parkingSpot70);
        java.lang.String str88 = parkingSpot70.getLicensePlate();
        parkingSensor54.update((booking.Subject) parkingSpot70);
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        boolean boolean36 = parkingSpot15.isOccupied();
        parkingSpot15.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        double double84 = bookingReceiver0.getDeposit();
        double double85 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand88 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double89 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 8.0d + "'", double84 == 8.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 8.0d + "'", double89 == 8.0d);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.freeSpot();
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.freeSpot();
        boolean boolean27 = parkingSpot25.isOccupied();
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        parkingSpot28.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        bookingSystem48.update((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSensor69.update((booking.Subject) parkingSpot70);
        parkingSpot25.detach((booking.Observer) parkingSensor69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        java.lang.String str77 = parkingSpot73.getLicensePlate();
        parkingSensor69.update((booking.Subject) parkingSpot73);
        parkingSpot19.detach((booking.Observer) parkingSensor69);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor84 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        parkingSpot68.freeSpot();
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        java.lang.String str4 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.String str17 = parkingSpot2.getLicensePlate();
        parkingSpot2.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.freeSpot();
        boolean boolean23 = parkingSpot21.isOccupied();
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        parkingSpot24.detach((booking.Observer) bookingSystem44);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        bookingSystem44.update((booking.Subject) parkingSpot51);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSensor65.update((booking.Subject) parkingSpot66);
        parkingSpot21.detach((booking.Observer) parkingSensor65);
        boolean boolean69 = parkingSpot21.isOccupied();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot21);
        bookingSystem20.update((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot76.freeSpot();
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot85);
        booking.ParkingSpot parkingSpot89 = new booking.ParkingSpot();
        parkingSpot89.occupySpot("hi!");
        bookingSystem88.update((booking.Subject) parkingSpot89);
        parkingSpot81.detach((booking.Observer) bookingSystem88);
        parkingSpot76.detach((booking.Observer) bookingSystem88);
        parkingSpot76.freeSpot();
        parkingSpot76.freeSpot();
        bookingSystem20.update((booking.Subject) parkingSpot76);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        bookingSystem23.update((booking.Subject) parkingSpot24);
        parkingSpot16.detach((booking.Observer) bookingSystem23);
        parkingSpot3.detach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        bookingSystem23.update((booking.Subject) parkingSpot30);
        parkingSpot0.attach((booking.Observer) bookingSystem23);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.freeSpot();
        boolean boolean47 = parkingSpot45.isOccupied();
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor62 = new booking.ParkingSensor((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSensor62.update((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor78 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        parkingSpot63.detach((booking.Observer) parkingSensor78);
        bookingSystem55.update((booking.Subject) parkingSpot63);
        parkingSpot45.attach((booking.Observer) bookingSystem55);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        bookingSystem23.update((booking.Subject) parkingSpot45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSpot64.detach((booking.Observer) parkingSensor79);
        bookingSystem56.update((booking.Subject) parkingSpot64);
        parkingSensor33.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        java.lang.String str84 = parkingSpot64.getLicensePlate();
        parkingSpot64.occupySpot("EXTEND");
        parkingSpot64.occupySpot("");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        bookingReceiver0.extendBooking("hi!", "", 0, userType29);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        double double49 = bookingReceiver36.getRate(userType47);
        booking.UserType userType53 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver36, "BOOK", "", (int) '#', userType53);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.UserType userType67 = null;
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver62, "hi!", "", 100, userType67);
        java.lang.String str69 = bookingReceiver62.getAction();
        booking.UserType userType73 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver62, "hi!", "hi!", (int) (byte) 0, userType73);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver58, "", "", (int) (byte) 100, userType73);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver36, "CANCEL", "EXTEND", (int) '#', userType73);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        booking.UserType userType90 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand91 = new booking.BookCommand(bookingReceiver80, "hi!", "hi!", 100, userType90);
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver36, "CANCEL", "CANCEL", (int) (short) -1, userType90);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "EXTEND", 10, userType90);
        bookingReceiver0.cancelBooking("BOOK", "EXTEND");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 8.0d + "'", double49 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.VISITOR + "'", userType53.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.NON_FACULTY + "'", userType73.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        boolean boolean64 = parkingSpot51.isOccupied();
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        parkingSpot10.detach((booking.Observer) bookingSystem65);
        boolean boolean67 = parkingSpot10.isOccupied();
        boolean boolean68 = parkingSpot10.isOccupied();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        double double16 = bookingReceiver0.getAmount();
        double double17 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        booking.UserType userType25 = booking.UserType.STUDENT;
        double double26 = bookingReceiver21.getRate(userType25);
        booking.CancelCommand cancelCommand29 = new booking.CancelCommand(bookingReceiver21, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        bookingReceiver33.cancelBooking("hi!", "hi!");
        bookingReceiver33.cancelBooking("", "");
        booking.UserType userType40 = booking.UserType.STUDENT;
        double double41 = bookingReceiver33.getRate(userType40);
        booking.BookCommand bookCommand42 = new booking.BookCommand(bookingReceiver21, "", "hi!", (int) '#', userType40);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        java.lang.String str50 = bookingReceiver43.getAction();
        booking.UserType userType54 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver43, "hi!", "hi!", (int) (byte) 0, userType54);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver43, "hi!", "BOOK");
        bookingReceiver43.cancelBooking("CANCEL", "BOOK");
        double double62 = bookingReceiver43.getAmount();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        bookingReceiver63.cancelBooking("hi!", "hi!");
        bookingReceiver63.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        booking.UserType userType74 = booking.UserType.FACULTY;
        bookingReceiver70.bookSpace("", "", 100, userType74);
        double double76 = bookingReceiver63.getRate(userType74);
        booking.UserType userType80 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver63, "BOOK", "", (int) '#', userType80);
        double double82 = bookingReceiver43.getRate(userType80);
        double double83 = bookingReceiver21.getRate(userType80);
        bookingReceiver0.extendBooking("EXTEND", "", 1, userType80);
        java.lang.String str85 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.STUDENT + "'", userType25.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 5.0d + "'", double26 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.STUDENT + "'", userType40.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5.0d + "'", double41 == 5.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.NON_FACULTY + "'", userType54.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 8.0d + "'", double76 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.VISITOR + "'", userType80.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 15.0d + "'", double82 == 15.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 15.0d + "'", double83 == 15.0d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "EXTEND" + "'", str85, "EXTEND");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        booking.ParkingSensor parkingSensor59 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.freeSpot();
        boolean boolean62 = parkingSpot60.isOccupied();
        parkingSpot60.freeSpot();
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSpot60.detach((booking.Observer) bookingSystem71);
        parkingSensor59.update((booking.Subject) parkingSpot60);
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        parkingSpot27.detach((booking.Observer) bookingSystem79);
        java.lang.Class<?> wildcardClass81 = bookingSystem79.getClass();
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver18, "", "", 0, userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "hi!", "", 1, userType47);
        double double52 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand55 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        cancelCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        bookingSystem19.update((booking.Subject) parkingSpot20);
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot26.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        bookingSystem34.update((booking.Subject) parkingSpot35);
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        parkingSpot26.attach((booking.Observer) bookingSystem40);
        parkingSensor15.update((booking.Subject) parkingSpot26);
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        boolean boolean58 = parkingSpot45.isOccupied();
        java.lang.String str59 = parkingSpot45.getLicensePlate();
        boolean boolean60 = parkingSpot45.isOccupied();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        parkingSpot45.occupySpot("CANCEL");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor4 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot5 = new booking.ParkingSpot();
        parkingSpot5.occupySpot("hi!");
        booking.BookingSystem bookingSystem8 = new booking.BookingSystem((booking.Subject) parkingSpot5);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        bookingSystem8.update((booking.Subject) parkingSpot9);
        parkingSpot9.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        parkingSpot9.freeSpot();
        parkingSensor4.update((booking.Subject) parkingSpot9);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        boolean boolean65 = parkingSpot52.isOccupied();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot78.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot78.attach((booking.Observer) bookingSystem92);
        parkingSensor67.update((booking.Subject) parkingSpot78);
        parkingSpot49.attach((booking.Observer) parkingSensor67);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot97 = new booking.ParkingSpot();
        bookingSystem96.update((booking.Subject) parkingSpot97);
        java.lang.Class<?> wildcardClass99 = bookingSystem96.getClass();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        extendCommand14.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        bookingReceiver13.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        booking.UserType userType24 = booking.UserType.FACULTY;
        bookingReceiver20.bookSpace("", "", 100, userType24);
        double double26 = bookingReceiver13.getRate(userType24);
        bookingReceiver0.bookSpace("BOOK", "EXTEND", (int) (byte) 10, userType24);
        double double28 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        bookingReceiver32.cancelBooking("hi!", "hi!");
        booking.UserType userType36 = booking.UserType.STUDENT;
        double double37 = bookingReceiver32.getRate(userType36);
        double double38 = bookingReceiver32.getDeposit();
        java.lang.String str39 = bookingReceiver32.getAction();
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        java.lang.String str44 = bookingReceiver43.getAction();
        booking.UserType userType48 = null;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver43, "hi!", "", 100, userType48);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        bookingReceiver43.extendBooking("hi!", "", 0, userType72);
        bookingReceiver32.bookSpace("", "CANCEL", (int) (short) -1, userType72);
        bookingReceiver0.extendBooking("", "hi!", (int) (byte) 100, userType72);
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 8.0d + "'", double26 == 8.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 80.0d + "'", double28 == 80.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.STUDENT + "'", userType36.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CANCEL" + "'", str39, "CANCEL");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor16);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        boolean boolean69 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSpot15.detach((booking.Observer) bookingSystem35);
        parkingSpot15.occupySpot("CANCEL");
        parkingSensor14.update((booking.Subject) parkingSpot15);
        bookingSystem9.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        bookingSystem9.update((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot64.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        bookingSystem9.update((booking.Subject) parkingSpot64);
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        parkingSpot64.freeSpot();
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot64);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        bookingSystem16.update((booking.Subject) parkingSpot17);
        parkingSpot9.detach((booking.Observer) bookingSystem16);
        parkingSpot4.detach((booking.Observer) bookingSystem16);
        parkingSpot4.freeSpot();
        java.lang.String str24 = parkingSpot4.getLicensePlate();
        java.lang.String str25 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver13, "hi!", "CANCEL", (int) ' ', userType63);
        bookingReceiver0.bookSpace("hi!", "hi!", 10, userType63);
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        java.lang.String str70 = bookingReceiver69.getAction();
        booking.UserType userType74 = null;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver69, "hi!", "", 100, userType74);
        booking.UserType userType79 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand80 = new booking.BookCommand(bookingReceiver69, "hi!", "hi!", 100, userType79);
        booking.UserType userType84 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver69, "", "", (int) (short) 1, userType84);
        bookingReceiver0.bookSpace("EXTEND", "BOOK", (int) 'a', userType84);
        double double87 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.FACULTY + "'", userType79.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 8.0d + "'", double87 == 8.0d);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        bookingReceiver13.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        booking.UserType userType24 = booking.UserType.FACULTY;
        bookingReceiver20.bookSpace("", "", 100, userType24);
        double double26 = bookingReceiver13.getRate(userType24);
        bookingReceiver0.bookSpace("BOOK", "EXTEND", (int) (byte) 10, userType24);
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        java.lang.String str30 = bookingReceiver29.getAction();
        booking.UserType userType34 = null;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver29, "hi!", "", 100, userType34);
        java.lang.String str36 = bookingReceiver29.getAction();
        booking.UserType userType40 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver29, "hi!", "hi!", (int) (byte) 0, userType40);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        booking.UserType userType55 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand56 = new booking.BookCommand(bookingReceiver45, "hi!", "hi!", 100, userType55);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.UserType userType64 = booking.UserType.FACULTY;
        bookingReceiver60.bookSpace("", "", 100, userType64);
        bookingReceiver45.extendBooking("", "", (int) 'a', userType64);
        bookingReceiver29.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType64);
        double double68 = bookingReceiver0.getRate(userType64);
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 8.0d + "'", double26 == 8.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 8.0d + "'", double28 == 8.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.NON_FACULTY + "'", userType40.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 8.0d + "'", double68 == 8.0d);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSensor30.update((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot45);
        parkingSpot31.detach((booking.Observer) parkingSensor46);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        parkingSensor46.update((booking.Subject) parkingSpot48);
        parkingSpot48.freeSpot();
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot58.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        parkingSpot58.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot58);
        parkingSpot48.detach((booking.Observer) parkingSensor68);
        bookingSystem28.update((booking.Subject) parkingSpot48);
        parkingSpot48.freeSpot();
        java.lang.String str72 = parkingSpot48.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.UserType userType16 = null;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver11, "hi!", "", 100, userType16);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.UserType userType40 = booking.UserType.FACULTY;
        bookingReceiver36.bookSpace("", "", 100, userType40);
        bookingReceiver21.extendBooking("", "", (int) 'a', userType40);
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver11, "", "", 0, userType40);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver44, "hi!", "hi!", (int) (byte) 0, userType55);
        double double57 = bookingReceiver11.getRate(userType55);
        double double58 = bookingReceiver0.getRate(userType55);
        double double59 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("CANCEL", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        boolean boolean13 = parkingSpot4.isOccupied();
        parkingSpot4.freeSpot();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        java.lang.String str16 = parkingSpot4.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.freeSpot();
        boolean boolean2 = parkingSpot0.isOccupied();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        parkingSpot18.detach((booking.Observer) parkingSensor33);
        bookingSystem10.update((booking.Subject) parkingSpot18);
        parkingSpot0.attach((booking.Observer) bookingSystem10);
        parkingSpot0.freeSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        boolean boolean59 = parkingSpot55.isOccupied();
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        parkingSpot49.attach((booking.Observer) parkingSensor60);
        booking.ParkingSensor parkingSensor62 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        boolean boolean54 = parkingSpot2.isOccupied();
        parkingSpot2.occupySpot("hi!");
        java.lang.String str57 = parkingSpot2.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        java.lang.String str12 = bookingReceiver11.getAction();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        bookingReceiver16.cancelBooking("hi!", "hi!");
        java.lang.String str20 = bookingReceiver16.getAction();
        booking.BookingReceiver bookingReceiver21 = null;
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        booking.BookCommand bookCommand31 = new booking.BookCommand(bookingReceiver21, "hi!", "", 0, userType29);
        double double32 = bookingReceiver16.getRate(userType29);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver16, "BOOK", "EXTEND", (int) (short) 10, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver11, "CANCEL", "hi!", (int) ' ', userType36);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) '#', userType36);
        double double40 = bookingReceiver0.getAmount();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CANCEL" + "'", str7, "CANCEL");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CANCEL" + "'", str20, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 8.0d + "'", double32 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor16);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver12, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.UserType userType31 = booking.UserType.STUDENT;
        double double32 = bookingReceiver24.getRate(userType31);
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver12, "", "hi!", (int) '#', userType31);
        bookingReceiver0.bookSpace("", "hi!", (int) 'a', userType31);
        double double35 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("hi!", "CANCEL");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.STUDENT + "'", userType31.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 5.0d + "'", double35 == 5.0d);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.freeSpot();
        boolean boolean53 = parkingSpot51.isOccupied();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        boolean boolean68 = parkingSpot55.isOccupied();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        parkingSensor54.update((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.freeSpot();
        boolean boolean75 = parkingSpot73.isOccupied();
        parkingSpot73.freeSpot();
        parkingSpot73.freeSpot();
        parkingSensor72.update((booking.Subject) parkingSpot73);
        parkingSensor1.update((booking.Subject) parkingSpot73);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        bookCommand13.doAction();
        bookCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.Class<?> wildcardClass54 = parkingSpot2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.CancelCommand cancelCommand9 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver13, "", "", 0, userType42);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        java.lang.String str47 = bookingReceiver46.getAction();
        booking.UserType userType51 = null;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver46, "hi!", "", 100, userType51);
        java.lang.String str53 = bookingReceiver46.getAction();
        booking.UserType userType57 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver46, "hi!", "hi!", (int) (byte) 0, userType57);
        double double59 = bookingReceiver13.getRate(userType57);
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver13, "hi!", "CANCEL", (int) ' ', userType63);
        bookingReceiver0.bookSpace("hi!", "hi!", 10, userType63);
        double double66 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("BOOK", "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.NON_FACULTY + "'", userType57.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        java.lang.String str25 = bookingReceiver0.getAction();
        double double26 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        double double37 = bookingReceiver30.getDeposit();
        java.lang.String str38 = bookingReceiver30.getAction();
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        java.lang.String str40 = bookingReceiver39.getAction();
        booking.UserType userType44 = null;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver39, "hi!", "", 100, userType44);
        java.lang.String str46 = bookingReceiver39.getAction();
        double double47 = bookingReceiver39.getDeposit();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        bookingReceiver51.cancelBooking("hi!", "hi!");
        booking.UserType userType55 = booking.UserType.STUDENT;
        double double56 = bookingReceiver51.getRate(userType55);
        double double57 = bookingReceiver51.getDeposit();
        java.lang.String str58 = bookingReceiver51.getAction();
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        java.lang.String str63 = bookingReceiver62.getAction();
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        bookingReceiver67.cancelBooking("hi!", "hi!");
        java.lang.String str71 = bookingReceiver67.getAction();
        booking.BookingReceiver bookingReceiver72 = null;
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.UserType userType80 = booking.UserType.FACULTY;
        bookingReceiver76.bookSpace("", "", 100, userType80);
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver72, "hi!", "", 0, userType80);
        double double83 = bookingReceiver67.getRate(userType80);
        booking.UserType userType87 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver67, "BOOK", "EXTEND", (int) (short) 10, userType87);
        booking.BookCommand bookCommand89 = new booking.BookCommand(bookingReceiver62, "CANCEL", "hi!", (int) ' ', userType87);
        booking.ExtendCommand extendCommand90 = new booking.ExtendCommand(bookingReceiver51, "", "", (int) '#', userType87);
        bookingReceiver39.bookSpace("BOOK", "", 0, userType87);
        double double92 = bookingReceiver30.getRate(userType87);
        bookingReceiver0.bookSpace("BOOK", "hi!", 100, userType87);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "EXTEND" + "'", str25, "EXTEND");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 776.0d + "'", double26 == 776.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.STUDENT + "'", userType55.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 5.0d + "'", double56 == 5.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CANCEL" + "'", str58, "CANCEL");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "CANCEL" + "'", str71, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 8.0d + "'", double83 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.0d + "'", double92 == 8.0d);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        bookingReceiver25.cancelBooking("hi!", "hi!");
        bookingReceiver25.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        booking.UserType userType36 = booking.UserType.FACULTY;
        bookingReceiver32.bookSpace("", "", 100, userType36);
        double double38 = bookingReceiver25.getRate(userType36);
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        bookingReceiver42.cancelBooking("hi!", "hi!");
        booking.UserType userType46 = booking.UserType.STUDENT;
        double double47 = bookingReceiver42.getRate(userType46);
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver25, "hi!", "CANCEL", (int) (short) 10, userType46);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        java.lang.String str59 = bookingReceiver52.getAction();
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver52, "hi!", "hi!", (int) (byte) 0, userType63);
        double double65 = bookingReceiver52.getAmount();
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        bookingReceiver69.cancelBooking("hi!", "hi!");
        booking.UserType userType73 = booking.UserType.STUDENT;
        double double74 = bookingReceiver69.getRate(userType73);
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver52, "EXTEND", "", (int) (byte) 10, userType73);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver25, "BOOK", "CANCEL", (int) 'a', userType73);
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "BOOK", (int) ' ', userType73);
        java.lang.Class<?> wildcardClass78 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 8.0d + "'", double38 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.STUDENT + "'", userType46.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 5.0d + "'", double47 == 5.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType73 + "' != '" + booking.UserType.STUDENT + "'", userType73.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.0d + "'", double74 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand84 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        double double85 = bookingReceiver0.getAmount();
        java.lang.Class<?> wildcardClass86 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-8.0d) + "'", double81 == (-8.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-8.0d) + "'", double85 == (-8.0d));
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        java.lang.String str27 = bookingReceiver20.getAction();
        booking.UserType userType31 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver20, "hi!", "hi!", (int) (byte) 0, userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        java.lang.String str37 = bookingReceiver36.getAction();
        booking.UserType userType41 = null;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver36, "hi!", "", 100, userType41);
        java.lang.String str43 = bookingReceiver36.getAction();
        booking.UserType userType47 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver36, "hi!", "hi!", (int) (byte) 0, userType47);
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver20, "CANCEL", "CANCEL", (int) (short) 1, userType47);
        booking.BookingReceiver bookingReceiver53 = new booking.BookingReceiver();
        java.lang.String str54 = bookingReceiver53.getAction();
        booking.UserType userType58 = null;
        booking.ExtendCommand extendCommand59 = new booking.ExtendCommand(bookingReceiver53, "hi!", "", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver53, "hi!", "hi!", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        booking.UserType userType72 = booking.UserType.FACULTY;
        bookingReceiver68.bookSpace("", "", 100, userType72);
        bookingReceiver53.extendBooking("", "", (int) 'a', userType72);
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        double double76 = bookingReceiver53.getRate(userType75);
        bookingReceiver20.extendBooking("hi!", "", (int) (byte) -1, userType75);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "CANCEL", 0, userType75);
        extendCommand78.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.NON_FACULTY + "'", userType31.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.NON_FACULTY + "'", userType47.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        bookingReceiver21.cancelBooking("hi!", "hi!");
        double double25 = bookingReceiver21.getAmount();
        bookingReceiver21.cancelBooking("EXTEND", "hi!");
        java.lang.String str29 = bookingReceiver21.getAction();
        double double30 = bookingReceiver21.getAmount();
        double double31 = bookingReceiver21.getDeposit();
        booking.CancelCommand cancelCommand34 = new booking.CancelCommand(bookingReceiver21, "BOOK", "BOOK");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand34);
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CANCEL" + "'", str29, "CANCEL");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.ICommand iCommand1 = null;
        commandInvoker0.setCommand(iCommand1);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot20.freeSpot();
        java.lang.String str25 = parkingSpot20.getLicensePlate();
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) parkingSensor42);
        parkingSpot20.freeSpot();
        parkingSensor1.update((booking.Subject) parkingSpot20);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        parkingSensor49.update((booking.Subject) parkingSpot50);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot50);
        parkingSpot47.detach((booking.Observer) parkingSensor64);
        parkingSpot47.freeSpot();
        parkingSensor46.update((booking.Subject) parkingSpot47);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        bookingReceiver24.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.UserType userType35 = booking.UserType.FACULTY;
        bookingReceiver31.bookSpace("", "", 100, userType35);
        double double37 = bookingReceiver24.getRate(userType35);
        booking.UserType userType41 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand42 = new booking.ExtendCommand(bookingReceiver24, "BOOK", "", (int) '#', userType41);
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        java.lang.String str57 = bookingReceiver50.getAction();
        booking.UserType userType61 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver50, "hi!", "hi!", (int) (byte) 0, userType61);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver46, "", "", (int) (byte) 100, userType61);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver24, "CANCEL", "EXTEND", (int) '#', userType61);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        booking.UserType userType78 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver68, "hi!", "hi!", 100, userType78);
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver24, "CANCEL", "CANCEL", (int) (short) -1, userType78);
        double double81 = bookingReceiver0.getRate(userType78);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.FACULTY + "'", userType35.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 8.0d + "'", double37 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.VISITOR + "'", userType41.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + userType61 + "' != '" + booking.UserType.NON_FACULTY + "'", userType61.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType78 + "' != '" + booking.UserType.FACULTY + "'", userType78.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 8.0d + "'", double81 == 8.0d);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        double double12 = bookingReceiver0.getAmount();
        java.lang.String str13 = bookingReceiver0.getAction();
        double double14 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        java.lang.String str25 = bookingReceiver18.getAction();
        booking.UserType userType29 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver18, "hi!", "hi!", (int) (byte) 0, userType29);
        booking.CancelCommand cancelCommand33 = new booking.CancelCommand(bookingReceiver18, "hi!", "BOOK");
        bookingReceiver18.cancelBooking("CANCEL", "BOOK");
        java.lang.String str37 = bookingReceiver18.getAction();
        double double38 = bookingReceiver18.getDeposit();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver52, "hi!", "hi!", 100, userType62);
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        booking.UserType userType71 = booking.UserType.FACULTY;
        bookingReceiver67.bookSpace("", "", 100, userType71);
        bookingReceiver52.extendBooking("", "", (int) 'a', userType71);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver42, "", "", 0, userType71);
        bookingReceiver18.bookSpace("EXTEND", "", (int) (byte) 100, userType71);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) (short) 10, userType71);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.NON_FACULTY + "'", userType29.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CANCEL" + "'", str37, "CANCEL");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        double double18 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.UserType userType53 = booking.UserType.FACULTY;
        bookingReceiver49.bookSpace("", "", 100, userType53);
        bookingReceiver34.extendBooking("", "", (int) 'a', userType53);
        double double56 = bookingReceiver22.getRate(userType53);
        booking.UserType userType57 = booking.UserType.VISITOR;
        double double58 = bookingReceiver22.getRate(userType57);
        bookingReceiver22.cancelBooking("BOOK", "BOOK");
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        booking.UserType userType85 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand86 = new booking.BookCommand(bookingReceiver75, "hi!", "hi!", 100, userType85);
        booking.BookingReceiver bookingReceiver90 = new booking.BookingReceiver();
        booking.UserType userType94 = booking.UserType.FACULTY;
        bookingReceiver90.bookSpace("", "", 100, userType94);
        bookingReceiver75.extendBooking("", "", (int) 'a', userType94);
        bookingReceiver65.extendBooking("hi!", "", 0, userType94);
        booking.ExtendCommand extendCommand98 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType94);
        bookingReceiver0.bookSpace("EXTEND", "", 10, userType94);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 8.0d + "'", double56 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType57 + "' != '" + booking.UserType.VISITOR + "'", userType57.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 15.0d + "'", double58 == 15.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.FACULTY + "'", userType85.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType94 + "' != '" + booking.UserType.FACULTY + "'", userType94.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        java.lang.String str12 = parkingSpot4.getLicensePlate();
        parkingSpot4.freeSpot();
        boolean boolean14 = parkingSpot4.isOccupied();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType27);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver12, "hi!", "hi!");
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver12, "", "CANCEL", (int) (byte) 1, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) (short) 1, userType36);
        double double39 = bookingReceiver0.getAmount();
        double double40 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        boolean boolean65 = parkingSpot52.isOccupied();
        booking.ParkingSensor parkingSensor66 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        bookingSystem71.update((booking.Subject) parkingSpot72);
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        bookingSystem77.update((booking.Subject) parkingSpot78);
        parkingSpot78.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSpot78.attach((booking.Observer) bookingSystem92);
        parkingSensor67.update((booking.Subject) parkingSpot78);
        parkingSpot49.attach((booking.Observer) parkingSensor67);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        parkingSpot49.occupySpot("hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        double double40 = bookingReceiver28.getAmount();
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        booking.UserType userType54 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand55 = new booking.BookCommand(bookingReceiver44, "hi!", "hi!", 100, userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        bookingReceiver44.extendBooking("", "", (int) 'a', userType63);
        bookingReceiver28.extendBooking("CANCEL", "hi!", (int) (short) 10, userType63);
        booking.BookCommand bookCommand67 = new booking.BookCommand(bookingReceiver0, "BOOK", "", (int) ' ', userType63);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.FACULTY + "'", userType54.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        boolean boolean26 = parkingSpot13.isOccupied();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        bookingSystem31.update((booking.Subject) parkingSpot32);
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot38);
        bookingSystem37.update((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        bookingSystem63.update((booking.Subject) parkingSpot64);
        parkingSpot56.detach((booking.Observer) bookingSystem63);
        parkingSpot43.detach((booking.Observer) bookingSystem63);
        parkingSpot43.occupySpot("CANCEL");
        parkingSensor42.update((booking.Subject) parkingSpot43);
        bookingSystem37.update((booking.Subject) parkingSpot43);
        parkingSensor27.update((booking.Subject) parkingSpot43);
        parkingSpot0.detach((booking.Observer) parkingSensor27);
        boolean boolean76 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        java.lang.String str19 = bookingReceiver0.getAction();
        double double20 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand23 = new booking.CancelCommand(bookingReceiver0, "", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CANCEL" + "'", str19, "CANCEL");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.UserType userType23 = booking.UserType.FACULTY;
        bookingReceiver19.bookSpace("", "", 100, userType23);
        double double25 = bookingReceiver12.getRate(userType23);
        java.lang.String str26 = bookingReceiver12.getAction();
        java.lang.String str27 = bookingReceiver12.getAction();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        java.lang.String str38 = bookingReceiver31.getAction();
        double double39 = bookingReceiver31.getDeposit();
        java.lang.String str40 = bookingReceiver31.getAction();
        bookingReceiver31.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        bookingReceiver47.cancelBooking("hi!", "hi!");
        double double51 = bookingReceiver47.getAmount();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        java.lang.String str62 = bookingReceiver55.getAction();
        booking.UserType userType66 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver55, "hi!", "hi!", (int) (byte) 0, userType66);
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        java.lang.String str72 = bookingReceiver71.getAction();
        booking.UserType userType76 = null;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver71, "hi!", "", 100, userType76);
        booking.UserType userType81 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand82 = new booking.BookCommand(bookingReceiver71, "hi!", "hi!", 100, userType81);
        booking.BookingReceiver bookingReceiver86 = new booking.BookingReceiver();
        booking.UserType userType90 = booking.UserType.FACULTY;
        bookingReceiver86.bookSpace("", "", 100, userType90);
        bookingReceiver71.extendBooking("", "", (int) 'a', userType90);
        bookingReceiver55.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType90);
        bookingReceiver47.extendBooking("hi!", "hi!", (int) (byte) 10, userType90);
        bookingReceiver31.extendBooking("CANCEL", "BOOK", 1, userType90);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver12, "", "", (int) (byte) 100, userType90);
        bookingReceiver0.bookSpace("BOOK", "EXTEND", (-1), userType90);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 8.0d + "'", double25 == 8.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CANCEL" + "'", str26, "CANCEL");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.NON_FACULTY + "'", userType66.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType81 + "' != '" + booking.UserType.FACULTY + "'", userType81.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType90 + "' != '" + booking.UserType.FACULTY + "'", userType90.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        java.lang.String str15 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.UserType userType55 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver40, "", "", (int) (short) 1, userType55);
        bookingReceiver19.extendBooking("BOOK", "", (int) '4', userType55);
        bookingReceiver0.extendBooking("CANCEL", "", 1, userType55);
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        bookingReceiver0.cancelBooking("EXTEND", "");
        booking.BookingReceiver bookingReceiver22 = null;
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        bookingReceiver26.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand63 = new booking.BookCommand(bookingReceiver52, "hi!", "hi!", 100, userType62);
        booking.BookingReceiver bookingReceiver67 = new booking.BookingReceiver();
        booking.UserType userType71 = booking.UserType.FACULTY;
        bookingReceiver67.bookSpace("", "", 100, userType71);
        bookingReceiver52.extendBooking("", "", (int) 'a', userType71);
        double double74 = bookingReceiver40.getRate(userType71);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver26, "BOOK", "", 100, userType71);
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver22, "hi!", "EXTEND", (int) '#', userType71);
        bookingReceiver0.extendBooking("", "BOOK", 0, userType71);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.FACULTY + "'", userType71.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 8.0d + "'", double74 == 8.0d);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        parkingSensor27.update((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot42);
        parkingSpot28.detach((booking.Observer) parkingSensor43);
        bookingSystem20.update((booking.Subject) parkingSpot28);
        booking.ParkingSensor parkingSensor46 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        parkingSpot10.detach((booking.Observer) parkingSensor46);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        parkingSpot10.freeSpot();
        boolean boolean50 = parkingSpot10.isOccupied();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        boolean boolean64 = parkingSpot51.isOccupied();
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        parkingSpot10.detach((booking.Observer) bookingSystem65);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor68 = new booking.ParkingSensor((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        bookingSystem76.update((booking.Subject) parkingSpot77);
        parkingSpot69.detach((booking.Observer) bookingSystem76);
        parkingSensor68.update((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor84 = new booking.ParkingSensor((booking.Subject) parkingSpot83);
        parkingSpot69.detach((booking.Observer) parkingSensor84);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        booking.BookingSystem bookingSystem89 = new booking.BookingSystem((booking.Subject) parkingSpot86);
        parkingSensor84.update((booking.Subject) parkingSpot86);
        bookingSystem65.update((booking.Subject) parkingSpot86);
        booking.BookingSystem bookingSystem92 = new booking.BookingSystem((booking.Subject) parkingSpot86);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.ParkingSensor parkingSensor85 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot68.freeSpot();
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot47.freeSpot();
        java.lang.String str52 = parkingSpot47.getLicensePlate();
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSensor54.update((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) parkingSensor69);
        parkingSpot47.freeSpot();
        parkingSensor28.update((booking.Subject) parkingSpot47);
        parkingSensor26.update((booking.Subject) parkingSpot47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        bookingReceiver12.extendBooking("", "", (int) 'a', userType31);
        double double34 = bookingReceiver0.getRate(userType31);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        java.lang.String str39 = bookingReceiver38.getAction();
        booking.UserType userType43 = null;
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver38, "hi!", "", 100, userType43);
        java.lang.String str45 = bookingReceiver38.getAction();
        booking.UserType userType49 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver38, "hi!", "hi!", (int) (byte) 0, userType49);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver38, "CANCEL", "CANCEL", (int) (short) 1, userType65);
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) (byte) 1, userType65);
        bookingReceiver0.cancelBooking("BOOK", "CANCEL");
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 8.0d + "'", double34 == 8.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.NON_FACULTY + "'", userType49.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        booking.UserType userType33 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand34 = new booking.BookCommand(bookingReceiver23, "hi!", "hi!", 100, userType33);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.UserType userType42 = booking.UserType.FACULTY;
        bookingReceiver38.bookSpace("", "", 100, userType42);
        bookingReceiver23.extendBooking("", "", (int) 'a', userType42);
        bookingReceiver0.bookSpace("hi!", "BOOK", (int) (short) 0, userType42);
        double double46 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        java.lang.String str61 = bookingReceiver54.getAction();
        booking.UserType userType65 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver54, "hi!", "hi!", (int) (byte) 0, userType65);
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver50, "", "", (int) (byte) 100, userType65);
        booking.CancelCommand cancelCommand70 = new booking.CancelCommand(bookingReceiver50, "hi!", "hi!");
        booking.UserType userType74 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand75 = new booking.BookCommand(bookingReceiver50, "", "CANCEL", (int) (byte) 1, userType74);
        bookingReceiver0.extendBooking("hi!", "EXTEND", (int) (byte) 1, userType74);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + userType65 + "' != '" + booking.UserType.NON_FACULTY + "'", userType65.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.FACULTY + "'", userType74.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType20);
        extendCommand21.doAction();
        extendCommand21.doAction();
        extendCommand21.doAction();
        extendCommand21.doAction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot11.detach((booking.Observer) bookingSystem18);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        bookingSystem31.update((booking.Subject) parkingSpot32);
        parkingSpot24.detach((booking.Observer) bookingSystem31);
        parkingSpot11.detach((booking.Observer) bookingSystem31);
        parkingSpot11.occupySpot("CANCEL");
        parkingSensor10.update((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        parkingSpot11.attach((booking.Observer) bookingSystem61);
        parkingSpot4.attach((booking.Observer) bookingSystem61);
        parkingSpot4.freeSpot();
        java.lang.String str85 = parkingSpot4.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        boolean boolean10 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor12 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSensor12.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        parkingSpot29.detach((booking.Observer) bookingSystem49);
        parkingSpot29.occupySpot("CANCEL");
        parkingSensor28.update((booking.Subject) parkingSpot29);
        parkingSensor12.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot60);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        parkingSensor61.update((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor77 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        parkingSpot62.detach((booking.Observer) parkingSensor77);
        parkingSpot29.detach((booking.Observer) parkingSensor77);
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        parkingSpot4.attach((booking.Observer) bookingSystem80);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.freeSpot();
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        bookingSystem28.update((booking.Subject) parkingSpot29);
        parkingSpot29.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        parkingSpot29.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot19.detach((booking.Observer) parkingSensor39);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSensor42.update((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        bookingSystem66.update((booking.Subject) parkingSpot67);
        parkingSpot59.detach((booking.Observer) bookingSystem66);
        parkingSensor58.update((booking.Subject) parkingSpot59);
        parkingSpot43.detach((booking.Observer) parkingSensor58);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor75 = new booking.ParkingSensor((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        bookingSystem83.update((booking.Subject) parkingSpot84);
        parkingSpot76.detach((booking.Observer) bookingSystem83);
        parkingSensor75.update((booking.Subject) parkingSpot76);
        booking.ParkingSensor parkingSensor90 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
        parkingSpot43.attach((booking.Observer) parkingSensor90);
        parkingSpot43.occupySpot("hi!");
        java.lang.String str94 = parkingSpot43.getLicensePlate();
        boolean boolean95 = parkingSpot43.isOccupied();
        parkingSpot43.freeSpot();
        booking.ParkingSensor parkingSensor97 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        parkingSpot19.detach((booking.Observer) parkingSensor97);
        booking.BookingSystem bookingSystem99 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        java.lang.String str6 = bookingReceiver0.getAction();
        booking.UserType userType10 = null;
        booking.ExtendCommand extendCommand11 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 1, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        cancelCommand14.doAction();
        cancelCommand14.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CANCEL" + "'", str6, "CANCEL");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.CancelCommand cancelCommand3 = new booking.CancelCommand(bookingReceiver0, "hi!", "");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        java.lang.String str33 = parkingSpot15.getLicensePlate();
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        extendCommand33.doAction();
        commandInvoker19.setCommand((booking.ICommand) extendCommand33);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver37, "BOOK", "CANCEL");
        commandInvoker19.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand61);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        bookingReceiver64.cancelBooking("hi!", "hi!");
        double double68 = bookingReceiver64.getAmount();
        bookingReceiver64.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand74 = new booking.CancelCommand(bookingReceiver64, "EXTEND", "EXTEND");
        cancelCommand74.doAction();
        cancelCommand74.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand74);
        booking.BookingReceiver bookingReceiver78 = new booking.BookingReceiver();
        java.lang.String str79 = bookingReceiver78.getAction();
        booking.UserType userType83 = null;
        booking.ExtendCommand extendCommand84 = new booking.ExtendCommand(bookingReceiver78, "hi!", "", 100, userType83);
        booking.UserType userType88 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand89 = new booking.BookCommand(bookingReceiver78, "hi!", "hi!", 100, userType88);
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        bookCommand89.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand89);
        bookCommand89.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + userType88 + "' != '" + booking.UserType.FACULTY + "'", userType88.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSensor54.update((booking.Subject) parkingSpot55);
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        java.lang.String str70 = parkingSpot55.getLicensePlate();
        bookingSystem52.update((booking.Subject) parkingSpot55);
        parkingSpot55.occupySpot("hi!");
        parkingSensor1.update((booking.Subject) parkingSpot55);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.UserType userType32 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand33 = new booking.BookCommand(bookingReceiver22, "hi!", "hi!", 100, userType32);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        bookingReceiver22.extendBooking("", "", (int) 'a', userType41);
        booking.ExtendCommand extendCommand44 = new booking.ExtendCommand(bookingReceiver12, "", "", 0, userType41);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        booking.UserType userType56 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand57 = new booking.ExtendCommand(bookingReceiver45, "hi!", "hi!", (int) (byte) 0, userType56);
        double double58 = bookingReceiver12.getRate(userType56);
        bookingReceiver0.extendBooking("hi!", "", (int) (short) -1, userType56);
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        double double63 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.FACULTY + "'", userType32.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.NON_FACULTY + "'", userType56.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        booking.UserType userType16 = booking.UserType.STUDENT;
        double double17 = bookingReceiver12.getRate(userType16);
        double double18 = bookingReceiver12.getDeposit();
        java.lang.String str19 = bookingReceiver12.getAction();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        bookingReceiver28.cancelBooking("hi!", "hi!");
        java.lang.String str32 = bookingReceiver28.getAction();
        booking.BookingReceiver bookingReceiver33 = null;
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.UserType userType41 = booking.UserType.FACULTY;
        bookingReceiver37.bookSpace("", "", 100, userType41);
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver33, "hi!", "", 0, userType41);
        double double44 = bookingReceiver28.getRate(userType41);
        booking.UserType userType48 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver28, "BOOK", "EXTEND", (int) (short) 10, userType48);
        booking.BookCommand bookCommand50 = new booking.BookCommand(bookingReceiver23, "CANCEL", "hi!", (int) ' ', userType48);
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) '#', userType48);
        bookingReceiver0.bookSpace("BOOK", "", 0, userType48);
        java.lang.String str53 = bookingReceiver0.getAction();
        java.lang.String str54 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.STUDENT + "'", userType16.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CANCEL" + "'", str19, "CANCEL");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CANCEL" + "'", str32, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType41 + "' != '" + booking.UserType.FACULTY + "'", userType41.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 8.0d + "'", double44 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BOOK" + "'", str53, "BOOK");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "BOOK" + "'", str54, "BOOK");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.CancelCommand cancelCommand10 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        double double11 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        java.lang.String str16 = bookingReceiver15.getAction();
        booking.UserType userType20 = null;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver15, "hi!", "", 100, userType20);
        java.lang.String str22 = bookingReceiver15.getAction();
        double double23 = bookingReceiver15.getDeposit();
        java.lang.String str24 = bookingReceiver15.getAction();
        bookingReceiver15.cancelBooking("BOOK", "");
        double double28 = bookingReceiver15.getAmount();
        double double29 = bookingReceiver15.getAmount();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        bookingReceiver33.cancelBooking("hi!", "hi!");
        double double37 = bookingReceiver33.getAmount();
        bookingReceiver33.cancelBooking("EXTEND", "hi!");
        java.lang.String str41 = bookingReceiver33.getAction();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        bookingReceiver45.cancelBooking("hi!", "hi!");
        booking.UserType userType49 = booking.UserType.STUDENT;
        double double50 = bookingReceiver45.getRate(userType49);
        booking.CancelCommand cancelCommand53 = new booking.CancelCommand(bookingReceiver45, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        bookingReceiver57.cancelBooking("hi!", "hi!");
        bookingReceiver57.cancelBooking("", "");
        booking.UserType userType64 = booking.UserType.STUDENT;
        double double65 = bookingReceiver57.getRate(userType64);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver45, "", "hi!", (int) '#', userType64);
        bookingReceiver33.bookSpace("", "hi!", (int) 'a', userType64);
        bookingReceiver15.extendBooking("", "", (int) (byte) 100, userType64);
        bookingReceiver0.bookSpace("", "CANCEL", (int) 'a', userType64);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CANCEL" + "'", str41, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType49 + "' != '" + booking.UserType.STUDENT + "'", userType49.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.STUDENT + "'", userType64.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 5.0d + "'", double65 == 5.0d);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        bookingReceiver12.cancelBooking("hi!", "hi!");
        bookingReceiver12.cancelBooking("", "");
        booking.UserType userType19 = booking.UserType.STUDENT;
        double double20 = bookingReceiver12.getRate(userType19);
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver0, "", "hi!", (int) '#', userType19);
        double double22 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        booking.UserType userType30 = booking.UserType.FACULTY;
        bookingReceiver26.bookSpace("", "", 100, userType30);
        bookingReceiver26.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand37 = new booking.CancelCommand(bookingReceiver26, "CANCEL", "");
        java.lang.String str38 = bookingReceiver26.getAction();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        double double49 = bookingReceiver42.getDeposit();
        java.lang.String str50 = bookingReceiver42.getAction();
        double double51 = bookingReceiver42.getDeposit();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        double double57 = bookingReceiver55.getDeposit();
        booking.BookingReceiver bookingReceiver61 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        java.lang.String str72 = bookingReceiver65.getAction();
        booking.UserType userType76 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand77 = new booking.ExtendCommand(bookingReceiver65, "hi!", "hi!", (int) (byte) 0, userType76);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver61, "", "", (int) (byte) 100, userType76);
        booking.BookingReceiver bookingReceiver82 = new booking.BookingReceiver();
        java.lang.String str83 = bookingReceiver82.getAction();
        booking.UserType userType87 = null;
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver82, "hi!", "", 100, userType87);
        booking.UserType userType92 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand93 = new booking.BookCommand(bookingReceiver82, "hi!", "hi!", 100, userType92);
        bookingReceiver61.bookSpace("hi!", "hi!", (int) (short) -1, userType92);
        booking.ExtendCommand extendCommand95 = new booking.ExtendCommand(bookingReceiver55, "EXTEND", "BOOK", (int) (byte) -1, userType92);
        bookingReceiver42.bookSpace("BOOK", "CANCEL", (int) (short) 0, userType92);
        bookingReceiver26.extendBooking("", "", (-1), userType92);
        booking.BookCommand bookCommand98 = new booking.BookCommand(bookingReceiver0, "BOOK", "CANCEL", (int) (short) 100, userType92);
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.STUDENT + "'", userType19.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.FACULTY + "'", userType30.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CANCEL" + "'", str38, "CANCEL");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.NON_FACULTY + "'", userType76.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + userType92 + "' != '" + booking.UserType.FACULTY + "'", userType92.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        bookingReceiver4.cancelBooking("hi!", "hi!");
        bookingReceiver4.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        double double17 = bookingReceiver4.getRate(userType15);
        java.lang.String str18 = bookingReceiver4.getAction();
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        java.lang.String str29 = bookingReceiver22.getAction();
        booking.UserType userType33 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver22, "hi!", "hi!", (int) (byte) 0, userType33);
        double double35 = bookingReceiver22.getAmount();
        java.lang.String str36 = bookingReceiver22.getAction();
        double double37 = bookingReceiver22.getDeposit();
        double double38 = bookingReceiver22.getDeposit();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        bookingReceiver42.cancelBooking("hi!", "hi!");
        java.lang.String str46 = bookingReceiver42.getAction();
        booking.BookingReceiver bookingReceiver47 = null;
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.UserType userType55 = booking.UserType.FACULTY;
        bookingReceiver51.bookSpace("", "", 100, userType55);
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver47, "hi!", "", 0, userType55);
        double double58 = bookingReceiver42.getRate(userType55);
        booking.UserType userType62 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver42, "BOOK", "EXTEND", (int) (short) 10, userType62);
        booking.BookCommand bookCommand64 = new booking.BookCommand(bookingReceiver22, "EXTEND", "hi!", (int) 'a', userType62);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver4, "", "", 1, userType62);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "CANCEL", "BOOK", (int) (short) 0, userType62);
        // The following exception was thrown during execution in test generation
        try {
            bookCommand66.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"booking.BookingReceiver.bookSpace(String, String, int, booking.UserType)\" because \"this.receiver\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 8.0d + "'", double17 == 8.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CANCEL" + "'", str18, "CANCEL");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.NON_FACULTY + "'", userType33.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CANCEL" + "'", str46, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 8.0d + "'", double58 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType62 + "' != '" + booking.UserType.FACULTY + "'", userType62.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.Subject subject50 = null;
        // The following exception was thrown during execution in test generation
        try {
            parkingSensor49.update(subject50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.equals(Object)\" because \"changedSubject\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.UserType userType16 = booking.UserType.FACULTY;
        bookingReceiver12.bookSpace("", "", 100, userType16);
        bookingReceiver12.cancelBooking("", "CANCEL");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        bookingReceiver24.cancelBooking("hi!", "hi!");
        booking.UserType userType28 = booking.UserType.STUDENT;
        double double29 = bookingReceiver24.getRate(userType28);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver24, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.UserType userType43 = booking.UserType.STUDENT;
        double double44 = bookingReceiver36.getRate(userType43);
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver24, "", "hi!", (int) '#', userType43);
        booking.BookCommand bookCommand46 = new booking.BookCommand(bookingReceiver12, "hi!", "EXTEND", 1, userType43);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 0, userType43);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.STUDENT + "'", userType28.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 5.0d + "'", double29 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.STUDENT + "'", userType43.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 5.0d + "'", double44 == 5.0d);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        parkingSensor5.update((booking.Subject) parkingSpot20);
        parkingSpot0.detach((booking.Observer) parkingSensor5);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.CommandInvoker commandInvoker1 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver2 = null;
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.UserType userType10 = booking.UserType.FACULTY;
        bookingReceiver6.bookSpace("", "", 100, userType10);
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver2, "hi!", "", 0, userType10);
        commandInvoker1.setCommand((booking.ICommand) bookCommand12);
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        java.lang.String str25 = bookingReceiver18.getAction();
        booking.UserType userType29 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver18, "hi!", "hi!", (int) (byte) 0, userType29);
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver14, "", "", (int) (byte) 100, userType29);
        booking.CancelCommand cancelCommand34 = new booking.CancelCommand(bookingReceiver14, "hi!", "hi!");
        commandInvoker1.setCommand((booking.ICommand) cancelCommand34);
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand34);
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.NON_FACULTY + "'", userType29.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        boolean boolean32 = parkingSpot19.isOccupied();
        parkingSpot19.occupySpot("EXTEND");
        parkingSpot19.freeSpot();
        parkingSensor17.update((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot41.freeSpot();
        parkingSpot41.freeSpot();
        booking.ParkingSensor parkingSensor47 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        java.lang.String str48 = parkingSpot41.getLicensePlate();
        boolean boolean49 = parkingSpot41.isOccupied();
        java.lang.String str50 = parkingSpot41.getLicensePlate();
        parkingSensor17.update((booking.Subject) parkingSpot41);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        double double72 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver76 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        java.lang.String str81 = bookingReceiver80.getAction();
        booking.UserType userType85 = null;
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver80, "hi!", "", 100, userType85);
        java.lang.String str87 = bookingReceiver80.getAction();
        booking.UserType userType91 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand92 = new booking.ExtendCommand(bookingReceiver80, "hi!", "hi!", (int) (byte) 0, userType91);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver76, "", "", (int) (byte) 100, userType91);
        double double94 = bookingReceiver0.getRate(userType91);
        java.lang.Class<?> wildcardClass95 = bookingReceiver0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-8.0d) + "'", double72 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + userType91 + "' != '" + booking.UserType.NON_FACULTY + "'", userType91.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        java.lang.String str14 = parkingSpot0.getLicensePlate();
        boolean boolean15 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        boolean boolean19 = parkingSpot0.isOccupied();
        java.lang.Class<?> wildcardClass20 = parkingSpot0.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        boolean boolean27 = parkingSpot19.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver23 = new booking.BookingReceiver();
        java.lang.String str24 = bookingReceiver23.getAction();
        booking.UserType userType28 = null;
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver23, "hi!", "", 100, userType28);
        java.lang.String str30 = bookingReceiver23.getAction();
        booking.UserType userType34 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand35 = new booking.ExtendCommand(bookingReceiver23, "hi!", "hi!", (int) (byte) 0, userType34);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver19, "", "", (int) (byte) 100, userType34);
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        booking.UserType userType50 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver40, "hi!", "hi!", 100, userType50);
        bookingReceiver19.bookSpace("hi!", "hi!", (int) (short) -1, userType50);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        java.lang.String str61 = bookingReceiver60.getAction();
        booking.UserType userType65 = null;
        booking.ExtendCommand extendCommand66 = new booking.ExtendCommand(bookingReceiver60, "hi!", "", 100, userType65);
        java.lang.String str67 = bookingReceiver60.getAction();
        booking.UserType userType71 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver60, "hi!", "hi!", (int) (byte) 0, userType71);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver56, "", "", (int) (byte) 100, userType71);
        booking.BookingReceiver bookingReceiver77 = new booking.BookingReceiver();
        java.lang.String str78 = bookingReceiver77.getAction();
        booking.UserType userType82 = null;
        booking.ExtendCommand extendCommand83 = new booking.ExtendCommand(bookingReceiver77, "hi!", "", 100, userType82);
        booking.UserType userType87 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver77, "hi!", "hi!", 100, userType87);
        bookingReceiver56.bookSpace("hi!", "hi!", (int) (short) -1, userType87);
        booking.BookCommand bookCommand90 = new booking.BookCommand(bookingReceiver19, "hi!", "", 0, userType87);
        commandInvoker0.setCommand((booking.ICommand) bookCommand90);
        booking.ICommand iCommand92 = null;
        commandInvoker0.setCommand(iCommand92);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.NON_FACULTY + "'", userType34.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType71 + "' != '" + booking.UserType.NON_FACULTY + "'", userType71.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        extendCommand14.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot3);
        parkingSpot0.detach((booking.Observer) parkingSensor17);
        booking.ParkingSensor parkingSensor19 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.freeSpot();
        boolean boolean22 = parkingSpot20.isOccupied();
        parkingSensor19.update((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSensor25.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        bookingSystem49.update((booking.Subject) parkingSpot50);
        parkingSpot42.detach((booking.Observer) bookingSystem49);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot55.detach((booking.Observer) bookingSystem62);
        parkingSpot42.detach((booking.Observer) bookingSystem62);
        parkingSpot42.occupySpot("CANCEL");
        parkingSensor41.update((booking.Subject) parkingSpot42);
        parkingSensor25.update((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSensor25.update((booking.Subject) parkingSpot73);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        parkingSpot75.occupySpot("hi!");
        booking.BookingSystem bookingSystem78 = new booking.BookingSystem((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        bookingSystem82.update((booking.Subject) parkingSpot83);
        parkingSpot75.detach((booking.Observer) bookingSystem82);
        parkingSpot73.detach((booking.Observer) bookingSystem82);
        parkingSensor19.update((booking.Subject) parkingSpot73);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        boolean boolean8 = parkingSpot4.isOccupied();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSensor parkingSensor10 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor12 = new booking.ParkingSensor((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSensor12.update((booking.Subject) parkingSpot13);
        booking.ParkingSensor parkingSensor27 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        parkingSpot13.occupySpot("CANCEL");
        parkingSpot13.freeSpot();
        parkingSensor10.update((booking.Subject) parkingSpot13);
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.freeSpot();
        boolean boolean52 = parkingSpot50.isOccupied();
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot66.detach((booking.Observer) bookingSystem73);
        parkingSpot53.detach((booking.Observer) bookingSystem73);
        booking.ParkingSpot parkingSpot80 = new booking.ParkingSpot();
        parkingSpot80.occupySpot("hi!");
        booking.BookingSystem bookingSystem83 = new booking.BookingSystem((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        parkingSpot88.occupySpot("hi!");
        bookingSystem87.update((booking.Subject) parkingSpot88);
        parkingSpot80.detach((booking.Observer) bookingSystem87);
        bookingSystem73.update((booking.Subject) parkingSpot80);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot80);
        booking.ParkingSpot parkingSpot95 = new booking.ParkingSpot();
        parkingSensor94.update((booking.Subject) parkingSpot95);
        parkingSpot50.detach((booking.Observer) parkingSensor94);
        parkingSpot2.attach((booking.Observer) parkingSensor94);
        boolean boolean99 = parkingSpot2.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        bookingSystem18.update((booking.Subject) parkingSpot19);
        boolean boolean23 = parkingSpot19.isOccupied();
        booking.ParkingSensor parkingSensor24 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot25.detach((booking.Observer) bookingSystem32);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        booking.BookingSystem bookingSystem45 = new booking.BookingSystem((booking.Subject) parkingSpot42);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        bookingSystem45.update((booking.Subject) parkingSpot46);
        parkingSpot38.detach((booking.Observer) bookingSystem45);
        parkingSpot25.detach((booking.Observer) bookingSystem45);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        bookingSystem45.update((booking.Subject) parkingSpot52);
        boolean boolean66 = parkingSpot52.isOccupied();
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot52);
        parkingSpot52.occupySpot("BOOK");
        parkingSensor24.update((booking.Subject) parkingSpot52);
        parkingSpot0.detach((booking.Observer) parkingSensor24);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        boolean boolean10 = parkingSpot4.isOccupied();
        parkingSpot4.occupySpot("BOOK");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 10, userType47);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) (byte) 1, userType84);
        bookingReceiver0.cancelBooking("", "BOOK");
        double double92 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.CancelCommand cancelCommand98 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        parkingSpot2.freeSpot();
        parkingSpot2.occupySpot("EXTEND");
        java.lang.Class<?> wildcardClass36 = parkingSpot2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        extendCommand17.doAction();
        extendCommand17.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        bookingSystem20.update((booking.Subject) parkingSpot68);
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor86 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        java.lang.String str88 = parkingSpot68.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        parkingSpot49.detach((booking.Observer) bookingSystem58);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot49);
        parkingSpot49.occupySpot("CANCEL");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType20);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "EXTEND");
        double double31 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.UserType userType4 = booking.UserType.FACULTY;
        bookingReceiver0.bookSpace("", "", 100, userType4);
        bookingReceiver0.cancelBooking("", "CANCEL");
        double double9 = bookingReceiver0.getDeposit();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        bookingReceiver18.cancelBooking("hi!", "hi!");
        double double22 = bookingReceiver18.getAmount();
        bookingReceiver18.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver18, "", "", (int) (short) 100, userType33);
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "hi!", (int) (byte) -1, userType33);
        extendCommand36.doAction();
        extendCommand36.doAction();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.FACULTY + "'", userType4.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 8.0d + "'", double9 == 8.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        boolean boolean53 = parkingSpot49.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        java.lang.String str9 = bookingReceiver2.getAction();
        booking.UserType userType13 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver2, "hi!", "hi!", (int) (byte) 0, userType13);
        extendCommand14.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand14);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.CommandInvoker commandInvoker31 = new booking.CommandInvoker();
        commandInvoker31.executeCommand();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        bookCommand44.doAction();
        bookCommand44.doAction();
        commandInvoker31.setCommand((booking.ICommand) bookCommand44);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        booking.UserType userType58 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand59 = new booking.BookCommand(bookingReceiver48, "hi!", "hi!", 100, userType58);
        booking.UserType userType63 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (short) 1, userType63);
        commandInvoker31.setCommand((booking.ICommand) extendCommand64);
        extendCommand64.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand64);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver69 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        java.lang.String str74 = bookingReceiver73.getAction();
        booking.UserType userType78 = null;
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver73, "hi!", "", 100, userType78);
        java.lang.String str80 = bookingReceiver73.getAction();
        booking.UserType userType84 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand85 = new booking.ExtendCommand(bookingReceiver73, "hi!", "hi!", (int) (byte) 0, userType84);
        booking.ExtendCommand extendCommand86 = new booking.ExtendCommand(bookingReceiver69, "", "", (int) (byte) 100, userType84);
        extendCommand86.doAction();
        extendCommand86.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand86);
        extendCommand86.doAction();
        extendCommand86.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.NON_FACULTY + "'", userType13.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType58 + "' != '" + booking.UserType.FACULTY + "'", userType58.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.NON_FACULTY + "'", userType84.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        booking.BookingSystem bookingSystem90 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot87.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem94 = new booking.BookingSystem((booking.Subject) parkingSpot87);
        parkingSensor82.update((booking.Subject) parkingSpot87);
        booking.ParkingSensor parkingSensor96 = new booking.ParkingSensor((booking.Subject) parkingSpot87);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        double double9 = bookingReceiver0.getAmount();
        double double10 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        bookingReceiver14.cancelBooking("hi!", "hi!");
        bookingReceiver14.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        booking.UserType userType25 = booking.UserType.FACULTY;
        bookingReceiver21.bookSpace("", "", 100, userType25);
        double double27 = bookingReceiver14.getRate(userType25);
        booking.UserType userType31 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver14, "BOOK", "", (int) '#', userType31);
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver40 = new booking.BookingReceiver();
        java.lang.String str41 = bookingReceiver40.getAction();
        booking.UserType userType45 = null;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver40, "hi!", "", 100, userType45);
        java.lang.String str47 = bookingReceiver40.getAction();
        booking.UserType userType51 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand52 = new booking.ExtendCommand(bookingReceiver40, "hi!", "hi!", (int) (byte) 0, userType51);
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver36, "", "", (int) (byte) 100, userType51);
        booking.BookCommand bookCommand54 = new booking.BookCommand(bookingReceiver14, "CANCEL", "EXTEND", (int) '#', userType51);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver14, "CANCEL", "CANCEL", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "EXTEND", "BOOK", (int) ' ', userType68);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 8.0d + "'", double27 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.VISITOR + "'", userType31.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.NON_FACULTY + "'", userType51.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.BookingSystem bookingSystem63 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor64 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.occupySpot("BOOK");
        java.lang.String str68 = parkingSpot0.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "BOOK" + "'", str68, "BOOK");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        cancelCommand17.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        bookingSystem61.update((booking.Subject) parkingSpot62);
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor69 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        bookingSystem67.update((booking.Subject) parkingSpot68);
        parkingSensor57.update((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor72 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor73 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        boolean boolean74 = parkingSpot68.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor9 = new booking.ParkingSensor((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot14);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        bookingSystem17.update((booking.Subject) parkingSpot18);
        parkingSpot10.detach((booking.Observer) bookingSystem17);
        parkingSensor9.update((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor25 = new booking.ParkingSensor((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSpot26.detach((booking.Observer) bookingSystem46);
        parkingSpot26.occupySpot("CANCEL");
        parkingSensor25.update((booking.Subject) parkingSpot26);
        parkingSensor9.update((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSensor9.update((booking.Subject) parkingSpot57);
        boolean boolean59 = parkingSpot57.isOccupied();
        boolean boolean60 = parkingSpot57.isOccupied();
        bookingSystem3.update((booking.Subject) parkingSpot57);
        parkingSpot57.occupySpot("CANCEL");
        parkingSpot57.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("EXTEND", "");
        java.lang.String str13 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CANCEL" + "'", str13, "CANCEL");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.CancelCommand cancelCommand14 = new booking.CancelCommand(bookingReceiver0, "", "BOOK");
        booking.CancelCommand cancelCommand17 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        double double18 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand21 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        java.lang.String str8 = bookingReceiver0.getAction();
        java.lang.String str9 = bookingReceiver0.getAction();
        java.lang.String str10 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CANCEL" + "'", str8, "CANCEL");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CANCEL" + "'", str10, "CANCEL");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand11 = new booking.CancelCommand(bookingReceiver0, "", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor41 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor43 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        bookingSystem48.update((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor56 = new booking.ParkingSensor((booking.Subject) parkingSpot55);
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot55.occupySpot("CANCEL");
        parkingSensor44.update((booking.Subject) parkingSpot55);
        java.lang.String str61 = parkingSpot55.getLicensePlate();
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        parkingSpot55.occupySpot("");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CANCEL" + "'", str61, "CANCEL");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.ICommand iCommand19 = null;
        commandInvoker0.setCommand(iCommand19);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        bookingReceiver20.cancelBooking("hi!", "hi!");
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver27 = new booking.BookingReceiver();
        booking.UserType userType31 = booking.UserType.FACULTY;
        bookingReceiver27.bookSpace("", "", 100, userType31);
        double double33 = bookingReceiver20.getRate(userType31);
        booking.UserType userType37 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver20, "BOOK", "", (int) '#', userType37);
        double double39 = bookingReceiver0.getRate(userType37);
        bookingReceiver0.cancelBooking("", "");
        java.lang.String str43 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand46 = new booking.CancelCommand(bookingReceiver0, "", "");
        cancelCommand46.doAction();
        cancelCommand46.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 8.0d + "'", double33 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.VISITOR + "'", userType37.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 15.0d + "'", double39 == 15.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CANCEL" + "'", str43, "CANCEL");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver34, "", "BOOK");
        java.lang.String str49 = bookingReceiver34.getAction();
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        booking.UserType userType54 = booking.UserType.STUDENT;
        double double55 = bookingReceiver50.getRate(userType54);
        booking.CancelCommand cancelCommand58 = new booking.CancelCommand(bookingReceiver50, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver62 = new booking.BookingReceiver();
        bookingReceiver62.cancelBooking("hi!", "hi!");
        bookingReceiver62.cancelBooking("", "");
        booking.UserType userType69 = booking.UserType.STUDENT;
        double double70 = bookingReceiver62.getRate(userType69);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver50, "", "hi!", (int) '#', userType69);
        double double72 = bookingReceiver34.getRate(userType69);
        bookingReceiver0.bookSpace("", "CANCEL", (int) (byte) 100, userType69);
        booking.CancelCommand cancelCommand76 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        cancelCommand76.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.STUDENT + "'", userType54.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.STUDENT + "'", userType69.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5.0d + "'", double70 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.freeSpot();
        java.lang.String str34 = parkingSpot15.getLicensePlate();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        java.lang.String str17 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        java.lang.String str25 = bookingReceiver18.getAction();
        booking.UserType userType29 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver18, "hi!", "hi!", (int) (byte) 0, userType29);
        booking.BookingReceiver bookingReceiver34 = new booking.BookingReceiver();
        java.lang.String str35 = bookingReceiver34.getAction();
        booking.UserType userType39 = null;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver34, "hi!", "", 100, userType39);
        booking.UserType userType44 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver34, "hi!", "hi!", 100, userType44);
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        booking.UserType userType53 = booking.UserType.FACULTY;
        bookingReceiver49.bookSpace("", "", 100, userType53);
        bookingReceiver34.extendBooking("", "", (int) 'a', userType53);
        bookingReceiver18.bookSpace("EXTEND", "hi!", (int) (byte) 1, userType53);
        double double57 = bookingReceiver0.getRate(userType53);
        java.lang.String str58 = bookingReceiver0.getAction();
        double double59 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CANCEL" + "'", str17, "CANCEL");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.NON_FACULTY + "'", userType29.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.FACULTY + "'", userType44.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.FACULTY + "'", userType53.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 8.0d + "'", double57 == 8.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CANCEL" + "'", str58, "CANCEL");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        boolean boolean51 = parkingSpot49.isOccupied();
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot56);
        booking.ParkingSpot parkingSpot60 = new booking.ParkingSpot();
        parkingSpot60.occupySpot("hi!");
        bookingSystem59.update((booking.Subject) parkingSpot60);
        parkingSpot52.detach((booking.Observer) bookingSystem59);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        booking.BookingSystem bookingSystem72 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        booking.ParkingSpot parkingSpot73 = new booking.ParkingSpot();
        parkingSpot73.occupySpot("hi!");
        bookingSystem72.update((booking.Subject) parkingSpot73);
        parkingSpot65.detach((booking.Observer) bookingSystem72);
        parkingSpot52.detach((booking.Observer) bookingSystem72);
        booking.ParkingSpot parkingSpot79 = new booking.ParkingSpot();
        parkingSpot79.occupySpot("hi!");
        booking.BookingSystem bookingSystem82 = new booking.BookingSystem((booking.Subject) parkingSpot79);
        booking.ParkingSpot parkingSpot83 = new booking.ParkingSpot();
        parkingSpot83.occupySpot("hi!");
        booking.BookingSystem bookingSystem86 = new booking.BookingSystem((booking.Subject) parkingSpot83);
        booking.ParkingSpot parkingSpot87 = new booking.ParkingSpot();
        parkingSpot87.occupySpot("hi!");
        bookingSystem86.update((booking.Subject) parkingSpot87);
        parkingSpot79.detach((booking.Observer) bookingSystem86);
        bookingSystem72.update((booking.Subject) parkingSpot79);
        booking.ParkingSensor parkingSensor93 = new booking.ParkingSensor((booking.Subject) parkingSpot79);
        parkingSpot49.detach((booking.Observer) parkingSensor93);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.BookingSystem bookingSystem96 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        booking.BookingSystem bookingSystem31 = new booking.BookingSystem((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.occupySpot("hi!");
        booking.BookingSystem bookingSystem35 = new booking.BookingSystem((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        bookingSystem35.update((booking.Subject) parkingSpot36);
        parkingSpot28.detach((booking.Observer) bookingSystem35);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSensor42.update((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor58 = new booking.ParkingSensor((booking.Subject) parkingSpot57);
        parkingSpot43.detach((booking.Observer) parkingSensor58);
        bookingSystem35.update((booking.Subject) parkingSpot43);
        parkingSpot43.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        bookingSystem66.update((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        booking.BookingSystem bookingSystem79 = new booking.BookingSystem((booking.Subject) parkingSpot76);
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot67.detach((booking.Observer) bookingSystem75);
        parkingSpot43.attach((booking.Observer) bookingSystem75);
        parkingSpot43.freeSpot();
        parkingSensor26.update((booking.Subject) parkingSpot43);
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot1 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor2 = new booking.ParkingSensor((booking.Subject) parkingSpot1);
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        parkingSpot3.occupySpot("hi!");
        booking.BookingSystem bookingSystem6 = new booking.BookingSystem((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot7 = new booking.ParkingSpot();
        parkingSpot7.occupySpot("hi!");
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot7);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        bookingSystem10.update((booking.Subject) parkingSpot11);
        parkingSpot3.detach((booking.Observer) bookingSystem10);
        parkingSensor2.update((booking.Subject) parkingSpot3);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor18 = new booking.ParkingSensor((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        bookingSystem26.update((booking.Subject) parkingSpot27);
        parkingSpot19.detach((booking.Observer) bookingSystem26);
        parkingSensor18.update((booking.Subject) parkingSpot19);
        parkingSpot3.detach((booking.Observer) parkingSensor18);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSensor35.update((booking.Subject) parkingSpot36);
        booking.ParkingSensor parkingSensor50 = new booking.ParkingSensor((booking.Subject) parkingSpot36);
        parkingSpot3.attach((booking.Observer) parkingSensor50);
        parkingSpot0.attach((booking.Observer) parkingSensor50);
        parkingSpot0.freeSpot();
        boolean boolean54 = parkingSpot0.isOccupied();
        parkingSpot0.occupySpot("EXTEND");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        double double76 = bookingReceiver0.getDeposit();
        double double77 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        bookingReceiver37.cancelBooking("hi!", "hi!");
        bookingReceiver37.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.UserType userType48 = booking.UserType.FACULTY;
        bookingReceiver44.bookSpace("", "", 100, userType48);
        double double50 = bookingReceiver37.getRate(userType48);
        booking.UserType userType54 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver37, "BOOK", "", (int) '#', userType54);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        java.lang.String str64 = bookingReceiver63.getAction();
        booking.UserType userType68 = null;
        booking.ExtendCommand extendCommand69 = new booking.ExtendCommand(bookingReceiver63, "hi!", "", 100, userType68);
        java.lang.String str70 = bookingReceiver63.getAction();
        booking.UserType userType74 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver63, "hi!", "hi!", (int) (byte) 0, userType74);
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver59, "", "", (int) (byte) 100, userType74);
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver37, "CANCEL", "EXTEND", (int) '#', userType74);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", 0, userType74);
        booking.CancelCommand cancelCommand81 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        cancelCommand81.doAction();
        cancelCommand81.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.FACULTY + "'", userType48.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.VISITOR + "'", userType54.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + userType74 + "' != '" + booking.UserType.NON_FACULTY + "'", userType74.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver8 = new booking.BookingReceiver();
        java.lang.String str9 = bookingReceiver8.getAction();
        booking.UserType userType13 = null;
        booking.ExtendCommand extendCommand14 = new booking.ExtendCommand(bookingReceiver8, "hi!", "", 100, userType13);
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver8, "", "", 0, userType37);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        double double54 = bookingReceiver8.getRate(userType52);
        double double55 = bookingReceiver0.getRate(userType52);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        bookingReceiver59.cancelBooking("hi!", "hi!");
        booking.UserType userType63 = booking.UserType.STUDENT;
        double double64 = bookingReceiver59.getRate(userType63);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 100, userType63);
        booking.CancelCommand cancelCommand68 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "hi!");
        java.lang.String str69 = bookingReceiver0.getAction();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.STUDENT + "'", userType63.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 5.0d + "'", double64 == 5.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "CANCEL" + "'", str69, "CANCEL");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSensor16.update((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor32 = new booking.ParkingSensor((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot46 = new booking.ParkingSpot();
        parkingSpot46.occupySpot("hi!");
        booking.BookingSystem bookingSystem49 = new booking.BookingSystem((booking.Subject) parkingSpot46);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        bookingSystem53.update((booking.Subject) parkingSpot54);
        parkingSpot46.detach((booking.Observer) bookingSystem53);
        parkingSpot33.detach((booking.Observer) bookingSystem53);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor32.update((booking.Subject) parkingSpot33);
        parkingSensor16.update((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSensor16.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot66.detach((booking.Observer) bookingSystem73);
        parkingSpot64.detach((booking.Observer) bookingSystem73);
        booking.ParkingSensor parkingSensor80 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        parkingSpot0.attach((booking.Observer) parkingSensor80);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        java.lang.String str26 = bookingReceiver0.getAction();
        double double27 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        bookingReceiver31.cancelBooking("hi!", "hi!");
        booking.UserType userType35 = booking.UserType.STUDENT;
        double double36 = bookingReceiver31.getRate(userType35);
        double double37 = bookingReceiver31.getAmount();
        bookingReceiver31.cancelBooking("", "BOOK");
        double double41 = bookingReceiver31.getDeposit();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        java.lang.String str52 = bookingReceiver45.getAction();
        double double53 = bookingReceiver45.getAmount();
        double double54 = bookingReceiver45.getDeposit();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.BookingReceiver bookingReceiver68 = new booking.BookingReceiver();
        java.lang.String str69 = bookingReceiver68.getAction();
        booking.UserType userType73 = null;
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver68, "hi!", "", 100, userType73);
        booking.UserType userType78 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand79 = new booking.BookCommand(bookingReceiver68, "hi!", "hi!", 100, userType78);
        booking.BookingReceiver bookingReceiver83 = new booking.BookingReceiver();
        booking.UserType userType87 = booking.UserType.FACULTY;
        bookingReceiver83.bookSpace("", "", 100, userType87);
        bookingReceiver68.extendBooking("", "", (int) 'a', userType87);
        bookingReceiver58.extendBooking("hi!", "", 0, userType87);
        bookingReceiver45.bookSpace("", "BOOK", (int) (short) -1, userType87);
        booking.BookCommand bookCommand92 = new booking.BookCommand(bookingReceiver31, "", "EXTEND", 10, userType87);
        bookingReceiver0.bookSpace("", "", (int) (short) 10, userType87);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType35 + "' != '" + booking.UserType.STUDENT + "'", userType35.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + userType78 + "' != '" + booking.UserType.FACULTY + "'", userType78.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType87 + "' != '" + booking.UserType.FACULTY + "'", userType87.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver18, "", "", 0, userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "hi!", "", 1, userType47);
        double double52 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand55 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        java.lang.String str56 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        cancelCommand28.doAction();
        cancelCommand28.doAction();
        cancelCommand28.doAction();
        cancelCommand28.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.freeSpot();
        parkingSpot2.occupySpot("hi!");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        boolean boolean14 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor15 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        boolean boolean16 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot33.occupySpot("hi!");
        bookingSystem32.update((booking.Subject) parkingSpot33);
        parkingSpot4.attach((booking.Observer) bookingSystem32);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        booking.BookingReceiver bookingReceiver0 = null;
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        double double12 = bookingReceiver4.getAmount();
        java.lang.String str13 = bookingReceiver4.getAction();
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver17, "", "", (int) (byte) 100, userType32);
        java.lang.String str35 = bookingReceiver17.getAction();
        double double36 = bookingReceiver17.getAmount();
        booking.BookingReceiver bookingReceiver40 = null;
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        java.lang.String str45 = bookingReceiver44.getAction();
        booking.UserType userType49 = null;
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver44, "hi!", "", 100, userType49);
        java.lang.String str51 = bookingReceiver44.getAction();
        bookingReceiver44.cancelBooking("BOOK", "CANCEL");
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        booking.BookingReceiver bookingReceiver70 = new booking.BookingReceiver();
        java.lang.String str71 = bookingReceiver70.getAction();
        booking.UserType userType75 = null;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver70, "hi!", "", 100, userType75);
        booking.UserType userType80 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand81 = new booking.BookCommand(bookingReceiver70, "hi!", "hi!", 100, userType80);
        booking.BookingReceiver bookingReceiver85 = new booking.BookingReceiver();
        booking.UserType userType89 = booking.UserType.FACULTY;
        bookingReceiver85.bookSpace("", "", 100, userType89);
        bookingReceiver70.extendBooking("", "", (int) 'a', userType89);
        double double92 = bookingReceiver58.getRate(userType89);
        booking.ExtendCommand extendCommand93 = new booking.ExtendCommand(bookingReceiver44, "BOOK", "", 100, userType89);
        booking.BookCommand bookCommand94 = new booking.BookCommand(bookingReceiver40, "", "EXTEND", 100, userType89);
        bookingReceiver17.extendBooking("BOOK", "", (int) (short) 1, userType89);
        booking.BookCommand bookCommand96 = new booking.BookCommand(bookingReceiver4, "BOOK", "hi!", (-1), userType89);
        booking.ExtendCommand extendCommand97 = new booking.ExtendCommand(bookingReceiver0, "", "CANCEL", (-1), userType89);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType80 + "' != '" + booking.UserType.FACULTY + "'", userType80.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType89 + "' != '" + booking.UserType.FACULTY + "'", userType89.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 8.0d + "'", double92 == 8.0d);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        extendCommand32.doAction();
        extendCommand32.doAction();
        extendCommand32.doAction();
        extendCommand32.doAction();
        extendCommand32.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getDeposit();
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CANCEL" + "'", str7, "CANCEL");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.String str17 = parkingSpot2.getLicensePlate();
        parkingSpot2.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        parkingSpot2.occupySpot("");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        booking.ParkingSensor parkingSensor57 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        bookingSystem62.update((booking.Subject) parkingSpot63);
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor70 = new booking.ParkingSensor((booking.Subject) parkingSpot69);
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot69);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        parkingSpot0.occupySpot("CANCEL");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.ParkingSpot parkingSpot67 = new booking.ParkingSpot();
        parkingSpot67.occupySpot("hi!");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot67);
        booking.ParkingSpot parkingSpot71 = new booking.ParkingSpot();
        parkingSpot71.occupySpot("hi!");
        bookingSystem70.update((booking.Subject) parkingSpot71);
        parkingSpot63.detach((booking.Observer) bookingSystem70);
        parkingSpot50.detach((booking.Observer) bookingSystem70);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        bookingSystem70.update((booking.Subject) parkingSpot77);
        booking.ParkingSensor parkingSensor91 = new booking.ParkingSensor((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot92 = new booking.ParkingSpot();
        parkingSensor91.update((booking.Subject) parkingSpot92);
        parkingSensor49.update((booking.Subject) parkingSpot92);
        parkingSpot92.freeSpot();
        boolean boolean96 = parkingSpot92.isOccupied();
        booking.ParkingSensor parkingSensor97 = new booking.ParkingSensor((booking.Subject) parkingSpot92);
        booking.BookingSystem bookingSystem98 = new booking.BookingSystem((booking.Subject) parkingSpot92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        parkingSpot15.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.ParkingSensor parkingSensor36 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand30 = new booking.CancelCommand(bookingReceiver0, "BOOK", "EXTEND");
        double double31 = bookingReceiver0.getDeposit();
        double double32 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand35 = new booking.CancelCommand(bookingReceiver0, "", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        java.lang.String str41 = parkingSpot27.getLicensePlate();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        boolean boolean43 = parkingSpot27.isOccupied();
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        bookingSystem47.update((booking.Subject) parkingSpot48);
        boolean boolean52 = parkingSpot48.isOccupied();
        parkingSpot48.freeSpot();
        booking.ParkingSensor parkingSensor54 = new booking.ParkingSensor((booking.Subject) parkingSpot48);
        parkingSpot27.detach((booking.Observer) parkingSensor54);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        double double79 = bookingReceiver0.getAmount();
        java.lang.String str80 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "EXTEND");
        double double84 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "CANCEL" + "'", str80, "CANCEL");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        bookingReceiver52.cancelBooking("hi!", "hi!");
        bookingReceiver52.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        double double65 = bookingReceiver52.getRate(userType63);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "", "BOOK", (int) ' ', userType63);
        double double67 = bookingReceiver0.getDeposit();
        java.lang.String str68 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 8.0d + "'", double65 == 8.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "EXTEND" + "'", str68, "EXTEND");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.CancelCommand cancelCommand24 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        java.lang.String str25 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver29, "", "", (int) (byte) 100, userType44);
        booking.BookCommand bookCommand47 = new booking.BookCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 0, userType44);
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        java.lang.String str62 = bookingReceiver55.getAction();
        booking.UserType userType66 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand67 = new booking.ExtendCommand(bookingReceiver55, "hi!", "hi!", (int) (byte) 0, userType66);
        booking.ExtendCommand extendCommand68 = new booking.ExtendCommand(bookingReceiver51, "", "", (int) (byte) 100, userType66);
        java.lang.String str69 = bookingReceiver51.getAction();
        double double70 = bookingReceiver51.getAmount();
        booking.BookingReceiver bookingReceiver74 = new booking.BookingReceiver();
        java.lang.String str75 = bookingReceiver74.getAction();
        booking.UserType userType79 = null;
        booking.ExtendCommand extendCommand80 = new booking.ExtendCommand(bookingReceiver74, "hi!", "", 100, userType79);
        booking.UserType userType84 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand85 = new booking.BookCommand(bookingReceiver74, "hi!", "hi!", 100, userType84);
        booking.BookingReceiver bookingReceiver89 = new booking.BookingReceiver();
        booking.UserType userType93 = booking.UserType.FACULTY;
        bookingReceiver89.bookSpace("", "", 100, userType93);
        bookingReceiver74.extendBooking("", "", (int) 'a', userType93);
        bookingReceiver51.bookSpace("hi!", "BOOK", (int) (short) 0, userType93);
        booking.BookCommand bookCommand97 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) (short) 10, userType93);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "EXTEND" + "'", str25, "EXTEND");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + userType66 + "' != '" + booking.UserType.NON_FACULTY + "'", userType66.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType93 + "' != '" + booking.UserType.FACULTY + "'", userType93.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker20 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver21, "", "", (int) (short) 1, userType36);
        commandInvoker20.setCommand((booking.ICommand) extendCommand37);
        extendCommand37.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand37);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        parkingSpot27.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        booking.BookingSystem bookingSystem47 = new booking.BookingSystem((booking.Subject) parkingSpot44);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        bookingSystem47.update((booking.Subject) parkingSpot48);
        parkingSpot48.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        boolean boolean58 = parkingSpot48.isOccupied();
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot59);
        booking.ParkingSpot parkingSpot63 = new booking.ParkingSpot();
        parkingSpot63.occupySpot("hi!");
        booking.BookingSystem bookingSystem66 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        bookingSystem62.update((booking.Subject) parkingSpot63);
        parkingSpot63.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem70 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot63);
        parkingSpot48.attach((booking.Observer) bookingSystem71);
        parkingSpot27.attach((booking.Observer) bookingSystem71);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        java.lang.String str27 = bookingReceiver0.getAction();
        double double28 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        double double34 = bookingReceiver32.getDeposit();
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        java.lang.String str60 = bookingReceiver59.getAction();
        booking.UserType userType64 = null;
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver59, "hi!", "", 100, userType64);
        booking.UserType userType69 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand70 = new booking.BookCommand(bookingReceiver59, "hi!", "hi!", 100, userType69);
        bookingReceiver38.bookSpace("hi!", "hi!", (int) (short) -1, userType69);
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver32, "EXTEND", "BOOK", (int) (byte) -1, userType69);
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "", 0, userType69);
        booking.UserType userType77 = booking.UserType.STUDENT;
        booking.BookCommand bookCommand78 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) '#', userType77);
        java.lang.String str79 = bookingReceiver0.getAction();
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getDeposit();
        booking.UserType userType85 = null;
        // The following exception was thrown during execution in test generation
        try {
            bookingReceiver0.bookSpace("hi!", "", 100, userType85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CANCEL" + "'", str27, "CANCEL");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.STUDENT + "'", userType77.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "CANCEL" + "'", str79, "CANCEL");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        bookingReceiver52.cancelBooking("hi!", "hi!");
        bookingReceiver52.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver59 = new booking.BookingReceiver();
        booking.UserType userType63 = booking.UserType.FACULTY;
        bookingReceiver59.bookSpace("", "", 100, userType63);
        double double65 = bookingReceiver52.getRate(userType63);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver0, "", "BOOK", (int) ' ', userType63);
        double double67 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver71 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver71, "", "", (int) (byte) 100, userType86);
        booking.ExtendCommand extendCommand89 = new booking.ExtendCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (byte) 10, userType86);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.FACULTY + "'", userType63.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 8.0d + "'", double65 == 8.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("CANCEL");
        boolean boolean3 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        boolean boolean4 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        boolean boolean6 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSensor14.update((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor30 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot15.detach((booking.Observer) parkingSensor30);
        bookingSystem7.update((booking.Subject) parkingSpot15);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot15);
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor36 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot37.detach((booking.Observer) bookingSystem44);
        parkingSensor36.update((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot66.detach((booking.Observer) bookingSystem73);
        parkingSpot53.detach((booking.Observer) bookingSystem73);
        parkingSpot53.occupySpot("CANCEL");
        parkingSensor52.update((booking.Subject) parkingSpot53);
        parkingSensor36.update((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSensor36.update((booking.Subject) parkingSpot84);
        bookingSystem34.update((booking.Subject) parkingSpot84);
        booking.ParkingSensor parkingSensor87 = new booking.ParkingSensor((booking.Subject) parkingSpot84);
        boolean boolean88 = parkingSpot84.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        java.lang.String str8 = bookingReceiver1.getAction();
        booking.UserType userType12 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand13 = new booking.ExtendCommand(bookingReceiver1, "hi!", "hi!", (int) (byte) 0, userType12);
        extendCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand13);
        booking.CommandInvoker commandInvoker16 = new booking.CommandInvoker();
        commandInvoker16.executeCommand();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        booking.UserType userType28 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand29 = new booking.BookCommand(bookingReceiver18, "hi!", "hi!", 100, userType28);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.UserType userType37 = booking.UserType.FACULTY;
        bookingReceiver33.bookSpace("", "", 100, userType37);
        bookingReceiver18.extendBooking("", "", (int) 'a', userType37);
        booking.UserType userType40 = booking.UserType.NON_FACULTY;
        double double41 = bookingReceiver18.getRate(userType40);
        bookingReceiver18.cancelBooking("BOOK", "hi!");
        java.lang.String str45 = bookingReceiver18.getAction();
        booking.CancelCommand cancelCommand48 = new booking.CancelCommand(bookingReceiver18, "BOOK", "EXTEND");
        commandInvoker16.setCommand((booking.ICommand) cancelCommand48);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        bookingReceiver50.cancelBooking("hi!", "hi!");
        double double54 = bookingReceiver50.getAmount();
        bookingReceiver50.cancelBooking("EXTEND", "hi!");
        java.lang.String str58 = bookingReceiver50.getAction();
        double double59 = bookingReceiver50.getAmount();
        double double60 = bookingReceiver50.getDeposit();
        booking.CancelCommand cancelCommand63 = new booking.CancelCommand(bookingReceiver50, "BOOK", "BOOK");
        commandInvoker16.setCommand((booking.ICommand) cancelCommand63);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand63);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.NON_FACULTY + "'", userType12.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + userType28 + "' != '" + booking.UserType.FACULTY + "'", userType28.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.FACULTY + "'", userType37.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.NON_FACULTY + "'", userType40.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "CANCEL" + "'", str45, "CANCEL");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CANCEL" + "'", str58, "CANCEL");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.BookingSystem bookingSystem10 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot11 = new booking.ParkingSpot();
        parkingSpot11.occupySpot("hi!");
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot11);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        bookingSystem14.update((booking.Subject) parkingSpot15);
        boolean boolean19 = parkingSpot15.isOccupied();
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.BookingSystem bookingSystem23 = new booking.BookingSystem((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot24 = new booking.ParkingSpot();
        parkingSpot24.occupySpot("hi!");
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot24);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        parkingSpot28.occupySpot("hi!");
        bookingSystem27.update((booking.Subject) parkingSpot28);
        parkingSpot20.detach((booking.Observer) bookingSystem27);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        parkingSpot20.detach((booking.Observer) bookingSystem40);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        bookingSystem54.update((booking.Subject) parkingSpot55);
        parkingSpot47.detach((booking.Observer) bookingSystem54);
        bookingSystem40.update((booking.Subject) parkingSpot47);
        booking.ParkingSensor parkingSensor61 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        booking.ParkingSensor parkingSensor62 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot47);
        parkingSpot15.attach((booking.Observer) parkingSensor63);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot69 = new booking.ParkingSpot();
        parkingSpot69.occupySpot("hi!");
        bookingSystem68.update((booking.Subject) parkingSpot69);
        parkingSpot69.freeSpot();
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        bookingSystem81.update((booking.Subject) parkingSpot82);
        parkingSpot74.detach((booking.Observer) bookingSystem81);
        parkingSpot69.detach((booking.Observer) bookingSystem81);
        parkingSpot69.occupySpot("CANCEL");
        parkingSensor63.update((booking.Subject) parkingSpot69);
        bookingSystem10.update((booking.Subject) parkingSpot69);
        java.lang.String str92 = parkingSpot69.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "CANCEL" + "'", str92, "CANCEL");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot10.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot10.attach((booking.Observer) bookingSystem24);
        parkingSpot10.freeSpot();
        java.lang.String str27 = parkingSpot10.getLicensePlate();
        parkingSpot10.freeSpot();
        parkingSpot10.occupySpot("EXTEND");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        bookingSystem44.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        java.lang.String str50 = parkingSpot45.getLicensePlate();
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor52 = new booking.ParkingSensor((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot57);
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        bookingSystem60.update((booking.Subject) parkingSpot61);
        parkingSpot53.detach((booking.Observer) bookingSystem60);
        parkingSensor52.update((booking.Subject) parkingSpot53);
        booking.ParkingSensor parkingSensor67 = new booking.ParkingSensor((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) parkingSensor67);
        parkingSpot45.freeSpot();
        parkingSpot45.occupySpot("CANCEL");
        parkingSpot45.freeSpot();
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        bookingSystem20.update((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        booking.BookingSystem bookingSystem76 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        parkingSpot45.freeSpot();
        boolean boolean78 = parkingSpot45.isOccupied();
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSpot29.detach((booking.Observer) parkingSensor44);
        parkingSpot0.detach((booking.Observer) parkingSensor44);
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        booking.ParkingSpot parkingSpot75 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot75);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSpot77.occupySpot("hi!");
        booking.BookingSystem bookingSystem80 = new booking.BookingSystem((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        bookingSystem84.update((booking.Subject) parkingSpot85);
        parkingSpot77.detach((booking.Observer) bookingSystem84);
        parkingSensor76.update((booking.Subject) parkingSpot77);
        booking.ParkingSpot parkingSpot91 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot91);
        parkingSpot77.detach((booking.Observer) parkingSensor92);
        bookingSystem69.update((booking.Subject) parkingSpot77);
        parkingSpot77.freeSpot();
        bookingSystem61.update((booking.Subject) parkingSpot77);
        java.lang.String str97 = parkingSpot77.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        bookingSystem38.update((booking.Subject) parkingSpot39);
        parkingSpot31.detach((booking.Observer) bookingSystem38);
        parkingSpot18.detach((booking.Observer) bookingSystem38);
        parkingSpot18.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSensor1.update((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSensor1.update((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        booking.BookingSystem bookingSystem54 = new booking.BookingSystem((booking.Subject) parkingSpot51);
        booking.ParkingSpot parkingSpot55 = new booking.ParkingSpot();
        parkingSpot55.occupySpot("hi!");
        booking.BookingSystem bookingSystem58 = new booking.BookingSystem((booking.Subject) parkingSpot55);
        booking.ParkingSpot parkingSpot59 = new booking.ParkingSpot();
        parkingSpot59.occupySpot("hi!");
        bookingSystem58.update((booking.Subject) parkingSpot59);
        parkingSpot51.detach((booking.Observer) bookingSystem58);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSpot51.detach((booking.Observer) bookingSystem71);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        parkingSpot78.occupySpot("hi!");
        booking.BookingSystem bookingSystem81 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        booking.ParkingSpot parkingSpot82 = new booking.ParkingSpot();
        parkingSpot82.occupySpot("hi!");
        booking.BookingSystem bookingSystem85 = new booking.BookingSystem((booking.Subject) parkingSpot82);
        booking.ParkingSpot parkingSpot86 = new booking.ParkingSpot();
        parkingSpot86.occupySpot("hi!");
        bookingSystem85.update((booking.Subject) parkingSpot86);
        parkingSpot78.detach((booking.Observer) bookingSystem85);
        bookingSystem71.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor92 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSensor1.update((booking.Subject) parkingSpot78);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        boolean boolean95 = parkingSpot78.isOccupied();
        parkingSpot78.freeSpot();
        booking.BookingSystem bookingSystem97 = new booking.BookingSystem((booking.Subject) parkingSpot78);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        bookingReceiver5.cancelBooking("hi!", "hi!");
        java.lang.String str9 = bookingReceiver5.getAction();
        booking.BookingReceiver bookingReceiver10 = null;
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.UserType userType18 = booking.UserType.FACULTY;
        bookingReceiver14.bookSpace("", "", 100, userType18);
        booking.BookCommand bookCommand20 = new booking.BookCommand(bookingReceiver10, "hi!", "", 0, userType18);
        double double21 = bookingReceiver5.getRate(userType18);
        booking.UserType userType25 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver5, "BOOK", "EXTEND", (int) (short) 10, userType25);
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver0, "CANCEL", "hi!", (int) ' ', userType25);
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        bookCommand27.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CANCEL" + "'", str9, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType18 + "' != '" + booking.UserType.FACULTY + "'", userType18.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 8.0d + "'", double21 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType25 + "' != '" + booking.UserType.FACULTY + "'", userType25.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand91 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand94 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "BOOK");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand51);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        bookingReceiver58.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand71 = new booking.CancelCommand(bookingReceiver58, "BOOK", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand71);
        booking.BookingReceiver bookingReceiver73 = new booking.BookingReceiver();
        booking.UserType userType77 = booking.UserType.FACULTY;
        bookingReceiver73.bookSpace("", "", 100, userType77);
        bookingReceiver73.cancelBooking("", "CANCEL");
        booking.CancelCommand cancelCommand84 = new booking.CancelCommand(bookingReceiver73, "CANCEL", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand84);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + userType77 + "' != '" + booking.UserType.FACULTY + "'", userType77.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.freeSpot();
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        bookingSystem28.update((booking.Subject) parkingSpot29);
        parkingSpot29.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        parkingSpot29.occupySpot("BOOK");
        booking.ParkingSensor parkingSensor39 = new booking.ParkingSensor((booking.Subject) parkingSpot29);
        parkingSpot19.detach((booking.Observer) parkingSensor39);
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("BOOK");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        bookingReceiver22.cancelBooking("hi!", "hi!");
        bookingReceiver22.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        booking.UserType userType33 = booking.UserType.FACULTY;
        bookingReceiver29.bookSpace("", "", 100, userType33);
        double double35 = bookingReceiver22.getRate(userType33);
        booking.UserType userType39 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver22, "BOOK", "", (int) '#', userType39);
        booking.BookingReceiver bookingReceiver44 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        java.lang.String str49 = bookingReceiver48.getAction();
        booking.UserType userType53 = null;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver48, "hi!", "", 100, userType53);
        java.lang.String str55 = bookingReceiver48.getAction();
        booking.UserType userType59 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver48, "hi!", "hi!", (int) (byte) 0, userType59);
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver44, "", "", (int) (byte) 100, userType59);
        booking.BookCommand bookCommand62 = new booking.BookCommand(bookingReceiver22, "CANCEL", "EXTEND", (int) '#', userType59);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        booking.ExtendCommand extendCommand78 = new booking.ExtendCommand(bookingReceiver22, "CANCEL", "CANCEL", (int) (short) -1, userType76);
        booking.ExtendCommand extendCommand79 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (short) -1, userType76);
        extendCommand79.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType33 + "' != '" + booking.UserType.FACULTY + "'", userType33.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 8.0d + "'", double35 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.VISITOR + "'", userType39.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType59 + "' != '" + booking.UserType.NON_FACULTY + "'", userType59.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.freeSpot();
        boolean boolean18 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        parkingSpot0.occupySpot("hi!");
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem17 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        java.lang.String str18 = parkingSpot0.getLicensePlate();
        parkingSpot0.freeSpot();
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType27);
        booking.CancelCommand cancelCommand32 = new booking.CancelCommand(bookingReceiver12, "hi!", "hi!");
        booking.UserType userType36 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand37 = new booking.BookCommand(bookingReceiver12, "", "CANCEL", (int) (byte) 1, userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver0, "EXTEND", "EXTEND", (int) (short) 1, userType36);
        double double39 = bookingReceiver0.getAmount();
        booking.UserType userType43 = booking.UserType.VISITOR;
        bookingReceiver0.bookSpace("hi!", "EXTEND", (int) (byte) -1, userType43);
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        double double48 = bookingReceiver0.getAmount();
        double double49 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.FACULTY + "'", userType36.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.VISITOR + "'", userType43.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 15.0d + "'", double49 == 15.0d);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        booking.CancelCommand cancelCommand21 = new booking.CancelCommand(bookingReceiver0, "hi!", "CANCEL");
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver26 = new booking.BookingReceiver();
        java.lang.String str27 = bookingReceiver26.getAction();
        booking.UserType userType31 = null;
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver26, "hi!", "", 100, userType31);
        java.lang.String str33 = bookingReceiver26.getAction();
        booking.UserType userType37 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver26, "hi!", "hi!", (int) (byte) 0, userType37);
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver22, "", "", (int) (byte) 100, userType37);
        java.lang.String str40 = bookingReceiver22.getAction();
        double double41 = bookingReceiver22.getAmount();
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        java.lang.String str46 = bookingReceiver45.getAction();
        booking.UserType userType50 = null;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver45, "hi!", "", 100, userType50);
        booking.UserType userType55 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand56 = new booking.BookCommand(bookingReceiver45, "hi!", "hi!", 100, userType55);
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        booking.UserType userType64 = booking.UserType.FACULTY;
        bookingReceiver60.bookSpace("", "", 100, userType64);
        bookingReceiver45.extendBooking("", "", (int) 'a', userType64);
        bookingReceiver22.bookSpace("hi!", "BOOK", (int) (short) 0, userType64);
        double double68 = bookingReceiver0.getRate(userType64);
        booking.BookingReceiver bookingReceiver72 = new booking.BookingReceiver();
        bookingReceiver72.cancelBooking("hi!", "hi!");
        java.lang.String str76 = bookingReceiver72.getAction();
        booking.BookingReceiver bookingReceiver77 = null;
        booking.BookingReceiver bookingReceiver81 = new booking.BookingReceiver();
        booking.UserType userType85 = booking.UserType.FACULTY;
        bookingReceiver81.bookSpace("", "", 100, userType85);
        booking.BookCommand bookCommand87 = new booking.BookCommand(bookingReceiver77, "hi!", "", 0, userType85);
        double double88 = bookingReceiver72.getRate(userType85);
        bookingReceiver0.bookSpace("CANCEL", "CANCEL", (int) 'a', userType85);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType37 + "' != '" + booking.UserType.NON_FACULTY + "'", userType37.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.FACULTY + "'", userType55.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 8.0d + "'", double68 == 8.0d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "CANCEL" + "'", str76, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType85 + "' != '" + booking.UserType.FACULTY + "'", userType85.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 8.0d + "'", double88 == 8.0d);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        booking.BookingReceiver bookingReceiver19 = new booking.BookingReceiver();
        java.lang.String str20 = bookingReceiver19.getAction();
        booking.UserType userType24 = null;
        booking.ExtendCommand extendCommand25 = new booking.ExtendCommand(bookingReceiver19, "hi!", "", 100, userType24);
        booking.UserType userType29 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand30 = new booking.BookCommand(bookingReceiver19, "hi!", "hi!", 100, userType29);
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        bookCommand30.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand30);
        booking.BookingReceiver bookingReceiver38 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver42 = new booking.BookingReceiver();
        java.lang.String str43 = bookingReceiver42.getAction();
        booking.UserType userType47 = null;
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver42, "hi!", "", 100, userType47);
        java.lang.String str49 = bookingReceiver42.getAction();
        booking.UserType userType53 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver42, "hi!", "hi!", (int) (byte) 0, userType53);
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver38, "", "", (int) (byte) 100, userType53);
        extendCommand55.doAction();
        commandInvoker0.setCommand((booking.ICommand) extendCommand55);
        extendCommand55.doAction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + userType53 + "' != '" + booking.UserType.NON_FACULTY + "'", userType53.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        bookCommand11.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = null;
        booking.BookingReceiver bookingReceiver5 = new booking.BookingReceiver();
        booking.UserType userType9 = booking.UserType.FACULTY;
        bookingReceiver5.bookSpace("", "", 100, userType9);
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver1, "hi!", "", 0, userType9);
        commandInvoker0.setCommand((booking.ICommand) bookCommand11);
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        java.lang.String str14 = bookingReceiver13.getAction();
        booking.UserType userType18 = null;
        booking.ExtendCommand extendCommand19 = new booking.ExtendCommand(bookingReceiver13, "hi!", "", 100, userType18);
        booking.UserType userType23 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand24 = new booking.BookCommand(bookingReceiver13, "hi!", "hi!", 100, userType23);
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        bookCommand24.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand24);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        java.lang.String str32 = bookingReceiver31.getAction();
        booking.UserType userType36 = null;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver31, "hi!", "", 100, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        booking.UserType userType51 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver41, "hi!", "hi!", 100, userType51);
        booking.BookingReceiver bookingReceiver56 = new booking.BookingReceiver();
        booking.UserType userType60 = booking.UserType.FACULTY;
        bookingReceiver56.bookSpace("", "", 100, userType60);
        bookingReceiver41.extendBooking("", "", (int) 'a', userType60);
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver31, "", "", 0, userType60);
        booking.BookingReceiver bookingReceiver64 = new booking.BookingReceiver();
        java.lang.String str65 = bookingReceiver64.getAction();
        booking.UserType userType69 = null;
        booking.ExtendCommand extendCommand70 = new booking.ExtendCommand(bookingReceiver64, "hi!", "", 100, userType69);
        java.lang.String str71 = bookingReceiver64.getAction();
        booking.UserType userType75 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand76 = new booking.ExtendCommand(bookingReceiver64, "hi!", "hi!", (int) (byte) 0, userType75);
        double double77 = bookingReceiver31.getRate(userType75);
        booking.UserType userType81 = null;
        booking.ExtendCommand extendCommand82 = new booking.ExtendCommand(bookingReceiver31, "BOOK", "CANCEL", (int) (short) 100, userType81);
        commandInvoker0.setCommand((booking.ICommand) extendCommand82);
        // The following exception was thrown during execution in test generation
        try {
            extendCommand82.doAction();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + userType9 + "' != '" + booking.UserType.FACULTY + "'", userType9.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + userType23 + "' != '" + booking.UserType.FACULTY + "'", userType23.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.NON_FACULTY + "'", userType75.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        parkingSpot0.occupySpot("EXTEND");
        parkingSpot0.occupySpot("BOOK");
        booking.ParkingSpot parkingSpot61 = new booking.ParkingSpot();
        parkingSpot61.occupySpot("hi!");
        booking.BookingSystem bookingSystem64 = new booking.BookingSystem((booking.Subject) parkingSpot61);
        booking.ParkingSpot parkingSpot65 = new booking.ParkingSpot();
        parkingSpot65.occupySpot("hi!");
        booking.BookingSystem bookingSystem68 = new booking.BookingSystem((booking.Subject) parkingSpot65);
        bookingSystem64.update((booking.Subject) parkingSpot65);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot70);
        booking.ParkingSpot parkingSpot74 = new booking.ParkingSpot();
        parkingSpot74.occupySpot("hi!");
        booking.BookingSystem bookingSystem77 = new booking.BookingSystem((booking.Subject) parkingSpot74);
        bookingSystem73.update((booking.Subject) parkingSpot74);
        parkingSpot65.detach((booking.Observer) bookingSystem73);
        parkingSpot0.attach((booking.Observer) bookingSystem73);
        booking.ParkingSpot parkingSpot81 = new booking.ParkingSpot();
        parkingSpot81.occupySpot("hi!");
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot81);
        booking.ParkingSpot parkingSpot85 = new booking.ParkingSpot();
        parkingSpot85.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot85);
        booking.ParkingSpot parkingSpot89 = new booking.ParkingSpot();
        parkingSpot89.occupySpot("hi!");
        bookingSystem88.update((booking.Subject) parkingSpot89);
        parkingSpot81.detach((booking.Observer) bookingSystem88);
        boolean boolean94 = parkingSpot81.isOccupied();
        parkingSpot81.occupySpot("EXTEND");
        parkingSpot81.freeSpot();
        bookingSystem73.update((booking.Subject) parkingSpot81);
        parkingSpot81.freeSpot();
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot8);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        bookingSystem11.update((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) bookingSystem11);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        parkingSpot25.occupySpot("hi!");
        bookingSystem24.update((booking.Subject) parkingSpot25);
        parkingSpot17.detach((booking.Observer) bookingSystem24);
        parkingSpot4.detach((booking.Observer) bookingSystem24);
        parkingSpot4.occupySpot("CANCEL");
        parkingSpot4.occupySpot("EXTEND");
        booking.ParkingSensor parkingSensor35 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        parkingSpot0.attach((booking.Observer) parkingSensor35);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.UserType userType15 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (short) 1, userType15);
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.CancelCommand cancelCommand22 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot21.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot21);
        java.lang.String str29 = parkingSpot21.getLicensePlate();
        parkingSpot21.freeSpot();
        parkingSpot21.freeSpot();
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        parkingSpot32.freeSpot();
        boolean boolean34 = parkingSpot32.isOccupied();
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        booking.ParkingSensor parkingSensor76 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot77 = new booking.ParkingSpot();
        parkingSensor76.update((booking.Subject) parkingSpot77);
        parkingSpot32.detach((booking.Observer) parkingSensor76);
        parkingSpot21.detach((booking.Observer) parkingSensor76);
        bookingSystem16.update((booking.Subject) parkingSpot21);
        java.lang.String str82 = parkingSpot21.getLicensePlate();
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        booking.ParkingSpot parkingSpot3 = new booking.ParkingSpot();
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot14 = new booking.ParkingSpot();
        parkingSpot14.occupySpot("hi!");
        bookingSystem13.update((booking.Subject) parkingSpot14);
        parkingSpot6.detach((booking.Observer) bookingSystem13);
        parkingSensor5.update((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor21 = new booking.ParkingSensor((booking.Subject) parkingSpot20);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        bookingSystem29.update((booking.Subject) parkingSpot30);
        parkingSpot22.detach((booking.Observer) bookingSystem29);
        parkingSensor21.update((booking.Subject) parkingSpot22);
        parkingSpot6.detach((booking.Observer) parkingSensor21);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor38 = new booking.ParkingSensor((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        bookingSystem46.update((booking.Subject) parkingSpot47);
        parkingSpot39.detach((booking.Observer) bookingSystem46);
        parkingSensor38.update((booking.Subject) parkingSpot39);
        booking.ParkingSensor parkingSensor53 = new booking.ParkingSensor((booking.Subject) parkingSpot39);
        parkingSpot6.attach((booking.Observer) parkingSensor53);
        parkingSpot3.attach((booking.Observer) parkingSensor53);
        parkingSpot0.attach((booking.Observer) parkingSensor53);
        boolean boolean57 = parkingSpot0.isOccupied();
        boolean boolean58 = parkingSpot0.isOccupied();
        booking.BookingSystem bookingSystem59 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSensor parkingSensor60 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        double double10 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        booking.UserType userType21 = booking.UserType.STUDENT;
        double double22 = bookingReceiver17.getRate(userType21);
        booking.CancelCommand cancelCommand25 = new booking.CancelCommand(bookingReceiver17, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver29 = new booking.BookingReceiver();
        bookingReceiver29.cancelBooking("hi!", "hi!");
        bookingReceiver29.cancelBooking("", "");
        booking.UserType userType36 = booking.UserType.STUDENT;
        double double37 = bookingReceiver29.getRate(userType36);
        booking.BookCommand bookCommand38 = new booking.BookCommand(bookingReceiver17, "", "hi!", (int) '#', userType36);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        bookingReceiver39.cancelBooking("hi!", "hi!");
        double double43 = bookingReceiver39.getAmount();
        bookingReceiver39.cancelBooking("EXTEND", "hi!");
        java.lang.String str47 = bookingReceiver39.getAction();
        booking.BookingReceiver bookingReceiver51 = new booking.BookingReceiver();
        bookingReceiver51.cancelBooking("hi!", "hi!");
        booking.UserType userType55 = booking.UserType.STUDENT;
        double double56 = bookingReceiver51.getRate(userType55);
        booking.CancelCommand cancelCommand59 = new booking.CancelCommand(bookingReceiver51, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver63 = new booking.BookingReceiver();
        bookingReceiver63.cancelBooking("hi!", "hi!");
        bookingReceiver63.cancelBooking("", "");
        booking.UserType userType70 = booking.UserType.STUDENT;
        double double71 = bookingReceiver63.getRate(userType70);
        booking.BookCommand bookCommand72 = new booking.BookCommand(bookingReceiver51, "", "hi!", (int) '#', userType70);
        bookingReceiver39.bookSpace("", "hi!", (int) 'a', userType70);
        double double74 = bookingReceiver17.getRate(userType70);
        booking.ExtendCommand extendCommand75 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", 100, userType70);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.STUDENT + "'", userType21.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.STUDENT + "'", userType36.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "CANCEL" + "'", str47, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.STUDENT + "'", userType55.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 5.0d + "'", double56 == 5.0d);
        org.junit.Assert.assertTrue("'" + userType70 + "' != '" + booking.UserType.STUDENT + "'", userType70.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5.0d + "'", double71 == 5.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5.0d + "'", double74 == 5.0d);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        boolean boolean13 = parkingSpot4.isOccupied();
        parkingSpot4.freeSpot();
        boolean boolean15 = parkingSpot4.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        double double2 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        java.lang.String str17 = bookingReceiver10.getAction();
        booking.UserType userType21 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver10, "hi!", "hi!", (int) (byte) 0, userType21);
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver6, "", "", (int) (byte) 100, userType21);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver6, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver30 = new booking.BookingReceiver();
        java.lang.String str31 = bookingReceiver30.getAction();
        booking.UserType userType35 = null;
        booking.ExtendCommand extendCommand36 = new booking.ExtendCommand(bookingReceiver30, "hi!", "", 100, userType35);
        booking.UserType userType40 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand41 = new booking.BookCommand(bookingReceiver30, "hi!", "hi!", 100, userType40);
        booking.UserType userType45 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand46 = new booking.ExtendCommand(bookingReceiver30, "", "", (int) (short) 1, userType45);
        bookingReceiver6.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType45);
        bookingReceiver0.extendBooking("CANCEL", "hi!", (-1), userType45);
        java.lang.String str49 = bookingReceiver0.getAction();
        double double50 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand53 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType21 + "' != '" + booking.UserType.NON_FACULTY + "'", userType21.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + userType40 + "' != '" + booking.UserType.FACULTY + "'", userType40.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType45 + "' != '" + booking.UserType.FACULTY + "'", userType45.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "EXTEND" + "'", str49, "EXTEND");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-8.0d) + "'", double50 == (-8.0d));
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        booking.UserType userType31 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand32 = new booking.BookCommand(bookingReceiver21, "hi!", "hi!", 100, userType31);
        bookingReceiver0.bookSpace("hi!", "hi!", (int) (short) -1, userType31);
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver37, "", "", (int) (byte) 100, userType52);
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        booking.UserType userType68 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand69 = new booking.BookCommand(bookingReceiver58, "hi!", "hi!", 100, userType68);
        bookingReceiver37.bookSpace("hi!", "hi!", (int) (short) -1, userType68);
        booking.BookCommand bookCommand71 = new booking.BookCommand(bookingReceiver0, "hi!", "", 0, userType68);
        booking.BookingReceiver bookingReceiver75 = new booking.BookingReceiver();
        java.lang.String str76 = bookingReceiver75.getAction();
        booking.UserType userType80 = null;
        booking.ExtendCommand extendCommand81 = new booking.ExtendCommand(bookingReceiver75, "hi!", "", 100, userType80);
        java.lang.String str82 = bookingReceiver75.getAction();
        booking.UserType userType86 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand87 = new booking.ExtendCommand(bookingReceiver75, "hi!", "hi!", (int) (byte) 0, userType86);
        booking.BookCommand bookCommand88 = new booking.BookCommand(bookingReceiver0, "", "", (int) (short) 1, userType86);
        booking.CancelCommand cancelCommand91 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "EXTEND");
        booking.CancelCommand cancelCommand94 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        cancelCommand94.doAction();
        cancelCommand94.doAction();
        cancelCommand94.doAction();
        cancelCommand94.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + userType31 + "' != '" + booking.UserType.FACULTY + "'", userType31.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType68 + "' != '" + booking.UserType.FACULTY + "'", userType68.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + userType86 + "' != '" + booking.UserType.NON_FACULTY + "'", userType86.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        double double4 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("EXTEND", "hi!");
        booking.BookingReceiver bookingReceiver11 = new booking.BookingReceiver();
        booking.UserType userType15 = booking.UserType.FACULTY;
        bookingReceiver11.bookSpace("", "", 100, userType15);
        booking.BookCommand bookCommand17 = new booking.BookCommand(bookingReceiver0, "EXTEND", "BOOK", (int) (short) 1, userType15);
        java.lang.String str18 = bookingReceiver0.getAction();
        double double19 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand22 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "hi!");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.FACULTY + "'", userType15.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CANCEL" + "'", str18, "CANCEL");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor14 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem24 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot25 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot25);
        bookingSystem24.update((booking.Subject) parkingSpot25);
        booking.ParkingSpot parkingSpot28 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot28);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        bookingSystem37.update((booking.Subject) parkingSpot38);
        parkingSpot30.detach((booking.Observer) bookingSystem37);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        booking.BookingSystem bookingSystem46 = new booking.BookingSystem((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot47 = new booking.ParkingSpot();
        parkingSpot47.occupySpot("hi!");
        booking.BookingSystem bookingSystem50 = new booking.BookingSystem((booking.Subject) parkingSpot47);
        booking.ParkingSpot parkingSpot51 = new booking.ParkingSpot();
        parkingSpot51.occupySpot("hi!");
        bookingSystem50.update((booking.Subject) parkingSpot51);
        parkingSpot43.detach((booking.Observer) bookingSystem50);
        parkingSpot30.detach((booking.Observer) bookingSystem50);
        parkingSpot30.occupySpot("CANCEL");
        parkingSensor29.update((booking.Subject) parkingSpot30);
        bookingSystem24.update((booking.Subject) parkingSpot30);
        parkingSensor14.update((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot66.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem73 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.BookingSystem bookingSystem74 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        parkingSensor14.update((booking.Subject) parkingSpot66);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        java.lang.String str33 = bookingReceiver0.getAction();
        double double34 = bookingReceiver0.getAmount();
        double double35 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("BOOK", "");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        parkingSpot0.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot31);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        bookingSystem34.update((booking.Subject) parkingSpot35);
        parkingSpot27.detach((booking.Observer) bookingSystem34);
        bookingSystem20.update((booking.Subject) parkingSpot27);
        boolean boolean41 = parkingSpot27.isOccupied();
        booking.ParkingSensor parkingSensor42 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSpot45.detach((booking.Observer) bookingSystem65);
        parkingSpot45.occupySpot("CANCEL");
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSensor42.update((booking.Subject) parkingSpot45);
        boolean boolean76 = parkingSpot45.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        java.lang.String str44 = bookingReceiver37.getAction();
        booking.UserType userType48 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand49 = new booking.ExtendCommand(bookingReceiver37, "hi!", "hi!", (int) (byte) 0, userType48);
        booking.ExtendCommand extendCommand50 = new booking.ExtendCommand(bookingReceiver33, "", "", (int) (byte) 100, userType48);
        booking.CancelCommand cancelCommand53 = new booking.CancelCommand(bookingReceiver33, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver57 = new booking.BookingReceiver();
        java.lang.String str58 = bookingReceiver57.getAction();
        booking.UserType userType62 = null;
        booking.ExtendCommand extendCommand63 = new booking.ExtendCommand(bookingReceiver57, "hi!", "", 100, userType62);
        booking.UserType userType67 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver57, "hi!", "hi!", 100, userType67);
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand73 = new booking.ExtendCommand(bookingReceiver57, "", "", (int) (short) 1, userType72);
        bookingReceiver33.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType72);
        bookingReceiver0.bookSpace("BOOK", "hi!", (int) (short) 0, userType72);
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "BOOK", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + userType48 + "' != '" + booking.UserType.NON_FACULTY + "'", userType48.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + userType67 + "' != '" + booking.UserType.FACULTY + "'", userType67.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        double double29 = bookingReceiver0.getAmount();
        double double30 = bookingReceiver0.getDeposit();
        double double31 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot17 = new booking.ParkingSpot();
        parkingSpot17.occupySpot("hi!");
        booking.BookingSystem bookingSystem20 = new booking.BookingSystem((booking.Subject) parkingSpot17);
        booking.ParkingSpot parkingSpot21 = new booking.ParkingSpot();
        parkingSpot21.occupySpot("hi!");
        bookingSystem20.update((booking.Subject) parkingSpot21);
        parkingSpot13.detach((booking.Observer) bookingSystem20);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        booking.BookingSystem bookingSystem29 = new booking.BookingSystem((booking.Subject) parkingSpot26);
        booking.ParkingSpot parkingSpot30 = new booking.ParkingSpot();
        parkingSpot30.occupySpot("hi!");
        booking.BookingSystem bookingSystem33 = new booking.BookingSystem((booking.Subject) parkingSpot30);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        bookingSystem33.update((booking.Subject) parkingSpot34);
        parkingSpot26.detach((booking.Observer) bookingSystem33);
        parkingSpot13.detach((booking.Observer) bookingSystem33);
        bookingSystem7.update((booking.Subject) parkingSpot13);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        booking.BookingSystem bookingSystem44 = new booking.BookingSystem((booking.Subject) parkingSpot41);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        bookingSystem48.update((booking.Subject) parkingSpot49);
        parkingSpot41.detach((booking.Observer) bookingSystem48);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        bookingSystem61.update((booking.Subject) parkingSpot62);
        parkingSpot54.detach((booking.Observer) bookingSystem61);
        parkingSpot41.detach((booking.Observer) bookingSystem61);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        booking.BookingSystem bookingSystem75 = new booking.BookingSystem((booking.Subject) parkingSpot72);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSpot76.occupySpot("hi!");
        bookingSystem75.update((booking.Subject) parkingSpot76);
        parkingSpot68.detach((booking.Observer) bookingSystem75);
        bookingSystem61.update((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor82 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot68);
        booking.BookingSystem bookingSystem84 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        parkingSpot13.detach((booking.Observer) bookingSystem84);
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem88 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        parkingSpot13.occupySpot("BOOK");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        bookingSystem22.update((booking.Subject) parkingSpot23);
        parkingSpot15.detach((booking.Observer) bookingSystem22);
        parkingSpot2.detach((booking.Observer) bookingSystem22);
        parkingSpot2.occupySpot("CANCEL");
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        parkingSpot2.detach((booking.Observer) parkingSensor33);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        booking.ParkingSpot parkingSpot57 = new booking.ParkingSpot();
        parkingSpot57.occupySpot("hi!");
        bookingSystem56.update((booking.Subject) parkingSpot57);
        parkingSpot49.detach((booking.Observer) bookingSystem56);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor63 = new booking.ParkingSensor((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot64 = new booking.ParkingSpot();
        parkingSpot64.occupySpot("hi!");
        booking.BookingSystem bookingSystem67 = new booking.BookingSystem((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot68 = new booking.ParkingSpot();
        parkingSpot68.occupySpot("hi!");
        booking.BookingSystem bookingSystem71 = new booking.BookingSystem((booking.Subject) parkingSpot68);
        booking.ParkingSpot parkingSpot72 = new booking.ParkingSpot();
        parkingSpot72.occupySpot("hi!");
        bookingSystem71.update((booking.Subject) parkingSpot72);
        parkingSpot64.detach((booking.Observer) bookingSystem71);
        parkingSensor63.update((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot78 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot78);
        parkingSpot64.detach((booking.Observer) parkingSensor79);
        bookingSystem56.update((booking.Subject) parkingSpot64);
        parkingSensor33.update((booking.Subject) parkingSpot64);
        booking.ParkingSensor parkingSensor83 = new booking.ParkingSensor((booking.Subject) parkingSpot64);
        booking.ParkingSpot parkingSpot84 = new booking.ParkingSpot();
        parkingSpot84.occupySpot("hi!");
        booking.BookingSystem bookingSystem87 = new booking.BookingSystem((booking.Subject) parkingSpot84);
        booking.ParkingSpot parkingSpot88 = new booking.ParkingSpot();
        parkingSpot88.occupySpot("hi!");
        booking.BookingSystem bookingSystem91 = new booking.BookingSystem((booking.Subject) parkingSpot88);
        bookingSystem87.update((booking.Subject) parkingSpot88);
        booking.BookingSystem bookingSystem93 = new booking.BookingSystem((booking.Subject) parkingSpot88);
        booking.ParkingSensor parkingSensor94 = new booking.ParkingSensor((booking.Subject) parkingSpot88);
        booking.BookingSystem bookingSystem95 = new booking.BookingSystem((booking.Subject) parkingSpot88);
        parkingSensor83.update((booking.Subject) parkingSpot88);
        booking.ParkingSensor parkingSensor97 = new booking.ParkingSensor((booking.Subject) parkingSpot88);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver7 = new booking.BookingReceiver();
        booking.UserType userType11 = booking.UserType.FACULTY;
        bookingReceiver7.bookSpace("", "", 100, userType11);
        double double13 = bookingReceiver0.getRate(userType11);
        booking.CancelCommand cancelCommand16 = new booking.CancelCommand(bookingReceiver0, "hi!", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 8.0d + "'", double13 == 8.0d);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        java.lang.String str14 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand51);
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver25, "CANCEL", "CANCEL", (int) (short) 1, userType52);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType52);
        double double56 = bookingReceiver0.getDeposit();
        java.lang.String str57 = bookingReceiver0.getAction();
        double double58 = bookingReceiver0.getAmount();
        double double59 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand62 = new booking.CancelCommand(bookingReceiver0, "", "CANCEL");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "BOOK" + "'", str57, "BOOK");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1000.0d + "'", double58 == 1000.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1000.0d + "'", double59 == 1000.0d);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        java.lang.String str18 = bookingReceiver17.getAction();
        booking.UserType userType22 = null;
        booking.ExtendCommand extendCommand23 = new booking.ExtendCommand(bookingReceiver17, "hi!", "", 100, userType22);
        booking.UserType userType27 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand28 = new booking.BookCommand(bookingReceiver17, "hi!", "hi!", 100, userType27);
        bookCommand28.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand28);
        booking.BookingReceiver bookingReceiver31 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver35 = new booking.BookingReceiver();
        java.lang.String str36 = bookingReceiver35.getAction();
        booking.UserType userType40 = null;
        booking.ExtendCommand extendCommand41 = new booking.ExtendCommand(bookingReceiver35, "hi!", "", 100, userType40);
        java.lang.String str42 = bookingReceiver35.getAction();
        booking.UserType userType46 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver35, "hi!", "hi!", (int) (byte) 0, userType46);
        booking.ExtendCommand extendCommand48 = new booking.ExtendCommand(bookingReceiver31, "", "", (int) (byte) 100, userType46);
        booking.CancelCommand cancelCommand51 = new booking.CancelCommand(bookingReceiver31, "hi!", "hi!");
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        cancelCommand51.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand51);
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver58 = new booking.BookingReceiver();
        java.lang.String str59 = bookingReceiver58.getAction();
        booking.UserType userType63 = null;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver58, "hi!", "", 100, userType63);
        java.lang.String str65 = bookingReceiver58.getAction();
        bookingReceiver58.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand71 = new booking.CancelCommand(bookingReceiver58, "BOOK", "");
        commandInvoker0.setCommand((booking.ICommand) cancelCommand71);
        cancelCommand71.doAction();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.FACULTY + "'", userType27.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + userType46 + "' != '" + booking.UserType.NON_FACULTY + "'", userType46.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        double double81 = bookingReceiver0.getAmount();
        java.lang.String str82 = bookingReceiver0.getAction();
        double double83 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-8.0d) + "'", double81 == (-8.0d));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "BOOK" + "'", str82, "BOOK");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 8.0d + "'", double83 == 8.0d);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot8 = new booking.ParkingSpot();
        parkingSpot8.occupySpot("hi!");
        bookingSystem7.update((booking.Subject) parkingSpot8);
        parkingSpot0.detach((booking.Observer) bookingSystem7);
        boolean boolean13 = parkingSpot0.isOccupied();
        booking.BookingSystem bookingSystem14 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot0.attach((booking.Observer) bookingSystem30);
        boolean boolean32 = parkingSpot0.isOccupied();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot53.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot53.freeSpot();
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem48.update((booking.Subject) parkingSpot53);
        parkingSpot23.attach((booking.Observer) bookingSystem48);
        booking.ParkingSensor parkingSensor65 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("", "BOOK");
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        cancelCommand13.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("BOOK", "");
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        booking.UserType userType26 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand27 = new booking.BookCommand(bookingReceiver16, "hi!", "hi!", 100, userType26);
        booking.BookingReceiver bookingReceiver28 = new booking.BookingReceiver();
        java.lang.String str29 = bookingReceiver28.getAction();
        booking.UserType userType33 = null;
        booking.ExtendCommand extendCommand34 = new booking.ExtendCommand(bookingReceiver28, "hi!", "", 100, userType33);
        booking.UserType userType38 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand39 = new booking.BookCommand(bookingReceiver28, "hi!", "hi!", 100, userType38);
        booking.BookingReceiver bookingReceiver43 = new booking.BookingReceiver();
        booking.UserType userType47 = booking.UserType.FACULTY;
        bookingReceiver43.bookSpace("", "", 100, userType47);
        bookingReceiver28.extendBooking("", "", (int) 'a', userType47);
        double double50 = bookingReceiver16.getRate(userType47);
        booking.BookCommand bookCommand51 = new booking.BookCommand(bookingReceiver0, "BOOK", "BOOK", (int) (byte) 10, userType47);
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "", (int) (byte) 1, userType84);
        extendCommand88.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + userType26 + "' != '" + booking.UserType.FACULTY + "'", userType26.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + userType38 + "' != '" + booking.UserType.FACULTY + "'", userType38.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 8.0d + "'", double50 == 8.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        double double6 = bookingReceiver0.getAmount();
        bookingReceiver0.cancelBooking("", "BOOK");
        bookingReceiver0.cancelBooking("hi!", "EXTEND");
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        bookingReceiver0.cancelBooking("CANCEL", "BOOK");
        double double19 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        java.lang.String str21 = bookingReceiver20.getAction();
        booking.UserType userType25 = null;
        booking.ExtendCommand extendCommand26 = new booking.ExtendCommand(bookingReceiver20, "hi!", "", 100, userType25);
        double double27 = bookingReceiver20.getDeposit();
        java.lang.String str28 = bookingReceiver20.getAction();
        double double29 = bookingReceiver20.getDeposit();
        bookingReceiver20.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver36 = new booking.BookingReceiver();
        bookingReceiver36.cancelBooking("hi!", "hi!");
        bookingReceiver36.cancelBooking("", "");
        booking.UserType userType43 = booking.UserType.STUDENT;
        double double44 = bookingReceiver36.getRate(userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        java.lang.String str53 = bookingReceiver52.getAction();
        booking.UserType userType57 = null;
        booking.ExtendCommand extendCommand58 = new booking.ExtendCommand(bookingReceiver52, "hi!", "", 100, userType57);
        java.lang.String str59 = bookingReceiver52.getAction();
        booking.UserType userType63 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand64 = new booking.ExtendCommand(bookingReceiver52, "hi!", "hi!", (int) (byte) 0, userType63);
        booking.ExtendCommand extendCommand65 = new booking.ExtendCommand(bookingReceiver48, "", "", (int) (byte) 100, userType63);
        booking.CancelCommand cancelCommand68 = new booking.CancelCommand(bookingReceiver48, "hi!", "hi!");
        booking.UserType userType72 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand73 = new booking.BookCommand(bookingReceiver48, "", "CANCEL", (int) (byte) 1, userType72);
        booking.BookCommand bookCommand74 = new booking.BookCommand(bookingReceiver36, "EXTEND", "EXTEND", (int) (short) 1, userType72);
        double double75 = bookingReceiver36.getAmount();
        booking.UserType userType79 = booking.UserType.VISITOR;
        bookingReceiver36.bookSpace("hi!", "EXTEND", (int) (byte) -1, userType79);
        bookingReceiver20.extendBooking("CANCEL", "", (int) '4', userType79);
        double double82 = bookingReceiver0.getRate(userType79);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.STUDENT + "'", userType43.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 5.0d + "'", double44 == 5.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + userType63 + "' != '" + booking.UserType.NON_FACULTY + "'", userType63.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.FACULTY + "'", userType72.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType79 + "' != '" + booking.UserType.VISITOR + "'", userType79.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 15.0d + "'", double82 == 15.0d);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        bookingReceiver0.cancelBooking("", "");
        booking.UserType userType7 = booking.UserType.STUDENT;
        double double8 = bookingReceiver0.getRate(userType7);
        double double9 = bookingReceiver0.getDeposit();
        booking.BookingReceiver bookingReceiver13 = new booking.BookingReceiver();
        bookingReceiver13.cancelBooking("hi!", "hi!");
        bookingReceiver13.cancelBooking("", "");
        booking.BookingReceiver bookingReceiver20 = new booking.BookingReceiver();
        booking.UserType userType24 = booking.UserType.FACULTY;
        bookingReceiver20.bookSpace("", "", 100, userType24);
        double double26 = bookingReceiver13.getRate(userType24);
        booking.UserType userType30 = booking.UserType.VISITOR;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver13, "BOOK", "", (int) '#', userType30);
        booking.BookingReceiver bookingReceiver35 = null;
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        bookingReceiver39.cancelBooking("hi!", "hi!");
        booking.UserType userType43 = booking.UserType.STUDENT;
        double double44 = bookingReceiver39.getRate(userType43);
        booking.BookCommand bookCommand45 = new booking.BookCommand(bookingReceiver35, "BOOK", "hi!", 0, userType43);
        bookingReceiver13.extendBooking("", "", 1, userType43);
        bookingReceiver0.bookSpace("", "EXTEND", 0, userType43);
        org.junit.Assert.assertTrue("'" + userType7 + "' != '" + booking.UserType.STUDENT + "'", userType7.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 8.0d + "'", double26 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType30 + "' != '" + booking.UserType.VISITOR + "'", userType30.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.STUDENT + "'", userType43.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 5.0d + "'", double44 == 5.0d);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.UserType userType39 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand40 = new booking.ExtendCommand(bookingReceiver24, "", "", (int) (short) 1, userType39);
        bookingReceiver0.bookSpace("CANCEL", "EXTEND", (int) (byte) 10, userType39);
        booking.BookingReceiver bookingReceiver45 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver49 = new booking.BookingReceiver();
        java.lang.String str50 = bookingReceiver49.getAction();
        booking.UserType userType54 = null;
        booking.ExtendCommand extendCommand55 = new booking.ExtendCommand(bookingReceiver49, "hi!", "", 100, userType54);
        java.lang.String str56 = bookingReceiver49.getAction();
        booking.UserType userType60 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver49, "hi!", "hi!", (int) (byte) 0, userType60);
        booking.ExtendCommand extendCommand62 = new booking.ExtendCommand(bookingReceiver45, "", "", (int) (byte) 100, userType60);
        booking.BookingReceiver bookingReceiver66 = new booking.BookingReceiver();
        java.lang.String str67 = bookingReceiver66.getAction();
        booking.UserType userType71 = null;
        booking.ExtendCommand extendCommand72 = new booking.ExtendCommand(bookingReceiver66, "hi!", "", 100, userType71);
        booking.UserType userType76 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand77 = new booking.BookCommand(bookingReceiver66, "hi!", "hi!", 100, userType76);
        bookingReceiver45.bookSpace("hi!", "hi!", (int) (short) -1, userType76);
        bookingReceiver0.bookSpace("EXTEND", "hi!", (int) (byte) -1, userType76);
        double double80 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("CANCEL", "CANCEL");
        double double84 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("CANCEL", "");
        booking.CancelCommand cancelCommand90 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "");
        cancelCommand90.doAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType39 + "' != '" + booking.UserType.FACULTY + "'", userType39.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.NON_FACULTY + "'", userType60.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + userType76 + "' != '" + booking.UserType.FACULTY + "'", userType76.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 8.0d + "'", double80 == 8.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 8.0d + "'", double84 == 8.0d);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSensor parkingSensor16 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        java.lang.String str17 = parkingSpot2.getLicensePlate();
        parkingSpot2.occupySpot("CANCEL");
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        parkingSpot27.occupySpot("hi!");
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot31 = new booking.ParkingSpot();
        parkingSpot31.occupySpot("hi!");
        bookingSystem30.update((booking.Subject) parkingSpot31);
        parkingSpot23.detach((booking.Observer) bookingSystem30);
        booking.ParkingSpot parkingSpot36 = new booking.ParkingSpot();
        parkingSpot36.occupySpot("hi!");
        booking.BookingSystem bookingSystem39 = new booking.BookingSystem((booking.Subject) parkingSpot36);
        booking.ParkingSpot parkingSpot40 = new booking.ParkingSpot();
        parkingSpot40.occupySpot("hi!");
        booking.BookingSystem bookingSystem43 = new booking.BookingSystem((booking.Subject) parkingSpot40);
        booking.ParkingSpot parkingSpot44 = new booking.ParkingSpot();
        parkingSpot44.occupySpot("hi!");
        bookingSystem43.update((booking.Subject) parkingSpot44);
        parkingSpot36.detach((booking.Observer) bookingSystem43);
        parkingSpot23.detach((booking.Observer) bookingSystem43);
        booking.ParkingSpot parkingSpot50 = new booking.ParkingSpot();
        parkingSpot50.occupySpot("hi!");
        booking.BookingSystem bookingSystem53 = new booking.BookingSystem((booking.Subject) parkingSpot50);
        booking.ParkingSpot parkingSpot54 = new booking.ParkingSpot();
        parkingSpot54.occupySpot("hi!");
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot54);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        bookingSystem57.update((booking.Subject) parkingSpot58);
        parkingSpot50.detach((booking.Observer) bookingSystem57);
        bookingSystem43.update((booking.Subject) parkingSpot50);
        parkingSpot20.attach((booking.Observer) bookingSystem43);
        parkingSpot2.detach((booking.Observer) bookingSystem43);
        boolean boolean66 = parkingSpot2.isOccupied();
        boolean boolean67 = parkingSpot2.isOccupied();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        booking.ParkingSpot parkingSpot9 = new booking.ParkingSpot();
        parkingSpot9.occupySpot("hi!");
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot9);
        booking.ParkingSpot parkingSpot13 = new booking.ParkingSpot();
        parkingSpot13.occupySpot("hi!");
        booking.BookingSystem bookingSystem16 = new booking.BookingSystem((booking.Subject) parkingSpot13);
        bookingSystem12.update((booking.Subject) parkingSpot13);
        parkingSpot4.detach((booking.Observer) bookingSystem12);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot23 = new booking.ParkingSpot();
        parkingSpot23.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem22.update((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem28 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot23);
        booking.BookingSystem bookingSystem30 = new booking.BookingSystem((booking.Subject) parkingSpot23);
        bookingSystem12.update((booking.Subject) parkingSpot23);
        booking.ParkingSpot parkingSpot32 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot32);
        booking.ParkingSpot parkingSpot34 = new booking.ParkingSpot();
        parkingSpot34.occupySpot("hi!");
        booking.BookingSystem bookingSystem37 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot38 = new booking.ParkingSpot();
        parkingSpot38.occupySpot("hi!");
        booking.BookingSystem bookingSystem41 = new booking.BookingSystem((booking.Subject) parkingSpot38);
        booking.ParkingSpot parkingSpot42 = new booking.ParkingSpot();
        parkingSpot42.occupySpot("hi!");
        bookingSystem41.update((booking.Subject) parkingSpot42);
        parkingSpot34.detach((booking.Observer) bookingSystem41);
        parkingSensor33.update((booking.Subject) parkingSpot34);
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot34);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot53.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem60 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        parkingSpot53.freeSpot();
        booking.BookingSystem bookingSystem62 = new booking.BookingSystem((booking.Subject) parkingSpot53);
        bookingSystem48.update((booking.Subject) parkingSpot53);
        parkingSpot23.attach((booking.Observer) bookingSystem48);
        java.lang.String str65 = parkingSpot23.getLicensePlate();
        boolean boolean66 = parkingSpot23.isOccupied();
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSensor17.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.ParkingSpot parkingSpot27 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor28 = new booking.ParkingSensor((booking.Subject) parkingSpot27);
        booking.ParkingSpot parkingSpot29 = new booking.ParkingSpot();
        parkingSpot29.occupySpot("hi!");
        booking.BookingSystem bookingSystem32 = new booking.BookingSystem((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        bookingSystem36.update((booking.Subject) parkingSpot37);
        parkingSpot29.detach((booking.Observer) bookingSystem36);
        parkingSensor28.update((booking.Subject) parkingSpot29);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor44 = new booking.ParkingSensor((booking.Subject) parkingSpot43);
        booking.ParkingSpot parkingSpot45 = new booking.ParkingSpot();
        parkingSpot45.occupySpot("hi!");
        booking.BookingSystem bookingSystem48 = new booking.BookingSystem((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot49 = new booking.ParkingSpot();
        parkingSpot49.occupySpot("hi!");
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot49);
        booking.ParkingSpot parkingSpot53 = new booking.ParkingSpot();
        parkingSpot53.occupySpot("hi!");
        bookingSystem52.update((booking.Subject) parkingSpot53);
        parkingSpot45.detach((booking.Observer) bookingSystem52);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        parkingSpot45.detach((booking.Observer) bookingSystem65);
        parkingSpot45.occupySpot("CANCEL");
        parkingSensor44.update((booking.Subject) parkingSpot45);
        parkingSensor28.update((booking.Subject) parkingSpot45);
        booking.ParkingSpot parkingSpot76 = new booking.ParkingSpot();
        parkingSensor28.update((booking.Subject) parkingSpot76);
        bookingSystem26.update((booking.Subject) parkingSpot76);
        booking.ParkingSensor parkingSensor79 = new booking.ParkingSensor((booking.Subject) parkingSpot76);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        double double21 = bookingReceiver0.getAmount();
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        java.lang.String str26 = bookingReceiver25.getAction();
        booking.UserType userType30 = null;
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver25, "hi!", "", 100, userType30);
        java.lang.String str32 = bookingReceiver25.getAction();
        booking.UserType userType36 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand37 = new booking.ExtendCommand(bookingReceiver25, "hi!", "hi!", (int) (byte) 0, userType36);
        booking.BookingReceiver bookingReceiver41 = new booking.BookingReceiver();
        java.lang.String str42 = bookingReceiver41.getAction();
        booking.UserType userType46 = null;
        booking.ExtendCommand extendCommand47 = new booking.ExtendCommand(bookingReceiver41, "hi!", "", 100, userType46);
        java.lang.String str48 = bookingReceiver41.getAction();
        booking.UserType userType52 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand53 = new booking.ExtendCommand(bookingReceiver41, "hi!", "hi!", (int) (byte) 0, userType52);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver25, "CANCEL", "CANCEL", (int) (short) 1, userType52);
        bookingReceiver0.bookSpace("EXTEND", "", (int) (byte) 100, userType52);
        double double56 = bookingReceiver0.getDeposit();
        double double57 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + userType36 + "' != '" + booking.UserType.NON_FACULTY + "'", userType36.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.NON_FACULTY + "'", userType52.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1000.0d + "'", double57 == 1000.0d);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver4 = new booking.BookingReceiver();
        java.lang.String str5 = bookingReceiver4.getAction();
        booking.UserType userType9 = null;
        booking.ExtendCommand extendCommand10 = new booking.ExtendCommand(bookingReceiver4, "hi!", "", 100, userType9);
        java.lang.String str11 = bookingReceiver4.getAction();
        booking.UserType userType15 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver4, "hi!", "hi!", (int) (byte) 0, userType15);
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver0, "", "", (int) (byte) 100, userType15);
        booking.CancelCommand cancelCommand20 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        booking.UserType userType24 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand25 = new booking.BookCommand(bookingReceiver0, "", "CANCEL", (int) (byte) 1, userType24);
        booking.CancelCommand cancelCommand28 = new booking.CancelCommand(bookingReceiver0, "BOOK", "");
        bookingReceiver0.cancelBooking("EXTEND", "EXTEND");
        java.lang.String str32 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType15 + "' != '" + booking.UserType.NON_FACULTY + "'", userType15.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType24 + "' != '" + booking.UserType.FACULTY + "'", userType24.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CANCEL" + "'", str32, "CANCEL");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor34 = new booking.ParkingSensor((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        parkingSensor34.update((booking.Subject) parkingSpot35);
        booking.ParkingSensor parkingSensor49 = new booking.ParkingSensor((booking.Subject) parkingSpot35);
        parkingSpot2.attach((booking.Observer) parkingSensor49);
        parkingSpot2.occupySpot("hi!");
        java.lang.String str53 = parkingSpot2.getLicensePlate();
        boolean boolean54 = parkingSpot2.isOccupied();
        parkingSpot2.freeSpot();
        booking.BookingSystem bookingSystem56 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.BookingSystem bookingSystem57 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot58 = new booking.ParkingSpot();
        parkingSpot58.occupySpot("hi!");
        booking.BookingSystem bookingSystem61 = new booking.BookingSystem((booking.Subject) parkingSpot58);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        bookingSystem65.update((booking.Subject) parkingSpot66);
        parkingSpot58.detach((booking.Observer) bookingSystem65);
        boolean boolean71 = parkingSpot58.isOccupied();
        java.lang.String str72 = parkingSpot58.getLicensePlate();
        parkingSpot58.freeSpot();
        bookingSystem57.update((booking.Subject) parkingSpot58);
        boolean boolean75 = parkingSpot58.isOccupied();
        boolean boolean76 = parkingSpot58.isOccupied();
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        double double8 = bookingReceiver0.getDeposit();
        java.lang.String str9 = bookingReceiver0.getAction();
        bookingReceiver0.cancelBooking("hi!", "EXTEND");
        java.lang.String str13 = bookingReceiver0.getAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CANCEL" + "'", str13, "CANCEL");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        double double75 = bookingReceiver0.getAmount();
        double double76 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        double double7 = bookingReceiver0.getDeposit();
        java.lang.String str8 = bookingReceiver0.getAction();
        double double9 = bookingReceiver0.getDeposit();
        booking.CancelCommand cancelCommand12 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "");
        cancelCommand12.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        booking.BookingReceiver bookingReceiver17 = new booking.BookingReceiver();
        bookingReceiver17.cancelBooking("hi!", "hi!");
        bookingReceiver17.cancelBooking("", "");
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver17, "", "hi!");
        cancelCommand26.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand26);
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.BookingReceiver bookingReceiver50 = new booking.BookingReceiver();
        java.lang.String str51 = bookingReceiver50.getAction();
        booking.UserType userType55 = null;
        booking.ExtendCommand extendCommand56 = new booking.ExtendCommand(bookingReceiver50, "hi!", "", 100, userType55);
        booking.UserType userType60 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand61 = new booking.BookCommand(bookingReceiver50, "hi!", "hi!", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        booking.UserType userType69 = booking.UserType.FACULTY;
        bookingReceiver65.bookSpace("", "", 100, userType69);
        bookingReceiver50.extendBooking("", "", (int) 'a', userType69);
        booking.UserType userType72 = booking.UserType.NON_FACULTY;
        double double73 = bookingReceiver50.getRate(userType72);
        booking.ExtendCommand extendCommand74 = new booking.ExtendCommand(bookingReceiver0, "hi!", "BOOK", 1, userType72);
        java.lang.String str75 = bookingReceiver0.getAction();
        booking.CancelCommand cancelCommand78 = new booking.CancelCommand(bookingReceiver0, "hi!", "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.FACULTY + "'", userType60.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType69 + "' != '" + booking.UserType.FACULTY + "'", userType69.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType72 + "' != '" + booking.UserType.NON_FACULTY + "'", userType72.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        booking.BookingSystem bookingSystem7 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem11 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem12 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        booking.BookingSystem bookingSystem13 = new booking.BookingSystem((booking.Subject) parkingSpot4);
        boolean boolean14 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot15 = new booking.ParkingSpot();
        parkingSpot15.occupySpot("hi!");
        booking.BookingSystem bookingSystem18 = new booking.BookingSystem((booking.Subject) parkingSpot15);
        booking.ParkingSpot parkingSpot19 = new booking.ParkingSpot();
        parkingSpot19.occupySpot("hi!");
        booking.BookingSystem bookingSystem22 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        bookingSystem18.update((booking.Subject) parkingSpot19);
        parkingSpot19.occupySpot("CANCEL");
        booking.BookingSystem bookingSystem26 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        booking.BookingSystem bookingSystem27 = new booking.BookingSystem((booking.Subject) parkingSpot19);
        parkingSpot4.attach((booking.Observer) bookingSystem27);
        booking.ParkingSensor parkingSensor29 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.CancelCommand cancelCommand15 = new booking.CancelCommand(bookingReceiver0, "hi!", "BOOK");
        booking.CancelCommand cancelCommand18 = new booking.CancelCommand(bookingReceiver0, "CANCEL", "CANCEL");
        booking.BookingReceiver bookingReceiver22 = new booking.BookingReceiver();
        java.lang.String str23 = bookingReceiver22.getAction();
        booking.UserType userType27 = null;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver22, "hi!", "", 100, userType27);
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        booking.UserType userType37 = null;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver32, "hi!", "", 100, userType37);
        booking.UserType userType42 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver32, "hi!", "hi!", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.UserType userType51 = booking.UserType.FACULTY;
        bookingReceiver47.bookSpace("", "", 100, userType51);
        bookingReceiver32.extendBooking("", "", (int) 'a', userType51);
        booking.ExtendCommand extendCommand54 = new booking.ExtendCommand(bookingReceiver22, "", "", 0, userType51);
        java.lang.String str55 = bookingReceiver22.getAction();
        double double56 = bookingReceiver22.getAmount();
        booking.UserType userType60 = booking.UserType.STUDENT;
        bookingReceiver22.bookSpace("BOOK", "", (int) (short) 1, userType60);
        bookingReceiver0.bookSpace("hi!", "EXTEND", (int) (short) 10, userType60);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + userType60 + "' != '" + booking.UserType.STUDENT + "'", userType60.equals(booking.UserType.STUDENT));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        booking.BookingReceiver bookingReceiver16 = new booking.BookingReceiver();
        java.lang.String str17 = bookingReceiver16.getAction();
        booking.UserType userType21 = null;
        booking.ExtendCommand extendCommand22 = new booking.ExtendCommand(bookingReceiver16, "hi!", "", 100, userType21);
        java.lang.String str23 = bookingReceiver16.getAction();
        booking.UserType userType27 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand28 = new booking.ExtendCommand(bookingReceiver16, "hi!", "hi!", (int) (byte) 0, userType27);
        booking.ExtendCommand extendCommand29 = new booking.ExtendCommand(bookingReceiver0, "CANCEL", "CANCEL", (int) (short) 1, userType27);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        booking.UserType userType43 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand44 = new booking.BookCommand(bookingReceiver33, "hi!", "hi!", 100, userType43);
        booking.BookingReceiver bookingReceiver48 = new booking.BookingReceiver();
        booking.UserType userType52 = booking.UserType.FACULTY;
        bookingReceiver48.bookSpace("", "", 100, userType52);
        bookingReceiver33.extendBooking("", "", (int) 'a', userType52);
        booking.UserType userType55 = booking.UserType.NON_FACULTY;
        double double56 = bookingReceiver33.getRate(userType55);
        bookingReceiver0.extendBooking("hi!", "", (int) (byte) -1, userType55);
        bookingReceiver0.cancelBooking("EXTEND", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + userType27 + "' != '" + booking.UserType.NON_FACULTY + "'", userType27.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType52 + "' != '" + booking.UserType.FACULTY + "'", userType52.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType55 + "' != '" + booking.UserType.NON_FACULTY + "'", userType55.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot2);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem36 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot37 = new booking.ParkingSpot();
        parkingSpot37.occupySpot("hi!");
        booking.BookingSystem bookingSystem40 = new booking.BookingSystem((booking.Subject) parkingSpot37);
        booking.ParkingSpot parkingSpot41 = new booking.ParkingSpot();
        parkingSpot41.occupySpot("hi!");
        bookingSystem40.update((booking.Subject) parkingSpot41);
        parkingSpot33.detach((booking.Observer) bookingSystem40);
        boolean boolean46 = parkingSpot33.isOccupied();
        java.lang.String str47 = parkingSpot33.getLicensePlate();
        boolean boolean48 = parkingSpot33.isOccupied();
        parkingSpot33.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.BookingSystem bookingSystem52 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        parkingSpot33.occupySpot("CANCEL");
        parkingSensor17.update((booking.Subject) parkingSpot33);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        java.lang.String str4 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver5 = null;
        booking.BookingReceiver bookingReceiver9 = new booking.BookingReceiver();
        booking.UserType userType13 = booking.UserType.FACULTY;
        bookingReceiver9.bookSpace("", "", 100, userType13);
        booking.BookCommand bookCommand15 = new booking.BookCommand(bookingReceiver5, "hi!", "", 0, userType13);
        double double16 = bookingReceiver0.getRate(userType13);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand21 = new booking.ExtendCommand(bookingReceiver0, "BOOK", "EXTEND", (int) (short) 10, userType20);
        extendCommand21.doAction();
        extendCommand21.doAction();
        extendCommand21.doAction();
        extendCommand21.doAction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CANCEL" + "'", str4, "CANCEL");
        org.junit.Assert.assertTrue("'" + userType13 + "' != '" + booking.UserType.FACULTY + "'", userType13.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 8.0d + "'", double16 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver1 = new booking.BookingReceiver();
        java.lang.String str2 = bookingReceiver1.getAction();
        booking.UserType userType6 = null;
        booking.ExtendCommand extendCommand7 = new booking.ExtendCommand(bookingReceiver1, "hi!", "", 100, userType6);
        booking.UserType userType11 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver1, "hi!", "hi!", 100, userType11);
        booking.UserType userType16 = booking.UserType.FACULTY;
        booking.ExtendCommand extendCommand17 = new booking.ExtendCommand(bookingReceiver1, "", "", (int) (short) 1, userType16);
        commandInvoker0.setCommand((booking.ICommand) extendCommand17);
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        extendCommand17.doAction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.FACULTY + "'", userType11.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType16 + "' != '" + booking.UserType.FACULTY + "'", userType16.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        booking.CommandInvoker commandInvoker1 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver2 = null;
        booking.BookingReceiver bookingReceiver6 = new booking.BookingReceiver();
        booking.UserType userType10 = booking.UserType.FACULTY;
        bookingReceiver6.bookSpace("", "", 100, userType10);
        booking.BookCommand bookCommand12 = new booking.BookCommand(bookingReceiver2, "hi!", "", 0, userType10);
        commandInvoker1.setCommand((booking.ICommand) bookCommand12);
        booking.BookingReceiver bookingReceiver14 = new booking.BookingReceiver();
        booking.BookingReceiver bookingReceiver18 = new booking.BookingReceiver();
        java.lang.String str19 = bookingReceiver18.getAction();
        booking.UserType userType23 = null;
        booking.ExtendCommand extendCommand24 = new booking.ExtendCommand(bookingReceiver18, "hi!", "", 100, userType23);
        java.lang.String str25 = bookingReceiver18.getAction();
        booking.UserType userType29 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver18, "hi!", "hi!", (int) (byte) 0, userType29);
        booking.ExtendCommand extendCommand31 = new booking.ExtendCommand(bookingReceiver14, "", "", (int) (byte) 100, userType29);
        booking.CancelCommand cancelCommand34 = new booking.CancelCommand(bookingReceiver14, "hi!", "hi!");
        commandInvoker1.setCommand((booking.ICommand) cancelCommand34);
        cancelCommand34.doAction();
        cancelCommand34.doAction();
        commandInvoker0.setCommand((booking.ICommand) cancelCommand34);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker41 = new booking.CommandInvoker();
        booking.BookingReceiver bookingReceiver42 = null;
        booking.BookingReceiver bookingReceiver46 = new booking.BookingReceiver();
        booking.UserType userType50 = booking.UserType.FACULTY;
        bookingReceiver46.bookSpace("", "", 100, userType50);
        booking.BookCommand bookCommand52 = new booking.BookCommand(bookingReceiver42, "hi!", "", 0, userType50);
        commandInvoker41.setCommand((booking.ICommand) bookCommand52);
        booking.BookingReceiver bookingReceiver54 = new booking.BookingReceiver();
        java.lang.String str55 = bookingReceiver54.getAction();
        booking.UserType userType59 = null;
        booking.ExtendCommand extendCommand60 = new booking.ExtendCommand(bookingReceiver54, "hi!", "", 100, userType59);
        booking.UserType userType64 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand65 = new booking.BookCommand(bookingReceiver54, "hi!", "hi!", 100, userType64);
        bookCommand65.doAction();
        bookCommand65.doAction();
        bookCommand65.doAction();
        bookCommand65.doAction();
        bookCommand65.doAction();
        commandInvoker41.setCommand((booking.ICommand) bookCommand65);
        commandInvoker0.setCommand((booking.ICommand) bookCommand65);
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.NON_FACULTY + "'", userType29.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.FACULTY + "'", userType50.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.FACULTY + "'", userType64.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        booking.CommandInvoker commandInvoker0 = new booking.CommandInvoker();
        commandInvoker0.executeCommand();
        booking.BookingReceiver bookingReceiver2 = new booking.BookingReceiver();
        java.lang.String str3 = bookingReceiver2.getAction();
        booking.UserType userType7 = null;
        booking.ExtendCommand extendCommand8 = new booking.ExtendCommand(bookingReceiver2, "hi!", "", 100, userType7);
        booking.UserType userType12 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand13 = new booking.BookCommand(bookingReceiver2, "hi!", "hi!", 100, userType12);
        bookCommand13.doAction();
        bookCommand13.doAction();
        commandInvoker0.setCommand((booking.ICommand) bookCommand13);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        booking.CommandInvoker commandInvoker19 = new booking.CommandInvoker();
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver21 = new booking.BookingReceiver();
        java.lang.String str22 = bookingReceiver21.getAction();
        booking.UserType userType26 = null;
        booking.ExtendCommand extendCommand27 = new booking.ExtendCommand(bookingReceiver21, "hi!", "", 100, userType26);
        java.lang.String str28 = bookingReceiver21.getAction();
        booking.UserType userType32 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand33 = new booking.ExtendCommand(bookingReceiver21, "hi!", "hi!", (int) (byte) 0, userType32);
        extendCommand33.doAction();
        commandInvoker19.setCommand((booking.ICommand) extendCommand33);
        commandInvoker19.executeCommand();
        booking.BookingReceiver bookingReceiver37 = new booking.BookingReceiver();
        java.lang.String str38 = bookingReceiver37.getAction();
        booking.UserType userType42 = null;
        booking.ExtendCommand extendCommand43 = new booking.ExtendCommand(bookingReceiver37, "hi!", "", 100, userType42);
        booking.UserType userType47 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand48 = new booking.BookCommand(bookingReceiver37, "hi!", "hi!", 100, userType47);
        booking.BookingReceiver bookingReceiver52 = new booking.BookingReceiver();
        booking.UserType userType56 = booking.UserType.FACULTY;
        bookingReceiver52.bookSpace("", "", 100, userType56);
        bookingReceiver37.extendBooking("", "", (int) 'a', userType56);
        booking.CancelCommand cancelCommand61 = new booking.CancelCommand(bookingReceiver37, "BOOK", "CANCEL");
        commandInvoker19.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.setCommand((booking.ICommand) cancelCommand61);
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        commandInvoker0.executeCommand();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + userType12 + "' != '" + booking.UserType.FACULTY + "'", userType12.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + userType32 + "' != '" + booking.UserType.NON_FACULTY + "'", userType32.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.FACULTY + "'", userType47.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType56 + "' != '" + booking.UserType.FACULTY + "'", userType56.equals(booking.UserType.FACULTY));
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        double double8 = bookingReceiver0.getAmount();
        double double9 = bookingReceiver0.getDeposit();
        double double10 = bookingReceiver0.getAmount();
        booking.CancelCommand cancelCommand13 = new booking.CancelCommand(bookingReceiver0, "BOOK", "BOOK");
        double double14 = bookingReceiver0.getAmount();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        java.lang.String str7 = bookingReceiver0.getAction();
        booking.UserType userType11 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand12 = new booking.ExtendCommand(bookingReceiver0, "hi!", "hi!", (int) (byte) 0, userType11);
        double double13 = bookingReceiver0.getAmount();
        double double14 = bookingReceiver0.getAmount();
        double double15 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + userType11 + "' != '" + booking.UserType.NON_FACULTY + "'", userType11.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        bookingReceiver0.cancelBooking("hi!", "hi!");
        booking.UserType userType4 = booking.UserType.STUDENT;
        double double5 = bookingReceiver0.getRate(userType4);
        booking.CancelCommand cancelCommand8 = new booking.CancelCommand(bookingReceiver0, "BOOK", "hi!");
        booking.BookingReceiver bookingReceiver12 = new booking.BookingReceiver();
        java.lang.String str13 = bookingReceiver12.getAction();
        booking.UserType userType17 = null;
        booking.ExtendCommand extendCommand18 = new booking.ExtendCommand(bookingReceiver12, "hi!", "", 100, userType17);
        booking.UserType userType22 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand23 = new booking.BookCommand(bookingReceiver12, "hi!", "hi!", 100, userType22);
        booking.BookingReceiver bookingReceiver24 = new booking.BookingReceiver();
        java.lang.String str25 = bookingReceiver24.getAction();
        booking.UserType userType29 = null;
        booking.ExtendCommand extendCommand30 = new booking.ExtendCommand(bookingReceiver24, "hi!", "", 100, userType29);
        booking.UserType userType34 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand35 = new booking.BookCommand(bookingReceiver24, "hi!", "hi!", 100, userType34);
        booking.BookingReceiver bookingReceiver39 = new booking.BookingReceiver();
        booking.UserType userType43 = booking.UserType.FACULTY;
        bookingReceiver39.bookSpace("", "", 100, userType43);
        bookingReceiver24.extendBooking("", "", (int) 'a', userType43);
        double double46 = bookingReceiver12.getRate(userType43);
        booking.UserType userType47 = booking.UserType.VISITOR;
        double double48 = bookingReceiver12.getRate(userType47);
        bookingReceiver12.cancelBooking("BOOK", "BOOK");
        booking.BookingReceiver bookingReceiver55 = new booking.BookingReceiver();
        java.lang.String str56 = bookingReceiver55.getAction();
        booking.UserType userType60 = null;
        booking.ExtendCommand extendCommand61 = new booking.ExtendCommand(bookingReceiver55, "hi!", "", 100, userType60);
        booking.BookingReceiver bookingReceiver65 = new booking.BookingReceiver();
        java.lang.String str66 = bookingReceiver65.getAction();
        booking.UserType userType70 = null;
        booking.ExtendCommand extendCommand71 = new booking.ExtendCommand(bookingReceiver65, "hi!", "", 100, userType70);
        booking.UserType userType75 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand76 = new booking.BookCommand(bookingReceiver65, "hi!", "hi!", 100, userType75);
        booking.BookingReceiver bookingReceiver80 = new booking.BookingReceiver();
        booking.UserType userType84 = booking.UserType.FACULTY;
        bookingReceiver80.bookSpace("", "", 100, userType84);
        bookingReceiver65.extendBooking("", "", (int) 'a', userType84);
        bookingReceiver55.extendBooking("hi!", "", 0, userType84);
        booking.ExtendCommand extendCommand88 = new booking.ExtendCommand(bookingReceiver12, "", "", (int) (byte) 100, userType84);
        bookingReceiver0.extendBooking("EXTEND", "hi!", (int) (short) 10, userType84);
        double double90 = bookingReceiver0.getDeposit();
        org.junit.Assert.assertTrue("'" + userType4 + "' != '" + booking.UserType.STUDENT + "'", userType4.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.0d + "'", double5 == 5.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.FACULTY + "'", userType22.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + userType34 + "' != '" + booking.UserType.FACULTY + "'", userType34.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType43 + "' != '" + booking.UserType.FACULTY + "'", userType43.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 8.0d + "'", double46 == 8.0d);
        org.junit.Assert.assertTrue("'" + userType47 + "' != '" + booking.UserType.VISITOR + "'", userType47.equals(booking.UserType.VISITOR));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 15.0d + "'", double48 == 15.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + userType75 + "' != '" + booking.UserType.FACULTY + "'", userType75.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType84 + "' != '" + booking.UserType.FACULTY + "'", userType84.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.BookingReceiver bookingReceiver10 = new booking.BookingReceiver();
        java.lang.String str11 = bookingReceiver10.getAction();
        booking.UserType userType15 = null;
        booking.ExtendCommand extendCommand16 = new booking.ExtendCommand(bookingReceiver10, "hi!", "", 100, userType15);
        booking.UserType userType20 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand21 = new booking.BookCommand(bookingReceiver10, "hi!", "hi!", 100, userType20);
        booking.BookingReceiver bookingReceiver25 = new booking.BookingReceiver();
        booking.UserType userType29 = booking.UserType.FACULTY;
        bookingReceiver25.bookSpace("", "", 100, userType29);
        bookingReceiver10.extendBooking("", "", (int) 'a', userType29);
        booking.ExtendCommand extendCommand32 = new booking.ExtendCommand(bookingReceiver0, "", "", 0, userType29);
        booking.BookingReceiver bookingReceiver33 = new booking.BookingReceiver();
        java.lang.String str34 = bookingReceiver33.getAction();
        booking.UserType userType38 = null;
        booking.ExtendCommand extendCommand39 = new booking.ExtendCommand(bookingReceiver33, "hi!", "", 100, userType38);
        java.lang.String str40 = bookingReceiver33.getAction();
        booking.UserType userType44 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand45 = new booking.ExtendCommand(bookingReceiver33, "hi!", "hi!", (int) (byte) 0, userType44);
        double double46 = bookingReceiver0.getRate(userType44);
        booking.UserType userType50 = booking.UserType.NON_FACULTY;
        booking.ExtendCommand extendCommand51 = new booking.ExtendCommand(bookingReceiver0, "hi!", "CANCEL", (int) ' ', userType50);
        double double52 = bookingReceiver0.getDeposit();
        booking.UserType userType56 = null;
        booking.BookCommand bookCommand57 = new booking.BookCommand(bookingReceiver0, "hi!", "", (int) 'a', userType56);
        double double58 = bookingReceiver0.getDeposit();
        bookingReceiver0.cancelBooking("", "CANCEL");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + userType20 + "' != '" + booking.UserType.FACULTY + "'", userType20.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType29 + "' != '" + booking.UserType.FACULTY + "'", userType29.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + userType44 + "' != '" + booking.UserType.NON_FACULTY + "'", userType44.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType50 + "' != '" + booking.UserType.NON_FACULTY + "'", userType50.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        parkingSpot0.freeSpot();
        java.lang.String str3 = parkingSpot0.getLicensePlate();
        boolean boolean4 = parkingSpot0.isOccupied();
        booking.ParkingSensor parkingSensor5 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        booking.CancelCommand cancelCommand26 = new booking.CancelCommand(bookingReceiver0, "EXTEND", "BOOK");
        cancelCommand26.doAction();
        cancelCommand26.doAction();
        cancelCommand26.doAction();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor1 = new booking.ParkingSensor((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot2 = new booking.ParkingSpot();
        parkingSpot2.occupySpot("hi!");
        booking.BookingSystem bookingSystem5 = new booking.BookingSystem((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot6 = new booking.ParkingSpot();
        parkingSpot6.occupySpot("hi!");
        booking.BookingSystem bookingSystem9 = new booking.BookingSystem((booking.Subject) parkingSpot6);
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        parkingSpot10.occupySpot("hi!");
        bookingSystem9.update((booking.Subject) parkingSpot10);
        parkingSpot2.detach((booking.Observer) bookingSystem9);
        parkingSensor1.update((booking.Subject) parkingSpot2);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor17 = new booking.ParkingSensor((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot18 = new booking.ParkingSpot();
        parkingSpot18.occupySpot("hi!");
        booking.BookingSystem bookingSystem21 = new booking.BookingSystem((booking.Subject) parkingSpot18);
        booking.ParkingSpot parkingSpot22 = new booking.ParkingSpot();
        parkingSpot22.occupySpot("hi!");
        booking.BookingSystem bookingSystem25 = new booking.BookingSystem((booking.Subject) parkingSpot22);
        booking.ParkingSpot parkingSpot26 = new booking.ParkingSpot();
        parkingSpot26.occupySpot("hi!");
        bookingSystem25.update((booking.Subject) parkingSpot26);
        parkingSpot18.detach((booking.Observer) bookingSystem25);
        parkingSensor17.update((booking.Subject) parkingSpot18);
        parkingSpot2.detach((booking.Observer) parkingSensor17);
        booking.ParkingSensor parkingSensor33 = new booking.ParkingSensor((booking.Subject) parkingSpot2);
        parkingSpot2.occupySpot("CANCEL");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        booking.ParkingSpot parkingSpot0 = new booking.ParkingSpot();
        parkingSpot0.occupySpot("hi!");
        booking.BookingSystem bookingSystem3 = new booking.BookingSystem((booking.Subject) parkingSpot0);
        booking.ParkingSpot parkingSpot4 = new booking.ParkingSpot();
        parkingSpot4.occupySpot("hi!");
        bookingSystem3.update((booking.Subject) parkingSpot4);
        parkingSpot4.freeSpot();
        java.lang.String str9 = parkingSpot4.getLicensePlate();
        booking.ParkingSpot parkingSpot10 = new booking.ParkingSpot();
        booking.ParkingSensor parkingSensor11 = new booking.ParkingSensor((booking.Subject) parkingSpot10);
        booking.ParkingSpot parkingSpot12 = new booking.ParkingSpot();
        parkingSpot12.occupySpot("hi!");
        booking.BookingSystem bookingSystem15 = new booking.BookingSystem((booking.Subject) parkingSpot12);
        booking.ParkingSpot parkingSpot16 = new booking.ParkingSpot();
        parkingSpot16.occupySpot("hi!");
        booking.BookingSystem bookingSystem19 = new booking.BookingSystem((booking.Subject) parkingSpot16);
        booking.ParkingSpot parkingSpot20 = new booking.ParkingSpot();
        parkingSpot20.occupySpot("hi!");
        bookingSystem19.update((booking.Subject) parkingSpot20);
        parkingSpot12.detach((booking.Observer) bookingSystem19);
        parkingSensor11.update((booking.Subject) parkingSpot12);
        booking.ParkingSensor parkingSensor26 = new booking.ParkingSensor((booking.Subject) parkingSpot12);
        parkingSpot4.detach((booking.Observer) parkingSensor26);
        parkingSpot4.occupySpot("hi!");
        java.lang.String str30 = parkingSpot4.getLicensePlate();
        booking.ParkingSensor parkingSensor31 = new booking.ParkingSensor((booking.Subject) parkingSpot4);
        boolean boolean32 = parkingSpot4.isOccupied();
        booking.ParkingSpot parkingSpot33 = new booking.ParkingSpot();
        booking.BookingSystem bookingSystem34 = new booking.BookingSystem((booking.Subject) parkingSpot33);
        booking.ParkingSpot parkingSpot35 = new booking.ParkingSpot();
        parkingSpot35.occupySpot("hi!");
        booking.BookingSystem bookingSystem38 = new booking.BookingSystem((booking.Subject) parkingSpot35);
        booking.ParkingSpot parkingSpot39 = new booking.ParkingSpot();
        parkingSpot39.occupySpot("hi!");
        booking.BookingSystem bookingSystem42 = new booking.BookingSystem((booking.Subject) parkingSpot39);
        booking.ParkingSpot parkingSpot43 = new booking.ParkingSpot();
        parkingSpot43.occupySpot("hi!");
        bookingSystem42.update((booking.Subject) parkingSpot43);
        parkingSpot35.detach((booking.Observer) bookingSystem42);
        booking.ParkingSpot parkingSpot48 = new booking.ParkingSpot();
        parkingSpot48.occupySpot("hi!");
        booking.BookingSystem bookingSystem51 = new booking.BookingSystem((booking.Subject) parkingSpot48);
        booking.ParkingSpot parkingSpot52 = new booking.ParkingSpot();
        parkingSpot52.occupySpot("hi!");
        booking.BookingSystem bookingSystem55 = new booking.BookingSystem((booking.Subject) parkingSpot52);
        booking.ParkingSpot parkingSpot56 = new booking.ParkingSpot();
        parkingSpot56.occupySpot("hi!");
        bookingSystem55.update((booking.Subject) parkingSpot56);
        parkingSpot48.detach((booking.Observer) bookingSystem55);
        parkingSpot35.detach((booking.Observer) bookingSystem55);
        booking.ParkingSpot parkingSpot62 = new booking.ParkingSpot();
        parkingSpot62.occupySpot("hi!");
        booking.BookingSystem bookingSystem65 = new booking.BookingSystem((booking.Subject) parkingSpot62);
        booking.ParkingSpot parkingSpot66 = new booking.ParkingSpot();
        parkingSpot66.occupySpot("hi!");
        booking.BookingSystem bookingSystem69 = new booking.BookingSystem((booking.Subject) parkingSpot66);
        booking.ParkingSpot parkingSpot70 = new booking.ParkingSpot();
        parkingSpot70.occupySpot("hi!");
        bookingSystem69.update((booking.Subject) parkingSpot70);
        parkingSpot62.detach((booking.Observer) bookingSystem69);
        bookingSystem55.update((booking.Subject) parkingSpot62);
        parkingSpot62.freeSpot();
        bookingSystem34.update((booking.Subject) parkingSpot62);
        parkingSpot4.detach((booking.Observer) bookingSystem34);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        booking.BookingReceiver bookingReceiver0 = new booking.BookingReceiver();
        java.lang.String str1 = bookingReceiver0.getAction();
        booking.UserType userType5 = null;
        booking.ExtendCommand extendCommand6 = new booking.ExtendCommand(bookingReceiver0, "hi!", "", 100, userType5);
        booking.UserType userType10 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand11 = new booking.BookCommand(bookingReceiver0, "hi!", "hi!", 100, userType10);
        booking.BookingReceiver bookingReceiver15 = new booking.BookingReceiver();
        booking.UserType userType19 = booking.UserType.FACULTY;
        bookingReceiver15.bookSpace("", "", 100, userType19);
        bookingReceiver0.extendBooking("", "", (int) 'a', userType19);
        booking.UserType userType22 = booking.UserType.NON_FACULTY;
        double double23 = bookingReceiver0.getRate(userType22);
        bookingReceiver0.cancelBooking("BOOK", "hi!");
        double double27 = bookingReceiver0.getDeposit();
        java.lang.String str28 = bookingReceiver0.getAction();
        booking.BookingReceiver bookingReceiver32 = new booking.BookingReceiver();
        java.lang.String str33 = bookingReceiver32.getAction();
        booking.UserType userType37 = null;
        booking.ExtendCommand extendCommand38 = new booking.ExtendCommand(bookingReceiver32, "hi!", "", 100, userType37);
        booking.UserType userType42 = booking.UserType.FACULTY;
        booking.BookCommand bookCommand43 = new booking.BookCommand(bookingReceiver32, "hi!", "hi!", 100, userType42);
        booking.BookingReceiver bookingReceiver47 = new booking.BookingReceiver();
        booking.UserType userType51 = booking.UserType.FACULTY;
        bookingReceiver47.bookSpace("", "", 100, userType51);
        bookingReceiver32.extendBooking("", "", (int) 'a', userType51);
        booking.UserType userType54 = booking.UserType.NON_FACULTY;
        double double55 = bookingReceiver32.getRate(userType54);
        booking.BookingReceiver bookingReceiver56 = null;
        booking.BookingReceiver bookingReceiver60 = new booking.BookingReceiver();
        bookingReceiver60.cancelBooking("hi!", "hi!");
        booking.UserType userType64 = booking.UserType.STUDENT;
        double double65 = bookingReceiver60.getRate(userType64);
        booking.BookCommand bookCommand66 = new booking.BookCommand(bookingReceiver56, "BOOK", "hi!", 0, userType64);
        double double67 = bookingReceiver32.getRate(userType64);
        booking.BookCommand bookCommand68 = new booking.BookCommand(bookingReceiver0, "BOOK", "", 1, userType64);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + userType10 + "' != '" + booking.UserType.FACULTY + "'", userType10.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType19 + "' != '" + booking.UserType.FACULTY + "'", userType19.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType22 + "' != '" + booking.UserType.NON_FACULTY + "'", userType22.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CANCEL" + "'", str28, "CANCEL");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + userType42 + "' != '" + booking.UserType.FACULTY + "'", userType42.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType51 + "' != '" + booking.UserType.FACULTY + "'", userType51.equals(booking.UserType.FACULTY));
        org.junit.Assert.assertTrue("'" + userType54 + "' != '" + booking.UserType.NON_FACULTY + "'", userType54.equals(booking.UserType.NON_FACULTY));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + userType64 + "' != '" + booking.UserType.STUDENT + "'", userType64.equals(booking.UserType.STUDENT));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 5.0d + "'", double65 == 5.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 5.0d + "'", double67 == 5.0d);
    }
}

