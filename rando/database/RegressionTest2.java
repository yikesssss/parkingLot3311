package rando.database;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
// flaky "1) test1001(RegressionTest2)":         database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database1.update("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
// flaky "2) test1002(RegressionTest2)":         database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        java.util.ArrayList<user.User> userList68 = database1.users;
        java.util.ArrayList<user.User> userList69 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
// flaky "3) test1004(RegressionTest2)":         database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.lang.Class<?> wildcardClass16 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot27 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        java.lang.Class<?> wildcardClass19 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass18 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        java.util.ArrayList<user.User> userList25 = database17.users;
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        java.util.ArrayList<user.User> userList62 = database55.users;
        database34.users = userList62;
        database29.users = userList62;
        database17.users = userList62;
        database17.load("hi!");
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        java.util.ArrayList<user.User> userList76 = database69.users;
        java.util.ArrayList<user.User> userList77 = database69.users;
        java.util.ArrayList<user.User> userList78 = database69.users;
        database17.users = userList78;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database.Database database85 = database.Database.getInstance("hi!");
        user.User[] userArray86 = new user.User[] {};
        java.util.ArrayList<user.User> userList87 = new java.util.ArrayList<user.User>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<user.User>) userList87, userArray86);
        database85.users = userList87;
        database81.users = userList87;
        database17.users = userList87;
        database1.users = userList87;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userArray86);
        org.junit.Assert.assertArrayEquals(userArray86, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database53.users = userList60;
        database.Database database63 = database.Database.getInstance("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database63.users = userList65;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database63.users = userList70;
        database53.users = userList70;
        java.util.ArrayList<user.User> userList73 = database53.users;
        database1.users = userList73;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList73);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = parkingSpot6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        java.lang.Class<?> wildcardClass9 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList25 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList25);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 1);
        java.lang.Class<?> wildcardClass19 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 100);
        java.lang.Class<?> wildcardClass17 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = parkingSpot10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.update("hi!");
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database20.users = userList24;
        java.util.ArrayList<user.User> userList26 = database20.users;
        database20.load("hi!");
        database20.update("hi!");
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        java.util.ArrayList<user.User> userList34 = database32.users;
        database20.users = userList34;
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        database37.users = userList47;
        java.util.ArrayList<user.User> userList50 = null;
        database37.users = userList50;
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database37.users = userList55;
        database20.users = userList55;
        java.util.ArrayList<user.User> userList60 = database20.users;
        database1.users = userList60;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database1.load("hi!");
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList27 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList27);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        java.util.ArrayList<user.User> userList68 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        java.util.ArrayList<user.User> userList37 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database.Database database32 = database.Database.getInstance("");
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database32.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        java.util.ArrayList<user.User> userList52 = database45.users;
        database45.load("hi!");
        java.util.ArrayList<user.User> userList55 = database45.users;
        database32.users = userList55;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        java.util.ArrayList<user.User> userList64 = database58.users;
        database58.load("hi!");
        java.util.ArrayList<user.User> userList67 = database58.users;
        database32.users = userList67;
        database1.users = userList67;
        java.util.ArrayList<user.User> userList70 = database1.users;
        java.lang.Class<?> wildcardClass71 = userList70.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database1.load("hi!");
        database.Database database20 = database.Database.getInstance("hi!");
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database22.users = userList29;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database32.users = userList39;
        database22.users = userList39;
        java.util.ArrayList<user.User> userList42 = database22.users;
        database22.load("hi!");
        database22.update("hi!");
        database22.update("hi!");
        java.util.ArrayList<user.User> userList49 = database22.users;
        database20.users = userList49;
        database1.users = userList49;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList49);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database13.users = userList30;
        java.util.ArrayList<user.User> userList33 = database13.users;
        database.Database database35 = database.Database.getInstance("");
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database37.users = userList44;
        database35.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database48.users = userList52;
        java.util.ArrayList<user.User> userList54 = database48.users;
        java.util.ArrayList<user.User> userList55 = database48.users;
        database48.load("hi!");
        java.util.ArrayList<user.User> userList58 = database48.users;
        database35.users = userList58;
        database13.users = userList58;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database62.users = userList66;
        java.util.ArrayList<user.User> userList68 = database62.users;
        java.util.ArrayList<user.User> userList69 = database62.users;
        java.util.ArrayList<user.User> userList70 = database62.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        database72.update("hi!");
        java.util.ArrayList<user.User> userList81 = database72.users;
        database62.users = userList81;
        database13.users = userList81;
        database1.users = userList81;
        database.Database database86 = database.Database.getInstance("");
        database.Database database88 = database.Database.getInstance("hi!");
        user.User[] userArray89 = new user.User[] {};
        java.util.ArrayList<user.User> userList90 = new java.util.ArrayList<user.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<user.User>) userList90, userArray89);
        database88.users = userList90;
        database.Database database94 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList95 = database94.users;
        database88.users = userList95;
        database86.users = userList95;
        java.util.ArrayList<user.User> userList98 = database86.users;
        database1.users = userList98;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(database88);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertArrayEquals(userArray89, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(database94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(userList98);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        java.lang.Class<?> wildcardClass13 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database1.users = userList13;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database16.users = userList33;
        database1.users = userList33;
        org.junit.Assert.assertNotNull(database1);
// flaky "4) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList5);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList7);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNotNull(database10);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList11);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList12);
// flaky "1) test1033(RegressionTest2)":         org.junit.Assert.assertNull(userList13);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        database22.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        database36.load("hi!");
        database36.update("hi!");
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database36.users = userList50;
        database22.users = userList50;
        java.util.ArrayList<user.User> userList53 = database22.users;
        database1.users = userList53;
        java.util.ArrayList<user.User> userList55 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database40.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        java.util.ArrayList<user.User> userList71 = database61.users;
        database40.users = userList71;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        java.util.ArrayList<user.User> userList77 = database74.users;
        database40.users = userList77;
        database1.users = userList77;
        java.util.ArrayList<user.User> userList80 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList80);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database15.users = userList45;
        java.util.ArrayList<user.User> userList52 = database15.users;
        database1.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database55.load("hi!");
        java.util.ArrayList<user.User> userList63 = database55.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        java.util.ArrayList<user.User> userList71 = database65.users;
        database65.load("hi!");
        user.User[] userArray74 = new user.User[] {};
        java.util.ArrayList<user.User> userList75 = new java.util.ArrayList<user.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<user.User>) userList75, userArray74);
        database65.users = userList75;
        database65.update("hi!");
        database65.update("hi!");
        java.util.ArrayList<user.User> userList82 = database65.users;
        java.util.ArrayList<user.User> userList83 = database65.users;
        database55.users = userList83;
        database1.users = userList83;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertArrayEquals(userArray74, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        java.util.ArrayList<user.User> userList37 = database33.users;
        database1.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        database40.load("hi!");
        java.util.ArrayList<user.User> userList49 = database40.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        java.util.ArrayList<user.User> userList55 = database51.users;
        java.util.ArrayList<user.User> userList56 = database51.users;
        database40.users = userList56;
        database1.users = userList56;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass33 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database8.load("hi!");
        database.Database database15 = database.Database.getInstance("");
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database15.users = userList24;
        database8.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList34 = database20.users;
        database16.users = userList34;
        database16.load("hi!");
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database39.load("hi!");
        database39.load("hi!");
        java.util.ArrayList<user.User> userList47 = database39.users;
        java.util.ArrayList<user.User> userList48 = database39.users;
        database16.users = userList48;
        database1.users = userList48;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        java.util.ArrayList<user.User> userList19 = database16.users;
        database16.load("hi!");
        database16.load("hi!");
        java.util.ArrayList<user.User> userList24 = database16.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        java.util.ArrayList<user.User> userList35 = database28.users;
        database28.load("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database28.users = userList39;
        java.util.ArrayList<user.User> userList42 = database28.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        java.util.ArrayList<user.User> userList47 = database44.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        database44.users = userList53;
        database44.update("hi!");
        java.util.ArrayList<user.User> userList58 = database44.users;
        java.util.ArrayList<user.User> userList59 = database44.users;
        java.util.ArrayList<user.User> userList60 = database44.users;
        database.Database database62 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        user.User[] userArray71 = new user.User[] {};
        java.util.ArrayList<user.User> userList72 = new java.util.ArrayList<user.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<user.User>) userList72, userArray71);
        database70.users = userList72;
        database66.users = userList72;
        database62.users = userList72;
        java.util.ArrayList<user.User> userList77 = database62.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database79.users = userList83;
        java.util.ArrayList<user.User> userList85 = database79.users;
        java.util.ArrayList<user.User> userList86 = database79.users;
        database.Database database88 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList89 = database88.users;
        java.util.ArrayList<user.User> userList90 = database88.users;
        java.util.ArrayList<user.User> userList91 = database88.users;
        database79.users = userList91;
        database62.users = userList91;
        database44.users = userList91;
        database28.users = userList91;
        database1.users = userList91;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertArrayEquals(userArray71, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(database88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        java.util.ArrayList<user.User> userList46 = database41.users;
        database41.update("hi!");
        database41.load("hi!");
        database.Database database52 = database.Database.getInstance("");
        database.Database database54 = database.Database.getInstance("hi!");
        user.User[] userArray55 = new user.User[] {};
        java.util.ArrayList<user.User> userList56 = new java.util.ArrayList<user.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<user.User>) userList56, userArray55);
        database54.users = userList56;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database54.users = userList61;
        database52.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        java.util.ArrayList<user.User> userList71 = database65.users;
        java.util.ArrayList<user.User> userList72 = database65.users;
        database65.load("hi!");
        java.util.ArrayList<user.User> userList75 = database65.users;
        database52.users = userList75;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database78.users = userList82;
        java.util.ArrayList<user.User> userList84 = database78.users;
        database78.load("hi!");
        java.util.ArrayList<user.User> userList87 = database78.users;
        database52.users = userList87;
        database41.users = userList87;
        java.util.ArrayList<user.User> userList90 = database41.users;
        database1.users = userList90;
        java.util.ArrayList<user.User> userList92 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertArrayEquals(userArray55, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList92);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        java.util.ArrayList<user.User> userList32 = database24.users;
        java.util.ArrayList<user.User> userList33 = database24.users;
        database1.users = userList33;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList34 = database20.users;
        database16.users = userList34;
        database16.load("hi!");
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database39.load("hi!");
        database39.load("hi!");
        java.util.ArrayList<user.User> userList47 = database39.users;
        java.util.ArrayList<user.User> userList48 = database39.users;
        database16.users = userList48;
        database1.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        database52.users = userList62;
        database52.load("hi!");
        java.util.ArrayList<user.User> userList67 = database52.users;
        database1.users = userList67;
        java.lang.Class<?> wildcardClass69 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        java.util.ArrayList<user.User> userList44 = database40.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database40.users = userList48;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database1.users = userList54;
        java.util.ArrayList<user.User> userList56 = null;
        database1.users = userList56;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        java.lang.Class<?> wildcardClass15 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
// flaky "5) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList9);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList10);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
// flaky "2) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
// flaky "1) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList22);
// flaky "1) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
// flaky "1) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList26);
// flaky "1) test1052(RegressionTest2)":         org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        database1.users = userList34;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList39 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database11.users = userList29;
        java.util.ArrayList<user.User> userList31 = database11.users;
        database11.load("hi!");
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database44.users = userList48;
        database39.users = userList48;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database52.users = userList62;
        database39.users = userList62;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        database39.users = userList73;
        java.util.ArrayList<user.User> userList76 = database39.users;
        database35.users = userList76;
        database11.users = userList76;
        database.Database database80 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList81 = database80.users;
        java.util.ArrayList<user.User> userList82 = database80.users;
        java.util.ArrayList<user.User> userList83 = database80.users;
        database80.load("hi!");
        database80.load("hi!");
        java.util.ArrayList<user.User> userList88 = database80.users;
        database11.users = userList88;
        database1.users = userList88;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList30 = database1.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        java.util.ArrayList<user.User> userList38 = database32.users;
        java.util.ArrayList<user.User> userList39 = database32.users;
        database32.load("hi!");
        java.util.ArrayList<user.User> userList42 = database32.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        java.util.ArrayList<user.User> userList47 = database44.users;
        database44.load("hi!");
        database44.load("hi!");
        java.util.ArrayList<user.User> userList52 = database44.users;
        database32.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database76.load("hi!");
        java.util.ArrayList<user.User> userList86 = database76.users;
        database55.users = userList86;
        database32.users = userList86;
        database1.users = userList86;
        database.Database database91 = database.Database.getInstance("hi!");
        user.User[] userArray92 = new user.User[] {};
        java.util.ArrayList<user.User> userList93 = new java.util.ArrayList<user.User>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<user.User>) userList93, userArray92);
        database91.users = userList93;
        database1.users = userList93;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(database91);
        org.junit.Assert.assertNotNull(userArray92);
        org.junit.Assert.assertArrayEquals(userArray92, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        java.lang.Class<?> wildcardClass3 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database11.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database24.load("hi!");
        java.util.ArrayList<user.User> userList34 = database24.users;
        database11.users = userList34;
        database1.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        java.util.ArrayList<user.User> userList46 = database38.users;
        database38.update("hi!");
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database55.users = userList83;
        database50.users = userList83;
        database38.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList88 = database1.users;
        java.util.ArrayList<user.User> userList89 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList89);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        java.util.ArrayList<user.User> userList56 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        database47.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database47.users = userList61;
        database33.users = userList61;
        database1.users = userList61;
        java.util.ArrayList<user.User> userList65 = database1.users;
        database.Database database67 = database.Database.getInstance("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database67.users = userList69;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        database67.users = userList77;
        database67.load("hi!");
        java.util.ArrayList<user.User> userList82 = database67.users;
        database1.users = userList82;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        database12.users = userList21;
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        java.util.ArrayList<user.User> userList56 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database24.users = userList30;
        database20.users = userList30;
        java.util.ArrayList<user.User> userList35 = database20.users;
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        java.lang.Class<?> wildcardClass38 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass59 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass39 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        database.Database database46 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database50.users = userList57;
        database46.users = userList57;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList62 = database46.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database64.users = userList68;
        java.util.ArrayList<user.User> userList70 = database64.users;
        database64.load("hi!");
        user.User[] userArray73 = new user.User[] {};
        java.util.ArrayList<user.User> userList74 = new java.util.ArrayList<user.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<user.User>) userList74, userArray73);
        database64.users = userList74;
        database64.update("hi!");
        database64.update("hi!");
        java.util.ArrayList<user.User> userList81 = database64.users;
        database46.users = userList81;
        database1.users = userList81;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertArrayEquals(userArray73, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        database40.users = userList49;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database36.users = userList54;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        database57.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        database71.load("hi!");
        database71.update("hi!");
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        java.util.ArrayList<user.User> userList85 = database83.users;
        database71.users = userList85;
        database57.users = userList85;
        java.util.ArrayList<user.User> userList88 = database57.users;
        database36.users = userList88;
        java.util.ArrayList<user.User> userList90 = database36.users;
        database1.users = userList90;
        java.lang.Class<?> wildcardClass92 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database.Database database8 = database.Database.getInstance("hi!");
        user.User[] userArray9 = new user.User[] {};
        java.util.ArrayList<user.User> userList10 = new java.util.ArrayList<user.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<user.User>) userList10, userArray9);
        database8.users = userList10;
        java.util.ArrayList<user.User> userList13 = database8.users;
        database1.users = userList13;
        java.lang.Class<?> wildcardClass15 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertArrayEquals(userArray9, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList56 = null;
        database1.users = userList56;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database15.users = userList45;
        java.util.ArrayList<user.User> userList52 = database15.users;
        database1.users = userList52;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database55.users = userList61;
        database55.load("hi!");
        java.util.ArrayList<user.User> userList67 = database55.users;
        java.util.ArrayList<user.User> userList68 = database55.users;
        database1.users = userList68;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        database15.users = userList25;
        java.util.ArrayList<user.User> userList28 = null;
        database15.users = userList28;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database31.users = userList48;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database15.users = userList51;
        database1.users = userList51;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        java.util.ArrayList<user.User> userList26 = database21.users;
        database21.update("hi!");
        java.util.ArrayList<user.User> userList29 = database21.users;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList31 = null;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList33 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNull(userList33);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        java.lang.Class<?> wildcardClass44 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database10.users = userList16;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        java.util.ArrayList<user.User> userList27 = database21.users;
        java.util.ArrayList<user.User> userList28 = database21.users;
        database10.users = userList28;
        java.util.ArrayList<user.User> userList30 = database10.users;
        java.util.ArrayList<user.User> userList31 = database10.users;
        database10.update("hi!");
        database10.update("hi!");
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        java.util.ArrayList<user.User> userList40 = database37.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database37.users = userList46;
        database37.update("hi!");
        java.util.ArrayList<user.User> userList51 = database37.users;
        java.util.ArrayList<user.User> userList52 = database37.users;
        java.util.ArrayList<user.User> userList53 = database37.users;
        database37.update("hi!");
        java.util.ArrayList<user.User> userList56 = database37.users;
        java.util.ArrayList<user.User> userList57 = database37.users;
        database10.users = userList57;
        database1.users = userList57;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        database1.update("hi!");
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database22.update("hi!");
        java.util.ArrayList<user.User> userList36 = database22.users;
        java.util.ArrayList<user.User> userList37 = database22.users;
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.update("hi!");
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        database60.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList89 = database1.users;
        user.User[] userArray90 = new user.User[] {};
        java.util.ArrayList<user.User> userList91 = new java.util.ArrayList<user.User>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<user.User>) userList91, userArray90);
        database1.users = userList91;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userArray90);
        org.junit.Assert.assertArrayEquals(userArray90, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        database1.load("hi!");
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database54.users = userList58;
        java.util.ArrayList<user.User> userList60 = database54.users;
        java.util.ArrayList<user.User> userList61 = database54.users;
        database54.load("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database54.users = userList65;
        database1.users = userList65;
        java.util.ArrayList<user.User> userList69 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(userList69);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        java.util.ArrayList<user.User> userList16 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = userList16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNull(userList16);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
// flaky "6) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList2);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList3);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList15);
// flaky "3) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
// flaky "2) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList19);
// flaky "2) test1090(RegressionTest2)":         org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot7 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.lang.Class<?> wildcardClass17 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database14.users = userList25;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        database33.users = userList42;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList47 = database33.users;
        database29.users = userList47;
        database29.load("hi!");
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        java.util.ArrayList<user.User> userList55 = database52.users;
        database52.load("hi!");
        database52.load("hi!");
        java.util.ArrayList<user.User> userList60 = database52.users;
        java.util.ArrayList<user.User> userList61 = database52.users;
        database29.users = userList61;
        database14.users = userList61;
        database1.users = userList61;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.lang.Class<?> wildcardClass13 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        java.util.ArrayList<user.User> userList25 = database17.users;
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        java.util.ArrayList<user.User> userList62 = database55.users;
        database34.users = userList62;
        database29.users = userList62;
        database17.users = userList62;
        database17.load("hi!");
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        java.util.ArrayList<user.User> userList76 = database69.users;
        java.util.ArrayList<user.User> userList77 = database69.users;
        java.util.ArrayList<user.User> userList78 = database69.users;
        database17.users = userList78;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database.Database database85 = database.Database.getInstance("hi!");
        user.User[] userArray86 = new user.User[] {};
        java.util.ArrayList<user.User> userList87 = new java.util.ArrayList<user.User>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<user.User>) userList87, userArray86);
        database85.users = userList87;
        database81.users = userList87;
        database17.users = userList87;
        database1.users = userList87;
        java.lang.Class<?> wildcardClass93 = userList87.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userArray86);
        org.junit.Assert.assertArrayEquals(userArray86, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        java.util.ArrayList<user.User> userList54 = database1.users;
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database60.users = userList66;
        database56.users = userList66;
        java.util.ArrayList<user.User> userList71 = database56.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        java.util.ArrayList<user.User> userList80 = database73.users;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        java.util.ArrayList<user.User> userList84 = database82.users;
        java.util.ArrayList<user.User> userList85 = database82.users;
        database73.users = userList85;
        database56.users = userList85;
        database1.users = userList85;
        java.util.ArrayList<user.User> userList89 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList89);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        java.util.ArrayList<user.User> userList32 = database1.users;
        java.lang.Class<?> wildcardClass33 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database60.users = userList64;
        database55.users = userList64;
        database55.update("hi!");
        java.util.ArrayList<user.User> userList69 = database55.users;
        java.util.ArrayList<user.User> userList70 = database55.users;
        java.util.ArrayList<user.User> userList71 = database55.users;
        database1.users = userList71;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass75 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        database19.load("hi!");
        java.util.ArrayList<user.User> userList28 = database19.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database34.users = userList40;
        database30.users = userList40;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database46.users = userList62;
        database30.users = userList62;
        database19.users = userList62;
        database1.users = userList62;
        java.util.ArrayList<user.User> userList70 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(userList70);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        java.util.ArrayList<user.User> userList20 = database15.users;
        database15.update("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database.Database database31 = database.Database.getInstance("");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database31.users = userList40;
        database24.users = userList40;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        java.util.ArrayList<user.User> userList52 = database45.users;
        database24.users = userList52;
        database15.users = userList52;
        java.util.ArrayList<user.User> userList55 = database15.users;
        database15.load("hi!");
        java.util.ArrayList<user.User> userList58 = database15.users;
        database1.users = userList58;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        java.util.ArrayList<user.User> userList19 = database16.users;
        database16.load("hi!");
        database16.load("hi!");
        java.util.ArrayList<user.User> userList24 = database16.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database29.users = userList40;
        database29.load("hi!");
        java.util.ArrayList<user.User> userList45 = database29.users;
        java.util.ArrayList<user.User> userList46 = database29.users;
        database.Database database48 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database48.users = userList59;
        database48.load("hi!");
        java.util.ArrayList<user.User> userList64 = database48.users;
        java.util.ArrayList<user.User> userList65 = database48.users;
        database29.users = userList65;
        java.util.ArrayList<user.User> userList67 = database29.users;
        database1.users = userList67;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList71 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList71);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database20.users = userList31;
        database20.load("hi!");
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        java.util.ArrayList<user.User> userList50 = database41.users;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database52.users = userList62;
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        database.Database database82 = database.Database.getInstance("hi!");
        user.User[] userArray83 = new user.User[] {};
        java.util.ArrayList<user.User> userList84 = new java.util.ArrayList<user.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<user.User>) userList84, userArray83);
        database82.users = userList84;
        database78.users = userList84;
        database68.users = userList84;
        database52.users = userList84;
        database41.users = userList84;
        java.util.ArrayList<user.User> userList91 = database41.users;
        java.util.ArrayList<user.User> userList92 = database41.users;
        database1.users = userList92;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertArrayEquals(userArray83, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList92);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database.Database database9 = database.Database.getInstance("");
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database9.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database9.users = userList32;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        java.util.ArrayList<user.User> userList39 = database35.users;
        database9.users = userList39;
        database1.users = userList39;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database.Database database32 = database.Database.getInstance("");
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database32.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        java.util.ArrayList<user.User> userList52 = database45.users;
        database45.load("hi!");
        java.util.ArrayList<user.User> userList55 = database45.users;
        database32.users = userList55;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        java.util.ArrayList<user.User> userList64 = database58.users;
        database58.load("hi!");
        java.util.ArrayList<user.User> userList67 = database58.users;
        database32.users = userList67;
        database1.users = userList67;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        java.util.ArrayList<user.User> userList68 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database16.users = userList27;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList32 = database16.users;
        java.util.ArrayList<user.User> userList33 = database16.users;
        database1.users = userList33;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database36.users = userList47;
        java.util.ArrayList<user.User> userList50 = database36.users;
        database1.users = userList50;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList50);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList20);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        java.lang.Class<?> wildcardClass11 = userList10.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        java.util.ArrayList<user.User> userList52 = database1.users;
        java.lang.Class<?> wildcardClass53 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database3.users = userList20;
        java.util.ArrayList<user.User> userList23 = database3.users;
        database3.load("hi!");
        database3.update("hi!");
        database3.update("hi!");
        java.util.ArrayList<user.User> userList30 = database3.users;
        database1.users = userList30;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList30);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database60.users = userList64;
        database55.users = userList64;
        database.Database database68 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList69 = database68.users;
        java.util.ArrayList<user.User> userList70 = database68.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        java.util.ArrayList<user.User> userList74 = database72.users;
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database72.users = userList78;
        database68.users = userList78;
        database55.users = userList78;
        database.Database database85 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList86 = database85.users;
        database.Database database88 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList89 = database88.users;
        database85.users = userList89;
        database55.users = userList89;
        database55.update("hi!");
        java.util.ArrayList<user.User> userList94 = database55.users;
        java.util.ArrayList<user.User> userList95 = database55.users;
        database1.users = userList95;
        java.lang.Class<?> wildcardClass97 = userList95.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(database88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        java.lang.Class<?> wildcardClass9 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database60.users = userList64;
        java.util.ArrayList<user.User> userList66 = database60.users;
        java.util.ArrayList<user.User> userList67 = database60.users;
        database60.load("hi!");
        java.util.ArrayList<user.User> userList70 = database60.users;
        database47.users = userList70;
        database47.load("hi!");
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database75.users = userList79;
        java.util.ArrayList<user.User> userList81 = database75.users;
        database75.load("hi!");
        java.util.ArrayList<user.User> userList84 = database75.users;
        database47.users = userList84;
        database47.load("hi!");
        java.util.ArrayList<user.User> userList88 = database47.users;
        database1.users = userList88;
        java.lang.Class<?> wildcardClass90 = userList88.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database55.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList86 = database1.users;
        java.util.ArrayList<user.User> userList87 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList37 = database1.users;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database44.users = userList48;
        database39.users = userList48;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database52.users = userList62;
        database39.users = userList62;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        database39.users = userList73;
        database39.update("hi!");
        java.util.ArrayList<user.User> userList78 = database39.users;
        database1.users = userList78;
        java.lang.Class<?> wildcardClass80 = userList78.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = null;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList20 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNull(userList20);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database15.users = userList31;
        database1.users = userList31;
        java.lang.Class<?> wildcardClass37 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database1.users = userList53;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass57 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = parkingSpot8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot28 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot29 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
        org.junit.Assert.assertNull(parkingSpot28);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database1.update("hi!");
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        java.util.ArrayList<user.User> userList50 = database43.users;
        database43.load("hi!");
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database54.load("hi!");
        java.util.ArrayList<user.User> userList66 = database54.users;
        database43.users = userList66;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        java.util.ArrayList<user.User> userList37 = database33.users;
        database1.users = userList37;
        database1.update("hi!");
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database42.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        database.Database database51 = database.Database.getInstance("hi!");
        user.User[] userArray52 = new user.User[] {};
        java.util.ArrayList<user.User> userList53 = new java.util.ArrayList<user.User>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<user.User>) userList53, userArray52);
        database51.users = userList53;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database51.users = userList58;
        database49.users = userList58;
        database42.users = userList58;
        database1.users = userList58;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userArray52);
        org.junit.Assert.assertArrayEquals(userArray52, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        database33.users = userList42;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList47 = database33.users;
        database29.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList50 = database1.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        database52.load("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database52.users = userList62;
        database52.update("hi!");
        database52.update("hi!");
        java.util.ArrayList<user.User> userList69 = database52.users;
        java.util.ArrayList<user.User> userList70 = database52.users;
        database52.update("hi!");
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        database.Database database82 = database.Database.getInstance("hi!");
        user.User[] userArray83 = new user.User[] {};
        java.util.ArrayList<user.User> userList84 = new java.util.ArrayList<user.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<user.User>) userList84, userArray83);
        database82.users = userList84;
        database78.users = userList84;
        database74.users = userList84;
        database74.update("hi!");
        java.util.ArrayList<user.User> userList91 = database74.users;
        database52.users = userList91;
        database1.users = userList91;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertArrayEquals(userArray83, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database1.update("hi!");
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        java.util.ArrayList<user.User> userList50 = database43.users;
        database43.load("hi!");
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database54.load("hi!");
        java.util.ArrayList<user.User> userList66 = database54.users;
        database43.users = userList66;
        database1.users = userList66;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        java.util.ArrayList<user.User> userList73 = database70.users;
        database70.load("hi!");
        database.Database database77 = database.Database.getInstance("");
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database.Database database85 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList86 = database85.users;
        database79.users = userList86;
        database77.users = userList86;
        database70.users = userList86;
        database1.users = userList86;
        java.lang.Class<?> wildcardClass91 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(0);
        java.lang.Class<?> wildcardClass23 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database16.users = userList20;
        java.util.ArrayList<user.User> userList22 = database16.users;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList25 = database16.users;
        database.Database database27 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database27.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        database42.users = userList60;
        database27.users = userList60;
        database16.users = userList60;
        database1.users = userList60;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = parkingSpot12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database13.load("hi!");
        database13.load("hi!");
        java.util.ArrayList<user.User> userList21 = database13.users;
        database1.users = userList21;
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database24.users = userList35;
        database24.load("hi!");
        java.util.ArrayList<user.User> userList40 = database24.users;
        database1.users = userList40;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList18);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        java.util.ArrayList<user.User> userList22 = database19.users;
        database19.load("hi!");
        database.Database database26 = database.Database.getInstance("");
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database26.users = userList35;
        database19.users = userList35;
        java.util.ArrayList<user.User> userList39 = database19.users;
        database1.users = userList39;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList51 = database42.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        java.util.ArrayList<user.User> userList58 = database53.users;
        database42.users = userList58;
        java.util.ArrayList<user.User> userList60 = database42.users;
        database1.users = userList60;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = parkingSpot12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database18.load("hi!");
        java.util.ArrayList<user.User> userList28 = database18.users;
        database18.load("hi!");
        java.util.ArrayList<user.User> userList31 = database18.users;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList33 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        java.util.ArrayList<user.User> userList12 = database1.users;
        java.util.ArrayList<user.User> userList13 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = parkingSpot18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database12.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database27.users = userList45;
        database12.users = userList45;
        database1.users = userList45;
        database1.update("hi!");
        database.Database database52 = database.Database.getInstance("");
        database.Database database54 = database.Database.getInstance("hi!");
        user.User[] userArray55 = new user.User[] {};
        java.util.ArrayList<user.User> userList56 = new java.util.ArrayList<user.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<user.User>) userList56, userArray55);
        database54.users = userList56;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database54.users = userList61;
        database52.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        java.util.ArrayList<user.User> userList71 = database65.users;
        java.util.ArrayList<user.User> userList72 = database65.users;
        database65.load("hi!");
        java.util.ArrayList<user.User> userList75 = database65.users;
        database52.users = userList75;
        database52.load("hi!");
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        database80.users = userList84;
        java.util.ArrayList<user.User> userList86 = database80.users;
        database80.load("hi!");
        java.util.ArrayList<user.User> userList89 = database80.users;
        database52.users = userList89;
        database52.load("hi!");
        java.util.ArrayList<user.User> userList93 = database52.users;
        java.util.ArrayList<user.User> userList94 = database52.users;
        database1.users = userList94;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertArrayEquals(userArray55, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        database12.users = userList21;
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        java.util.ArrayList<user.User> userList28 = database25.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database25.users = userList34;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database38.users = userList48;
        database25.users = userList48;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        java.util.ArrayList<user.User> userList75 = database55.users;
        database25.users = userList75;
        database1.users = userList75;
        java.util.ArrayList<user.User> userList78 = database1.users;
        java.lang.Class<?> wildcardClass79 = userList78.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        java.util.ArrayList<user.User> userList43 = database38.users;
        database38.update("hi!");
        java.util.ArrayList<user.User> userList46 = database38.users;
        database1.users = userList46;
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database53.users = userList59;
        database49.users = userList59;
        java.util.ArrayList<user.User> userList64 = database49.users;
        java.util.ArrayList<user.User> userList65 = database49.users;
        database1.users = userList65;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList34 = database20.users;
        database16.users = userList34;
        database16.load("hi!");
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database39.load("hi!");
        database39.load("hi!");
        java.util.ArrayList<user.User> userList47 = database39.users;
        java.util.ArrayList<user.User> userList48 = database39.users;
        database16.users = userList48;
        database1.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        java.util.ArrayList<user.User> userList59 = database52.users;
        database52.load("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database52.users = userList63;
        java.util.ArrayList<user.User> userList66 = database52.users;
        database1.users = userList66;
        java.util.ArrayList<user.User> userList68 = database1.users;
        org.junit.Assert.assertNotNull(database1);
// flaky "7) test1162(RegressionTest2)":         org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
// flaky "4) test1162(RegressionTest2)":         org.junit.Assert.assertNull(userList5);
// flaky "4) test1162(RegressionTest2)":         org.junit.Assert.assertNull(userList7);
// flaky "4) test1162(RegressionTest2)":         org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database.Database database8 = database.Database.getInstance("hi!");
        user.User[] userArray9 = new user.User[] {};
        java.util.ArrayList<user.User> userList10 = new java.util.ArrayList<user.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<user.User>) userList10, userArray9);
        database8.users = userList10;
        java.util.ArrayList<user.User> userList13 = database8.users;
        database1.users = userList13;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertArrayEquals(userArray9, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList25 = database1.users;
        java.lang.Class<?> wildcardClass26 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database5.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database5.users = userList21;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database26.users = userList30;
        java.util.ArrayList<user.User> userList32 = database26.users;
        java.util.ArrayList<user.User> userList33 = database26.users;
        database5.users = userList33;
        database3.users = userList33;
        java.util.ArrayList<user.User> userList36 = database3.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        database42.users = userList51;
        database42.update("hi!");
        java.util.ArrayList<user.User> userList56 = database42.users;
        database38.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database59.users = userList69;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        database73.load("hi!");
        database73.update("hi!");
        database.Database database85 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        database73.users = userList87;
        database59.users = userList87;
        java.util.ArrayList<user.User> userList90 = database59.users;
        database38.users = userList90;
        java.util.ArrayList<user.User> userList92 = database38.users;
        database3.users = userList92;
        database1.users = userList92;
        java.lang.Class<?> wildcardClass95 = userList92.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        java.util.ArrayList<user.User> userList22 = database17.users;
        database17.update("hi!");
        database17.update("hi!");
        database17.load("hi!");
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        java.util.ArrayList<user.User> userList36 = database30.users;
        java.util.ArrayList<user.User> userList37 = database30.users;
        database30.load("hi!");
        java.util.ArrayList<user.User> userList40 = database30.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database42.load("hi!");
        database42.load("hi!");
        java.util.ArrayList<user.User> userList50 = database42.users;
        database30.users = userList50;
        database17.users = userList50;
        database1.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        database55.users = userList65;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        database69.load("hi!");
        database69.update("hi!");
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database69.users = userList83;
        database55.users = userList83;
        database1.users = userList83;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        java.util.ArrayList<user.User> userList52 = database1.users;
        java.lang.Class<?> wildcardClass53 = userList52.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        database26.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        database40.load("hi!");
        database40.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database40.users = userList54;
        database26.users = userList54;
        java.util.ArrayList<user.User> userList57 = database26.users;
        java.util.ArrayList<user.User> userList58 = database26.users;
        database1.users = userList58;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList62 = database1.users;
        java.lang.Class<?> wildcardClass63 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList14 = database1.users;
        database.Database database16 = database.Database.getInstance("");
        database.Database database18 = database.Database.getInstance("hi!");
        user.User[] userArray19 = new user.User[] {};
        java.util.ArrayList<user.User> userList20 = new java.util.ArrayList<user.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<user.User>) userList20, userArray19);
        database18.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database18.users = userList25;
        database16.users = userList25;
        java.util.ArrayList<user.User> userList28 = database16.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        java.util.ArrayList<user.User> userList40 = database37.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database37.users = userList46;
        database.Database database50 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database50.users = userList60;
        database37.users = userList60;
        database30.users = userList60;
        java.util.ArrayList<user.User> userList67 = database30.users;
        database16.users = userList67;
        database1.users = userList67;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertArrayEquals(userArray19, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList67);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        java.util.ArrayList<user.User> userList32 = database1.users;
        java.util.ArrayList<user.User> userList33 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = null;
        database1.users = userList18;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database21.users = userList32;
        database21.load("hi!");
        java.util.ArrayList<user.User> userList37 = database21.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        java.lang.Class<?> wildcardClass40 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNull(userList22);
        org.junit.Assert.assertNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass37 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        java.util.ArrayList<user.User> userList24 = database21.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database26.users = userList30;
        database21.users = userList30;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database34.users = userList44;
        database21.users = userList44;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database51.load("hi!");
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database51.users = userList67;
        java.util.ArrayList<user.User> userList71 = database51.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        java.util.ArrayList<user.User> userList75 = database73.users;
        java.util.ArrayList<user.User> userList76 = database73.users;
        java.util.ArrayList<user.User> userList77 = database73.users;
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database73.users = userList81;
        database51.users = userList81;
        java.util.ArrayList<user.User> userList86 = database51.users;
        database21.users = userList86;
        java.util.ArrayList<user.User> userList88 = database21.users;
        java.util.ArrayList<user.User> userList89 = database21.users;
        database1.users = userList89;
        java.util.ArrayList<user.User> userList91 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        java.util.ArrayList<user.User> userList61 = database53.users;
        java.util.ArrayList<user.User> userList62 = database53.users;
        database1.users = userList62;
        java.lang.Class<?> wildcardClass64 = userList62.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database1.users = userList13;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList29 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        database16.users = userList26;
        database16.load("hi!");
        database16.update("hi!");
        database.Database database34 = database.Database.getInstance("");
        database.Database database36 = database.Database.getInstance("hi!");
        user.User[] userArray37 = new user.User[] {};
        java.util.ArrayList<user.User> userList38 = new java.util.ArrayList<user.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<user.User>) userList38, userArray37);
        database36.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database36.users = userList43;
        database34.users = userList43;
        java.util.ArrayList<user.User> userList46 = database34.users;
        database.Database database48 = database.Database.getInstance("hi!");
        user.User[] userArray49 = new user.User[] {};
        java.util.ArrayList<user.User> userList50 = new java.util.ArrayList<user.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<user.User>) userList50, userArray49);
        database48.users = userList50;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database48.users = userList55;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        user.User[] userArray63 = new user.User[] {};
        java.util.ArrayList<user.User> userList64 = new java.util.ArrayList<user.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<user.User>) userList64, userArray63);
        database62.users = userList64;
        database58.users = userList64;
        database48.users = userList64;
        database34.users = userList64;
        java.util.ArrayList<user.User> userList70 = database34.users;
        database16.users = userList70;
        database1.users = userList70;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertArrayEquals(userArray37, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertArrayEquals(userArray49, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertArrayEquals(userArray63, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(userList70);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.lang.Class<?> wildcardClass20 = userList19.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass44 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList54 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        database1.load("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        java.util.ArrayList<user.User> userList22 = database19.users;
        database19.load("hi!");
        database.Database database26 = database.Database.getInstance("");
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database26.users = userList35;
        database19.users = userList35;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database40.users = userList51;
        database40.load("hi!");
        java.util.ArrayList<user.User> userList56 = database40.users;
        database19.users = userList56;
        database19.update("hi!");
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        java.util.ArrayList<user.User> userList74 = database72.users;
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database72.users = userList78;
        database72.load("hi!");
        java.util.ArrayList<user.User> userList84 = database72.users;
        database61.users = userList84;
        database19.users = userList84;
        database1.users = userList84;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        java.util.ArrayList<user.User> userList27 = database22.users;
        database22.update("hi!");
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        java.util.ArrayList<user.User> userList59 = database52.users;
        database31.users = userList59;
        database22.users = userList59;
        database.Database database63 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database22.users = userList64;
        database1.users = userList64;
        java.util.ArrayList<user.User> userList67 = database1.users;
        java.lang.Class<?> wildcardClass68 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        database1.users = userList37;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database15.users = userList21;
        database11.users = userList21;
        database1.users = userList21;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList29 = database1.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database1.users = userList47;
        java.lang.Class<?> wildcardClass53 = userList47.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        java.util.ArrayList<user.User> userList35 = database29.users;
        database29.load("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database29.users = userList39;
        java.util.ArrayList<user.User> userList42 = database29.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database.Database database63 = database.Database.getInstance("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database63.users = userList65;
        database59.users = userList65;
        database49.users = userList65;
        database45.users = userList65;
        database1.users = userList65;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        java.util.ArrayList<user.User> userList28 = database25.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database25.users = userList34;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database38.users = userList48;
        database25.users = userList48;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        java.util.ArrayList<user.User> userList75 = database55.users;
        database25.users = userList75;
        database1.users = userList75;
        database1.update("hi!");
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database.Database database85 = database.Database.getInstance("hi!");
        user.User[] userArray86 = new user.User[] {};
        java.util.ArrayList<user.User> userList87 = new java.util.ArrayList<user.User>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<user.User>) userList87, userArray86);
        database85.users = userList87;
        database81.users = userList87;
        database81.load("hi!");
        java.util.ArrayList<user.User> userList93 = database81.users;
        database1.users = userList93;
        java.lang.Class<?> wildcardClass95 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userArray86);
        org.junit.Assert.assertArrayEquals(userArray86, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        java.util.ArrayList<user.User> userList32 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        database12.users = userList21;
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        database12.load("hi!");
        database12.load("hi!");
        database12.load("hi!");
        java.util.ArrayList<user.User> userList30 = database12.users;
        database.Database database32 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList33 = database32.users;
        java.util.ArrayList<user.User> userList34 = database32.users;
        java.util.ArrayList<user.User> userList35 = database32.users;
        database32.update("hi!");
        database32.update("hi!");
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        java.util.ArrayList<user.User> userList59 = database52.users;
        database41.users = userList59;
        java.util.ArrayList<user.User> userList61 = database41.users;
        java.util.ArrayList<user.User> userList62 = database41.users;
        database41.update("hi!");
        database41.update("hi!");
        database.Database database68 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList69 = database68.users;
        java.util.ArrayList<user.User> userList70 = database68.users;
        java.util.ArrayList<user.User> userList71 = database68.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        database68.users = userList77;
        database68.update("hi!");
        java.util.ArrayList<user.User> userList82 = database68.users;
        java.util.ArrayList<user.User> userList83 = database68.users;
        java.util.ArrayList<user.User> userList84 = database68.users;
        database68.update("hi!");
        java.util.ArrayList<user.User> userList87 = database68.users;
        java.util.ArrayList<user.User> userList88 = database68.users;
        database41.users = userList88;
        database32.users = userList88;
        database12.users = userList88;
        database1.users = userList88;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList29 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        java.util.ArrayList<user.User> userList32 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database1.users = userList53;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        java.util.ArrayList<user.User> userList54 = database1.users;
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database60.users = userList66;
        database56.users = userList66;
        java.util.ArrayList<user.User> userList71 = database56.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        java.util.ArrayList<user.User> userList80 = database73.users;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        java.util.ArrayList<user.User> userList84 = database82.users;
        java.util.ArrayList<user.User> userList85 = database82.users;
        database73.users = userList85;
        database56.users = userList85;
        database1.users = userList85;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database1.load("hi!");
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database1.users = userList24;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database23.update("hi!");
        java.util.ArrayList<user.User> userList50 = database23.users;
        java.util.ArrayList<user.User> userList51 = database23.users;
        java.util.ArrayList<user.User> userList52 = database23.users;
        database23.load("hi!");
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        java.util.ArrayList<user.User> userList59 = database56.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        database56.users = userList65;
        database.Database database69 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList70 = database69.users;
        java.util.ArrayList<user.User> userList71 = database69.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        java.util.ArrayList<user.User> userList75 = database73.users;
        database.Database database77 = database.Database.getInstance("hi!");
        user.User[] userArray78 = new user.User[] {};
        java.util.ArrayList<user.User> userList79 = new java.util.ArrayList<user.User>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<user.User>) userList79, userArray78);
        database77.users = userList79;
        database73.users = userList79;
        database69.users = userList79;
        database56.users = userList79;
        database23.users = userList79;
        database1.users = userList79;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userArray78);
        org.junit.Assert.assertArrayEquals(userArray78, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        java.util.ArrayList<user.User> userList21 = database15.users;
        database15.load("hi!");
        database15.update("hi!");
        java.util.ArrayList<user.User> userList26 = database15.users;
        database1.users = userList26;
        database1.update("hi!");
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        database35.users = userList44;
        database35.update("hi!");
        java.util.ArrayList<user.User> userList49 = database35.users;
        database31.users = userList49;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        user.User[] userArray57 = new user.User[] {};
        java.util.ArrayList<user.User> userList58 = new java.util.ArrayList<user.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<user.User>) userList58, userArray57);
        database56.users = userList58;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database56.users = userList63;
        database52.users = userList63;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        database.Database database71 = database.Database.getInstance("hi!");
        user.User[] userArray72 = new user.User[] {};
        java.util.ArrayList<user.User> userList73 = new java.util.ArrayList<user.User>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<user.User>) userList73, userArray72);
        database71.users = userList73;
        database67.users = userList73;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database78.users = userList82;
        java.util.ArrayList<user.User> userList84 = database78.users;
        java.util.ArrayList<user.User> userList85 = database78.users;
        database67.users = userList85;
        database52.users = userList85;
        database31.users = userList85;
        database1.users = userList85;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertArrayEquals(userArray57, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userArray72);
        org.junit.Assert.assertArrayEquals(userArray72, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        java.util.ArrayList<user.User> userList20 = database17.users;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        database22.users = userList56;
        database17.users = userList56;
        java.util.ArrayList<user.User> userList60 = database17.users;
        java.util.ArrayList<user.User> userList61 = database17.users;
        database1.users = userList61;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        java.util.ArrayList<user.User> userList35 = database25.users;
        database12.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList47 = database38.users;
        database12.users = userList47;
        database1.users = userList47;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database55.users = userList62;
        database51.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        user.User[] userArray71 = new user.User[] {};
        java.util.ArrayList<user.User> userList72 = new java.util.ArrayList<user.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<user.User>) userList72, userArray71);
        database70.users = userList72;
        database66.users = userList72;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database77.users = userList81;
        java.util.ArrayList<user.User> userList83 = database77.users;
        java.util.ArrayList<user.User> userList84 = database77.users;
        database66.users = userList84;
        database51.users = userList84;
        database1.users = userList84;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertArrayEquals(userArray71, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        java.lang.Class<?> wildcardClass15 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database25.users = userList36;
        database1.users = userList36;
        java.util.ArrayList<user.User> userList40 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        java.util.ArrayList<user.User> userList21 = database15.users;
        database15.load("hi!");
        database15.update("hi!");
        java.util.ArrayList<user.User> userList26 = database15.users;
        database1.users = userList26;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList26);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList5 = database4.users;
        java.util.ArrayList<user.User> userList6 = database4.users;
        java.util.ArrayList<user.User> userList7 = database4.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database9.users = userList13;
        database4.users = userList13;
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database21.users = userList27;
        database17.users = userList27;
        database4.users = userList27;
        database1.users = userList27;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        database24.users = userList33;
        database24.update("hi!");
        java.util.ArrayList<user.User> userList38 = database24.users;
        java.util.ArrayList<user.User> userList39 = database24.users;
        java.util.ArrayList<user.User> userList40 = database24.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        java.util.ArrayList<user.User> userList49 = database46.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database51.users = userList55;
        database46.users = userList55;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        java.util.ArrayList<user.User> userList65 = database63.users;
        database.Database database67 = database.Database.getInstance("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database67.users = userList69;
        database63.users = userList69;
        database59.users = userList69;
        database46.users = userList69;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        database46.users = userList80;
        java.util.ArrayList<user.User> userList83 = database46.users;
        database42.users = userList83;
        database24.users = userList83;
        database1.users = userList83;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        java.util.ArrayList<user.User> userList18 = database11.users;
        database11.load("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database11.users = userList22;
        database.Database database26 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        java.util.ArrayList<user.User> userList33 = database30.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database30.users = userList39;
        database30.update("hi!");
        java.util.ArrayList<user.User> userList44 = database30.users;
        database26.users = userList44;
        database26.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        java.util.ArrayList<user.User> userList52 = database49.users;
        database49.load("hi!");
        database49.load("hi!");
        java.util.ArrayList<user.User> userList57 = database49.users;
        java.util.ArrayList<user.User> userList58 = database49.users;
        database26.users = userList58;
        database11.users = userList58;
        database1.users = userList58;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        database19.load("hi!");
        java.util.ArrayList<user.User> userList28 = database19.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database34.users = userList40;
        database30.users = userList40;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database46.users = userList62;
        database30.users = userList62;
        database19.users = userList62;
        database1.users = userList62;
        java.lang.Class<?> wildcardClass70 = userList62.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        java.util.ArrayList<user.User> userList16 = database12.users;
        java.util.ArrayList<user.User> userList17 = database12.users;
        database1.users = userList17;
        java.lang.Class<?> wildcardClass19 = userList17.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        java.util.ArrayList<user.User> userList12 = database8.users;
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database8.users = userList16;
        database8.update("hi!");
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database23.users = userList34;
        database23.load("hi!");
        java.util.ArrayList<user.User> userList39 = database23.users;
        java.util.ArrayList<user.User> userList40 = database23.users;
        database8.users = userList40;
        database1.users = userList40;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        java.util.ArrayList<user.User> userList43 = database38.users;
        database38.update("hi!");
        java.util.ArrayList<user.User> userList46 = database38.users;
        database1.users = userList46;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList50 = database1.users;
        java.lang.Class<?> wildcardClass51 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database23.users = userList27;
        java.util.ArrayList<user.User> userList29 = database23.users;
        java.util.ArrayList<user.User> userList30 = database23.users;
        database12.users = userList30;
        java.util.ArrayList<user.User> userList32 = database12.users;
        database12.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        database40.users = userList49;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database53.users = userList63;
        database40.users = userList63;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database70.users = userList74;
        database40.users = userList74;
        java.util.ArrayList<user.User> userList77 = database40.users;
        database36.users = userList77;
        database12.users = userList77;
        database.Database database81 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        java.util.ArrayList<user.User> userList84 = database81.users;
        database81.load("hi!");
        database81.load("hi!");
        java.util.ArrayList<user.User> userList89 = database81.users;
        database12.users = userList89;
        database1.users = userList89;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList89);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database13.load("hi!");
        database13.load("hi!");
        java.util.ArrayList<user.User> userList21 = database13.users;
        database1.users = userList21;
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database24.users = userList35;
        database24.load("hi!");
        java.util.ArrayList<user.User> userList40 = database24.users;
        database1.users = userList40;
        java.lang.Class<?> wildcardClass42 = userList40.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.util.ArrayList<user.User> userList20 = database1.users;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass23 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList83 = database1.users;
        java.util.ArrayList<user.User> userList84 = database1.users;
        java.util.ArrayList<user.User> userList85 = database1.users;
        java.util.ArrayList<user.User> userList86 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        database22.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        database36.load("hi!");
        database36.update("hi!");
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database36.users = userList50;
        database22.users = userList50;
        java.util.ArrayList<user.User> userList53 = database22.users;
        database1.users = userList53;
        java.util.ArrayList<user.User> userList55 = database1.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        java.util.ArrayList<user.User> userList60 = database57.users;
        java.util.ArrayList<user.User> userList61 = database57.users;
        java.util.ArrayList<user.User> userList62 = database57.users;
        database1.users = userList62;
        java.util.ArrayList<user.User> userList64 = database1.users;
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database1.users = userList66;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass71 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database1.load("hi!");
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database29.users = userList40;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database29.users = userList45;
        java.util.ArrayList<user.User> userList47 = database29.users;
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        java.util.ArrayList<user.User> userList54 = database49.users;
        database49.update("hi!");
        java.util.ArrayList<user.User> userList57 = database49.users;
        database29.users = userList57;
        database1.users = userList57;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database18.load("hi!");
        java.util.ArrayList<user.User> userList28 = database18.users;
        database18.load("hi!");
        java.util.ArrayList<user.User> userList31 = database18.users;
        database1.users = userList31;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList31);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        database31.load("hi!");
        java.util.ArrayList<user.User> userList40 = database31.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        java.util.ArrayList<user.User> userList46 = database42.users;
        java.util.ArrayList<user.User> userList47 = database42.users;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList49 = database31.users;
        database1.users = userList49;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database1.users = userList43;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database.Database database47 = database.Database.getInstance("hi!");
        user.User[] userArray48 = new user.User[] {};
        java.util.ArrayList<user.User> userList49 = new java.util.ArrayList<user.User>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<user.User>) userList49, userArray48);
        database47.users = userList49;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database47.users = userList54;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database57.users = userList64;
        database47.users = userList64;
        java.util.ArrayList<user.User> userList67 = database47.users;
        database47.load("hi!");
        database47.load("hi!");
        database47.update("hi!");
        java.util.ArrayList<user.User> userList74 = database47.users;
        database1.users = userList74;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userArray48);
        org.junit.Assert.assertArrayEquals(userArray48, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList74);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        java.util.ArrayList<user.User> userList54 = database1.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database56.users = userList60;
        java.util.ArrayList<user.User> userList62 = database56.users;
        database56.update("hi!");
        database.Database database66 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database66.users = userList76;
        database56.users = userList76;
        java.util.ArrayList<user.User> userList82 = database56.users;
        database1.users = userList82;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        java.lang.Class<?> wildcardClass13 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        database19.load("hi!");
        java.util.ArrayList<user.User> userList28 = database19.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database34.users = userList40;
        database30.users = userList40;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database46.users = userList62;
        database30.users = userList62;
        database19.users = userList62;
        database1.users = userList62;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass28 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database20.users = userList31;
        database20.load("hi!");
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        java.util.ArrayList<user.User> userList48 = database41.users;
        database41.load("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        user.User[] userArray57 = new user.User[] {};
        java.util.ArrayList<user.User> userList58 = new java.util.ArrayList<user.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<user.User>) userList58, userArray57);
        database56.users = userList58;
        database52.users = userList58;
        database52.load("hi!");
        java.util.ArrayList<user.User> userList64 = database52.users;
        database41.users = userList64;
        database1.users = userList64;
        database1.load("hi!");
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database74.users = userList81;
        database70.users = userList81;
        database.Database database85 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList86 = database85.users;
        database70.users = userList86;
        database1.users = userList86;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertArrayEquals(userArray57, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass17 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        java.util.ArrayList<user.User> userList47 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(userList47);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        java.util.ArrayList<user.User> userList12 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database1.users = userList23;
        java.util.ArrayList<user.User> userList26 = database1.users;
        database.Database database28 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        java.util.ArrayList<user.User> userList31 = database28.users;
        database28.load("hi!");
        database28.load("hi!");
        java.util.ArrayList<user.User> userList36 = database28.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        java.util.ArrayList<user.User> userList41 = database38.users;
        database38.load("hi!");
        database38.load("hi!");
        java.util.ArrayList<user.User> userList46 = database38.users;
        database28.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database1.users = userList59;
        org.junit.Assert.assertNotNull(database1);
// flaky "8) test1262(RegressionTest2)":         org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
// flaky "5) test1262(RegressionTest2)":         org.junit.Assert.assertNull(userList5);
// flaky "5) test1262(RegressionTest2)":         org.junit.Assert.assertNull(userList7);
// flaky "5) test1262(RegressionTest2)":         org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database40.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        java.util.ArrayList<user.User> userList71 = database61.users;
        database40.users = userList71;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        java.util.ArrayList<user.User> userList77 = database74.users;
        database40.users = userList77;
        database1.users = userList77;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        java.util.ArrayList<user.User> userList35 = database25.users;
        database12.users = userList35;
        database12.load("hi!");
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        database40.load("hi!");
        user.User[] userArray49 = new user.User[] {};
        java.util.ArrayList<user.User> userList50 = new java.util.ArrayList<user.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<user.User>) userList50, userArray49);
        database40.users = userList50;
        java.util.ArrayList<user.User> userList53 = database40.users;
        database12.users = userList53;
        database1.users = userList53;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertArrayEquals(userArray49, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        java.util.ArrayList<user.User> userList19 = database16.users;
        database16.load("hi!");
        database16.load("hi!");
        java.util.ArrayList<user.User> userList24 = database16.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        java.lang.Class<?> wildcardClass28 = userList27.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.lang.Class<?> wildcardClass13 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database17.users = userList34;
        java.util.ArrayList<user.User> userList37 = database17.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList42 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass45 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database1.users = userList53;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        java.lang.Class<?> wildcardClass15 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
// flaky "9) test1272(RegressionTest2)":         org.junit.Assert.assertNull(userList2);
// flaky "6) test1272(RegressionTest2)":         org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList25 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.lang.Class<?> wildcardClass29 = userList28.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList22 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList22);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database40.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        java.util.ArrayList<user.User> userList71 = database61.users;
        database40.users = userList71;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        java.util.ArrayList<user.User> userList77 = database74.users;
        database40.users = userList77;
        database1.users = userList77;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        java.util.ArrayList<user.User> userList52 = database46.users;
        java.util.ArrayList<user.User> userList53 = database46.users;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList56 = database46.users;
        database33.users = userList56;
        java.util.ArrayList<user.User> userList58 = database33.users;
        java.util.ArrayList<user.User> userList59 = database33.users;
        database1.users = userList59;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database62.users = userList66;
        java.util.ArrayList<user.User> userList68 = database62.users;
        database62.update("hi!");
        database.Database database72 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList73 = database72.users;
        java.util.ArrayList<user.User> userList74 = database72.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        java.util.ArrayList<user.User> userList78 = database76.users;
        database.Database database80 = database.Database.getInstance("hi!");
        user.User[] userArray81 = new user.User[] {};
        java.util.ArrayList<user.User> userList82 = new java.util.ArrayList<user.User>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<user.User>) userList82, userArray81);
        database80.users = userList82;
        database76.users = userList82;
        database72.users = userList82;
        database62.users = userList82;
        database1.users = userList82;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userArray81);
        org.junit.Assert.assertArrayEquals(userArray81, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        java.util.ArrayList<user.User> userList24 = database21.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database26.users = userList30;
        database21.users = userList30;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database34.users = userList44;
        database21.users = userList44;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database51.load("hi!");
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database51.users = userList67;
        java.util.ArrayList<user.User> userList71 = database51.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        java.util.ArrayList<user.User> userList75 = database73.users;
        java.util.ArrayList<user.User> userList76 = database73.users;
        java.util.ArrayList<user.User> userList77 = database73.users;
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database73.users = userList81;
        database51.users = userList81;
        java.util.ArrayList<user.User> userList86 = database51.users;
        database21.users = userList86;
        java.util.ArrayList<user.User> userList88 = database21.users;
        java.util.ArrayList<user.User> userList89 = database21.users;
        database1.users = userList89;
        java.util.ArrayList<user.User> userList91 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        java.util.ArrayList<user.User> userList61 = database53.users;
        java.util.ArrayList<user.User> userList62 = database53.users;
        database1.users = userList62;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        java.util.ArrayList<user.User> userList19 = database16.users;
        database16.load("hi!");
        database16.load("hi!");
        java.util.ArrayList<user.User> userList24 = database16.users;
        database1.users = userList24;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database1.users = userList14;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        database1.update("hi!");
        database1.load("hi!");
        java.lang.Class<?> wildcardClass25 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database24.users = userList41;
        java.util.ArrayList<user.User> userList44 = database24.users;
        database24.load("hi!");
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database48.users = userList52;
        database24.users = userList52;
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        java.util.ArrayList<user.User> userList59 = database56.users;
        database56.load("hi!");
        database.Database database63 = database.Database.getInstance("");
        database.Database database65 = database.Database.getInstance("hi!");
        user.User[] userArray66 = new user.User[] {};
        java.util.ArrayList<user.User> userList67 = new java.util.ArrayList<user.User>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<user.User>) userList67, userArray66);
        database65.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database65.users = userList72;
        database63.users = userList72;
        database56.users = userList72;
        java.util.ArrayList<user.User> userList76 = database56.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        java.util.ArrayList<user.User> userList81 = database78.users;
        java.util.ArrayList<user.User> userList82 = database78.users;
        database.Database database84 = database.Database.getInstance("hi!");
        user.User[] userArray85 = new user.User[] {};
        java.util.ArrayList<user.User> userList86 = new java.util.ArrayList<user.User>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<user.User>) userList86, userArray85);
        database84.users = userList86;
        database78.users = userList86;
        database56.users = userList86;
        database24.users = userList86;
        database.Database database93 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList94 = database93.users;
        database24.users = userList94;
        java.util.ArrayList<user.User> userList96 = database24.users;
        database1.users = userList96;
        java.lang.Class<?> wildcardClass98 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userArray66);
        org.junit.Assert.assertArrayEquals(userArray66, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userArray85);
        org.junit.Assert.assertArrayEquals(userArray85, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(database93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass19 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList16 = null;
        database1.users = userList16;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database37.users = userList43;
        database33.users = userList43;
        database20.users = userList43;
        java.util.ArrayList<user.User> userList49 = database20.users;
        java.util.ArrayList<user.User> userList50 = database20.users;
        java.util.ArrayList<user.User> userList51 = database20.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = parkingSpot14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database1.update("hi!");
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        java.util.ArrayList<user.User> userList50 = database43.users;
        database43.load("hi!");
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database54.load("hi!");
        java.util.ArrayList<user.User> userList66 = database54.users;
        database43.users = userList66;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database13.load("hi!");
        database13.load("hi!");
        java.util.ArrayList<user.User> userList21 = database13.users;
        database1.users = userList21;
        database1.load("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        java.util.ArrayList<user.User> userList22 = database19.users;
        database19.load("hi!");
        database.Database database26 = database.Database.getInstance("");
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database26.users = userList35;
        database19.users = userList35;
        java.util.ArrayList<user.User> userList39 = database19.users;
        database1.users = userList39;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = null;
        database1.users = userList15;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database18.load("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database18.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        java.util.ArrayList<user.User> userList40 = database37.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database37.users = userList46;
        database37.update("hi!");
        java.util.ArrayList<user.User> userList51 = database37.users;
        database33.users = userList51;
        database33.load("hi!");
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        java.util.ArrayList<user.User> userList59 = database56.users;
        database56.load("hi!");
        database56.load("hi!");
        java.util.ArrayList<user.User> userList64 = database56.users;
        java.util.ArrayList<user.User> userList65 = database56.users;
        database33.users = userList65;
        database18.users = userList65;
        database1.users = userList65;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNull(userList22);
        org.junit.Assert.assertNull(userList24);
        org.junit.Assert.assertNull(userList25);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        java.util.ArrayList<user.User> userList11 = database1.users;
        java.util.ArrayList<user.User> userList12 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.update("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        java.util.ArrayList<user.User> userList41 = database33.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        database43.update("hi!");
        java.util.ArrayList<user.User> userList52 = database43.users;
        database33.users = userList52;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList56 = database33.users;
        java.util.ArrayList<user.User> userList57 = database33.users;
        database1.users = userList57;
        java.lang.Class<?> wildcardClass59 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database15.users = userList21;
        database11.users = userList21;
        database1.users = userList21;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        database.Database database36 = database.Database.getInstance("");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database38.users = userList45;
        database36.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        java.util.ArrayList<user.User> userList55 = database49.users;
        java.util.ArrayList<user.User> userList56 = database49.users;
        database49.load("hi!");
        java.util.ArrayList<user.User> userList59 = database49.users;
        database36.users = userList59;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        java.util.ArrayList<user.User> userList65 = database62.users;
        java.util.ArrayList<user.User> userList66 = database62.users;
        database36.users = userList66;
        database28.users = userList66;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database17.users = userList34;
        java.util.ArrayList<user.User> userList37 = database17.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList42 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList45 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        java.lang.Class<?> wildcardClass56 = userList55.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        java.util.ArrayList<user.User> userList56 = database50.users;
        java.util.ArrayList<user.User> userList57 = database50.users;
        java.util.ArrayList<user.User> userList58 = database50.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database60.users = userList64;
        java.util.ArrayList<user.User> userList66 = database60.users;
        database60.update("hi!");
        java.util.ArrayList<user.User> userList69 = database60.users;
        database50.users = userList69;
        database1.users = userList69;
        java.util.ArrayList<user.User> userList72 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList72);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database17.users = userList34;
        java.util.ArrayList<user.User> userList37 = database17.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        java.lang.Class<?> wildcardClass40 = userList39.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.lang.Class<?> wildcardClass10 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        java.util.ArrayList<user.User> userList45 = database1.users;
        java.lang.Class<?> wildcardClass46 = userList45.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        java.util.ArrayList<user.User> userList35 = database25.users;
        database12.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList47 = database38.users;
        database12.users = userList47;
        database1.users = userList47;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database55.users = userList62;
        database51.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        user.User[] userArray71 = new user.User[] {};
        java.util.ArrayList<user.User> userList72 = new java.util.ArrayList<user.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<user.User>) userList72, userArray71);
        database70.users = userList72;
        database66.users = userList72;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database77.users = userList81;
        java.util.ArrayList<user.User> userList83 = database77.users;
        java.util.ArrayList<user.User> userList84 = database77.users;
        database66.users = userList84;
        database51.users = userList84;
        database1.users = userList84;
        java.util.ArrayList<user.User> userList88 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertArrayEquals(userArray71, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass13 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        java.lang.Class<?> wildcardClass9 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        java.util.ArrayList<user.User> userList43 = database38.users;
        database38.update("hi!");
        java.util.ArrayList<user.User> userList46 = database38.users;
        database1.users = userList46;
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database53.users = userList59;
        database49.users = userList59;
        java.util.ArrayList<user.User> userList64 = database49.users;
        java.util.ArrayList<user.User> userList65 = database49.users;
        database1.users = userList65;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database25.users = userList43;
        java.util.ArrayList<user.User> userList45 = database25.users;
        database25.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        database53.users = userList62;
        database.Database database66 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database66.users = userList76;
        database53.users = userList76;
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        database.Database database86 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList87 = database86.users;
        database83.users = userList87;
        database53.users = userList87;
        java.util.ArrayList<user.User> userList90 = database53.users;
        database49.users = userList90;
        database25.users = userList90;
        database1.users = userList90;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        database27.load("hi!");
        java.util.ArrayList<user.User> userList36 = database27.users;
        database1.users = userList36;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database15.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList37 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database20.users = userList31;
        database20.load("hi!");
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        java.lang.Class<?> wildcardClass39 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList26 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList26);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        database27.load("hi!");
        database27.update("hi!");
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database27.users = userList41;
        database1.users = userList41;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        database.Database database58 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        database.Database database66 = database.Database.getInstance("hi!");
        user.User[] userArray67 = new user.User[] {};
        java.util.ArrayList<user.User> userList68 = new java.util.ArrayList<user.User>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<user.User>) userList68, userArray67);
        database66.users = userList68;
        database62.users = userList68;
        database58.users = userList68;
        database45.users = userList68;
        database.Database database75 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList76 = database75.users;
        java.util.ArrayList<user.User> userList77 = database75.users;
        java.util.ArrayList<user.User> userList78 = database75.users;
        database75.load("hi!");
        database.Database database82 = database.Database.getInstance("");
        database.Database database84 = database.Database.getInstance("hi!");
        user.User[] userArray85 = new user.User[] {};
        java.util.ArrayList<user.User> userList86 = new java.util.ArrayList<user.User>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<user.User>) userList86, userArray85);
        database84.users = userList86;
        database.Database database90 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList91 = database90.users;
        database84.users = userList91;
        database82.users = userList91;
        database75.users = userList91;
        java.util.ArrayList<user.User> userList95 = database75.users;
        database45.users = userList95;
        java.util.ArrayList<user.User> userList97 = database45.users;
        java.util.ArrayList<user.User> userList98 = database45.users;
        database1.users = userList98;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userArray67);
        org.junit.Assert.assertArrayEquals(userArray67, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userArray85);
        org.junit.Assert.assertArrayEquals(userArray85, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(database90);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(userList97);
        org.junit.Assert.assertNotNull(userList98);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database1.load("hi!");
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database20.users = userList24;
        java.util.ArrayList<user.User> userList26 = database20.users;
        java.util.ArrayList<user.User> userList27 = database20.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database20.users = userList32;
        database1.users = userList32;
        java.lang.Class<?> wildcardClass35 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList32 = null;
        database19.users = userList32;
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database19.users = userList37;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database42.users = userList59;
        java.util.ArrayList<user.User> userList62 = database42.users;
        database42.load("hi!");
        database42.load("hi!");
        database42.update("hi!");
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database70.users = userList74;
        java.util.ArrayList<user.User> userList76 = database70.users;
        database70.update("hi!");
        database.Database database80 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList81 = database80.users;
        java.util.ArrayList<user.User> userList82 = database80.users;
        database.Database database84 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList85 = database84.users;
        java.util.ArrayList<user.User> userList86 = database84.users;
        database.Database database88 = database.Database.getInstance("hi!");
        user.User[] userArray89 = new user.User[] {};
        java.util.ArrayList<user.User> userList90 = new java.util.ArrayList<user.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<user.User>) userList90, userArray89);
        database88.users = userList90;
        database84.users = userList90;
        database80.users = userList90;
        database70.users = userList90;
        database42.users = userList90;
        database19.users = userList90;
        database1.users = userList90;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(database88);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertArrayEquals(userArray89, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.lang.Class<?> wildcardClass22 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database1.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        user.User[] userArray57 = new user.User[] {};
        java.util.ArrayList<user.User> userList58 = new java.util.ArrayList<user.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<user.User>) userList58, userArray57);
        database56.users = userList58;
        database52.users = userList58;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        java.util.ArrayList<user.User> userList69 = database63.users;
        java.util.ArrayList<user.User> userList70 = database63.users;
        database52.users = userList70;
        java.util.ArrayList<user.User> userList72 = database52.users;
        java.util.ArrayList<user.User> userList73 = database52.users;
        database52.update("hi!");
        database52.update("hi!");
        database52.load("hi!");
        java.util.ArrayList<user.User> userList80 = database52.users;
        database1.users = userList80;
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        database.Database database86 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList87 = database86.users;
        database83.users = userList87;
        java.util.ArrayList<user.User> userList89 = database83.users;
        java.util.ArrayList<user.User> userList90 = database83.users;
        database83.load("hi!");
        java.util.ArrayList<user.User> userList93 = database83.users;
        java.util.ArrayList<user.User> userList94 = database83.users;
        database1.users = userList94;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertArrayEquals(userArray57, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database1.users = userList17;
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        database27.users = userList36;
        database27.update("hi!");
        java.util.ArrayList<user.User> userList41 = database27.users;
        database23.users = userList41;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        java.util.ArrayList<user.User> userList47 = database44.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        database44.users = userList53;
        database.Database database57 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        java.util.ArrayList<user.User> userList63 = database61.users;
        database.Database database65 = database.Database.getInstance("hi!");
        user.User[] userArray66 = new user.User[] {};
        java.util.ArrayList<user.User> userList67 = new java.util.ArrayList<user.User>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<user.User>) userList67, userArray66);
        database65.users = userList67;
        database61.users = userList67;
        database57.users = userList67;
        database44.users = userList67;
        java.util.ArrayList<user.User> userList73 = database44.users;
        database23.users = userList73;
        database1.users = userList73;
        java.lang.Class<?> wildcardClass76 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userArray66);
        org.junit.Assert.assertArrayEquals(userArray66, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        java.util.ArrayList<user.User> userList15 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        java.util.ArrayList<user.User> userList52 = database46.users;
        java.util.ArrayList<user.User> userList53 = database46.users;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList56 = database46.users;
        database33.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        java.util.ArrayList<user.User> userList63 = database59.users;
        database33.users = userList63;
        database25.users = userList63;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database67.users = userList71;
        java.util.ArrayList<user.User> userList73 = database67.users;
        database67.load("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database67.users = userList77;
        database67.update("hi!");
        database67.update("hi!");
        java.util.ArrayList<user.User> userList84 = database67.users;
        database25.users = userList84;
        java.util.ArrayList<user.User> userList86 = database25.users;
        database1.users = userList86;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database.Database database21 = database.Database.getInstance("");
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database21.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        java.util.ArrayList<user.User> userList40 = database34.users;
        java.util.ArrayList<user.User> userList41 = database34.users;
        database34.load("hi!");
        java.util.ArrayList<user.User> userList44 = database34.users;
        database21.users = userList44;
        database21.load("hi!");
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        java.util.ArrayList<user.User> userList55 = database49.users;
        database49.load("hi!");
        java.util.ArrayList<user.User> userList58 = database49.users;
        database21.users = userList58;
        database21.load("hi!");
        java.util.ArrayList<user.User> userList62 = database21.users;
        java.util.ArrayList<user.User> userList63 = database21.users;
        database1.users = userList63;
        database.Database database66 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        java.util.ArrayList<user.User> userList69 = database66.users;
        database66.load("hi!");
        database66.load("hi!");
        java.util.ArrayList<user.User> userList74 = database66.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        database76.load("hi!");
        user.User[] userArray85 = new user.User[] {};
        java.util.ArrayList<user.User> userList86 = new java.util.ArrayList<user.User>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<user.User>) userList86, userArray85);
        database76.users = userList86;
        database76.update("hi!");
        database76.update("hi!");
        java.util.ArrayList<user.User> userList93 = database76.users;
        java.util.ArrayList<user.User> userList94 = database76.users;
        database66.users = userList94;
        database1.users = userList94;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userArray85);
        org.junit.Assert.assertArrayEquals(userArray85, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        database.Database database1 = database.Database.getInstance("");
        java.lang.Class<?> wildcardClass2 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = parkingSpot14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList83 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList12 = database1.users;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = null;
        database1.users = userList19;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        java.util.ArrayList<user.User> userList38 = database1.users;
        java.util.ArrayList<user.User> userList39 = database1.users;
        java.util.ArrayList<user.User> userList40 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.lang.Class<?> wildcardClass83 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database5.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database5.users = userList21;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database26.users = userList30;
        java.util.ArrayList<user.User> userList32 = database26.users;
        java.util.ArrayList<user.User> userList33 = database26.users;
        database5.users = userList33;
        database3.users = userList33;
        java.util.ArrayList<user.User> userList36 = database3.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        database42.users = userList51;
        database42.update("hi!");
        java.util.ArrayList<user.User> userList56 = database42.users;
        database38.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database59.users = userList69;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        database73.load("hi!");
        database73.update("hi!");
        database.Database database85 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        database73.users = userList87;
        database59.users = userList87;
        java.util.ArrayList<user.User> userList90 = database59.users;
        database38.users = userList90;
        java.util.ArrayList<user.User> userList92 = database38.users;
        database3.users = userList92;
        database1.users = userList92;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList92);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database20.users = userList31;
        database20.load("hi!");
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        java.util.ArrayList<user.User> userList50 = database41.users;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database52.users = userList62;
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        database.Database database82 = database.Database.getInstance("hi!");
        user.User[] userArray83 = new user.User[] {};
        java.util.ArrayList<user.User> userList84 = new java.util.ArrayList<user.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<user.User>) userList84, userArray83);
        database82.users = userList84;
        database78.users = userList84;
        database68.users = userList84;
        database52.users = userList84;
        database41.users = userList84;
        java.util.ArrayList<user.User> userList91 = database41.users;
        java.util.ArrayList<user.User> userList92 = database41.users;
        database1.users = userList92;
        java.util.ArrayList<user.User> userList94 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertArrayEquals(userArray83, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.load("hi!");
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        java.util.ArrayList<user.User> userList17 = database14.users;
        database14.load("hi!");
        database.Database database21 = database.Database.getInstance("");
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database21.users = userList30;
        database14.users = userList30;
        java.util.ArrayList<user.User> userList34 = database14.users;
        database.Database database36 = database.Database.getInstance("hi!");
        user.User[] userArray37 = new user.User[] {};
        java.util.ArrayList<user.User> userList38 = new java.util.ArrayList<user.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<user.User>) userList38, userArray37);
        database36.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database36.users = userList43;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database36.users = userList53;
        java.util.ArrayList<user.User> userList56 = database36.users;
        database14.users = userList56;
        database1.users = userList56;
        java.lang.Class<?> wildcardClass59 = userList56.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertArrayEquals(userArray37, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.lang.Class<?> wildcardClass20 = userList19.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        database1.update("hi!");
        database.Database database48 = database.Database.getInstance("hi!");
        user.User[] userArray49 = new user.User[] {};
        java.util.ArrayList<user.User> userList50 = new java.util.ArrayList<user.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<user.User>) userList50, userArray49);
        database48.users = userList50;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database54.users = userList58;
        database48.users = userList58;
        java.util.ArrayList<user.User> userList61 = null;
        database48.users = userList61;
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database48.users = userList66;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertArrayEquals(userArray49, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        java.util.ArrayList<user.User> userList31 = database28.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database33.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database40.users = userList49;
        database33.users = userList49;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database54.users = userList58;
        java.util.ArrayList<user.User> userList60 = database54.users;
        java.util.ArrayList<user.User> userList61 = database54.users;
        database33.users = userList61;
        database28.users = userList61;
        java.util.ArrayList<user.User> userList64 = database28.users;
        database1.users = userList64;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList64);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass28 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        java.util.ArrayList<user.User> userList20 = database17.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        database17.users = userList26;
        database17.update("hi!");
        java.util.ArrayList<user.User> userList31 = database17.users;
        java.util.ArrayList<user.User> userList32 = database17.users;
        database1.users = userList32;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        java.util.ArrayList<user.User> userList39 = database36.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        java.util.ArrayList<user.User> userList59 = database52.users;
        database41.users = userList59;
        database41.load("hi!");
        database41.load("hi!");
        database.Database database66 = database.Database.getInstance("hi!");
        user.User[] userArray67 = new user.User[] {};
        java.util.ArrayList<user.User> userList68 = new java.util.ArrayList<user.User>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<user.User>) userList68, userArray67);
        database66.users = userList68;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database66.users = userList73;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        java.util.ArrayList<user.User> userList78 = database76.users;
        database.Database database80 = database.Database.getInstance("hi!");
        user.User[] userArray81 = new user.User[] {};
        java.util.ArrayList<user.User> userList82 = new java.util.ArrayList<user.User>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<user.User>) userList82, userArray81);
        database80.users = userList82;
        database76.users = userList82;
        database66.users = userList82;
        database41.users = userList82;
        database36.users = userList82;
        database36.update("hi!");
        database36.load("hi!");
        java.util.ArrayList<user.User> userList93 = database36.users;
        database1.users = userList93;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userArray67);
        org.junit.Assert.assertArrayEquals(userArray67, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userArray81);
        org.junit.Assert.assertArrayEquals(userArray81, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(userList93);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        java.util.ArrayList<user.User> userList33 = database30.users;
        database30.load("hi!");
        database.Database database37 = database.Database.getInstance("");
        database.Database database39 = database.Database.getInstance("hi!");
        user.User[] userArray40 = new user.User[] {};
        java.util.ArrayList<user.User> userList41 = new java.util.ArrayList<user.User>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<user.User>) userList41, userArray40);
        database39.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database39.users = userList46;
        database37.users = userList46;
        database30.users = userList46;
        java.util.ArrayList<user.User> userList50 = database30.users;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database.Database database62 = database.Database.getInstance("hi!");
        user.User[] userArray63 = new user.User[] {};
        java.util.ArrayList<user.User> userList64 = new java.util.ArrayList<user.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<user.User>) userList64, userArray63);
        database62.users = userList64;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database62.users = userList69;
        database52.users = userList69;
        java.util.ArrayList<user.User> userList72 = database52.users;
        database30.users = userList72;
        database20.users = userList72;
        java.util.ArrayList<user.User> userList75 = database20.users;
        database1.users = userList75;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userArray40);
        org.junit.Assert.assertArrayEquals(userArray40, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertArrayEquals(userArray63, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList75);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database17.users = userList33;
        database1.users = userList33;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        java.util.ArrayList<user.User> userList44 = database40.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database40.users = userList48;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList57 = database40.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        java.util.ArrayList<user.User> userList65 = database60.users;
        database60.update("hi!");
        database60.update("hi!");
        java.util.ArrayList<user.User> userList70 = database60.users;
        database1.users = userList70;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList70);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        database22.users = userList32;
        java.util.ArrayList<user.User> userList35 = database22.users;
        java.util.ArrayList<user.User> userList36 = database22.users;
        database1.users = userList36;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database12.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database27.users = userList45;
        database12.users = userList45;
        database1.users = userList45;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = parkingSpot22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        java.util.ArrayList<user.User> userList21 = database15.users;
        database15.load("hi!");
        database15.update("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database15.users = userList29;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList32 = database1.users;
        java.lang.Class<?> wildcardClass33 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.lang.Class<?> wildcardClass16 = userList15.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        java.util.ArrayList<user.User> userList32 = database24.users;
        java.util.ArrayList<user.User> userList33 = database24.users;
        database1.users = userList33;
        java.util.ArrayList<user.User> userList35 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        java.util.ArrayList<user.User> userList32 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList35 = database1.users;
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database37.users = userList48;
        database1.users = userList48;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.lang.Class<?> wildcardClass17 = userList16.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database15.users = userList21;
        database11.users = userList21;
        database1.users = userList21;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        database.Database database36 = database.Database.getInstance("");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database38.users = userList45;
        database36.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        java.util.ArrayList<user.User> userList55 = database49.users;
        java.util.ArrayList<user.User> userList56 = database49.users;
        database49.load("hi!");
        java.util.ArrayList<user.User> userList59 = database49.users;
        database36.users = userList59;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        java.util.ArrayList<user.User> userList65 = database62.users;
        java.util.ArrayList<user.User> userList66 = database62.users;
        database36.users = userList66;
        database28.users = userList66;
        database1.users = userList66;
        java.util.ArrayList<user.User> userList70 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database23.load("hi!");
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database28.users = userList46;
        database23.users = userList46;
        database1.users = userList46;
        java.util.ArrayList<user.User> userList50 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database25.users = userList36;
        database1.users = userList36;
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList14 = database1.users;
        java.lang.Class<?> wildcardClass15 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        java.util.ArrayList<user.User> userList54 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass15 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        database15.users = userList25;
        java.util.ArrayList<user.User> userList28 = null;
        database15.users = userList28;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database31.users = userList48;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database15.users = userList51;
        database1.users = userList51;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database55.load("hi!");
        java.util.ArrayList<user.User> userList63 = database55.users;
        database55.update("hi!");
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database67.users = userList71;
        java.util.ArrayList<user.User> userList73 = database67.users;
        java.util.ArrayList<user.User> userList74 = database67.users;
        database55.users = userList74;
        java.util.ArrayList<user.User> userList76 = database55.users;
        database1.users = userList76;
        java.lang.Class<?> wildcardClass78 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        java.util.ArrayList<user.User> userList61 = database53.users;
        java.util.ArrayList<user.User> userList62 = database53.users;
        database1.users = userList62;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        java.util.ArrayList<user.User> userList67 = database65.users;
        database.Database database69 = database.Database.getInstance("hi!");
        user.User[] userArray70 = new user.User[] {};
        java.util.ArrayList<user.User> userList71 = new java.util.ArrayList<user.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<user.User>) userList71, userArray70);
        database69.users = userList71;
        database65.users = userList71;
        database1.users = userList71;
        java.util.ArrayList<user.User> userList76 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertArrayEquals(userArray70, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        java.util.ArrayList<user.User> userList61 = database53.users;
        java.util.ArrayList<user.User> userList62 = database53.users;
        database1.users = userList62;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        java.util.ArrayList<user.User> userList43 = database38.users;
        database38.update("hi!");
        java.util.ArrayList<user.User> userList46 = database38.users;
        database1.users = userList46;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList50 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database1.users = userList53;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList57 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot23 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.util.ArrayList<user.User> userList20 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database13.users = userList30;
        java.util.ArrayList<user.User> userList33 = database13.users;
        database13.load("hi!");
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        java.util.ArrayList<user.User> userList40 = database37.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database37.users = userList46;
        database.Database database50 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database50.users = userList60;
        database37.users = userList60;
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        java.util.ArrayList<user.User> userList87 = database67.users;
        database37.users = userList87;
        database13.users = userList87;
        database1.users = userList87;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList87);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList38 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList37 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database1.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database24.users = userList41;
        java.util.ArrayList<user.User> userList44 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        database24.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        database52.update("hi!");
        database.Database database62 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        user.User[] userArray71 = new user.User[] {};
        java.util.ArrayList<user.User> userList72 = new java.util.ArrayList<user.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<user.User>) userList72, userArray71);
        database70.users = userList72;
        database66.users = userList72;
        database62.users = userList72;
        database52.users = userList72;
        database24.users = userList72;
        database1.users = userList72;
        java.lang.Class<?> wildcardClass80 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertArrayEquals(userArray71, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        java.util.ArrayList<user.User> userList35 = database25.users;
        database12.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList47 = database38.users;
        database12.users = userList47;
        database1.users = userList47;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database55.users = userList62;
        database51.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        user.User[] userArray71 = new user.User[] {};
        java.util.ArrayList<user.User> userList72 = new java.util.ArrayList<user.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<user.User>) userList72, userArray71);
        database70.users = userList72;
        database66.users = userList72;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database77.users = userList81;
        java.util.ArrayList<user.User> userList83 = database77.users;
        java.util.ArrayList<user.User> userList84 = database77.users;
        database66.users = userList84;
        database51.users = userList84;
        database1.users = userList84;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertArrayEquals(userArray71, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database.Database database36 = database.Database.getInstance("hi!");
        user.User[] userArray37 = new user.User[] {};
        java.util.ArrayList<user.User> userList38 = new java.util.ArrayList<user.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<user.User>) userList38, userArray37);
        database36.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList49 = database36.users;
        database1.users = userList49;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        database52.load("hi!");
        database52.update("hi!");
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database52.users = userList66;
        database52.load("hi!");
        database.Database database71 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList72 = database71.users;
        java.util.ArrayList<user.User> userList73 = database71.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        java.util.ArrayList<user.User> userList77 = database75.users;
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database75.users = userList81;
        database71.users = userList81;
        java.util.ArrayList<user.User> userList86 = database71.users;
        java.util.ArrayList<user.User> userList87 = database71.users;
        java.util.ArrayList<user.User> userList88 = database71.users;
        database52.users = userList88;
        database1.users = userList88;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertArrayEquals(userArray37, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass23 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        java.util.ArrayList<user.User> userList24 = database21.users;
        database21.load("hi!");
        database.Database database28 = database.Database.getInstance("");
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database30.users = userList37;
        database28.users = userList37;
        database21.users = userList37;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        java.util.ArrayList<user.User> userList49 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList52 = database42.users;
        database21.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database76.load("hi!");
        java.util.ArrayList<user.User> userList86 = database76.users;
        database55.users = userList86;
        java.util.ArrayList<user.User> userList88 = database55.users;
        database21.users = userList88;
        database1.users = userList88;
        java.lang.Class<?> wildcardClass91 = userList88.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        java.lang.Class<?> wildcardClass23 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database20.load("hi!");
        database.Database database27 = database.Database.getInstance("");
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database29.users = userList36;
        database27.users = userList36;
        database20.users = userList36;
        java.util.ArrayList<user.User> userList40 = database20.users;
        database20.update("hi!");
        database20.load("hi!");
        java.util.ArrayList<user.User> userList45 = database20.users;
        database1.users = userList45;
        java.util.ArrayList<user.User> userList47 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        database27.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        database41.update("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database41.users = userList55;
        database27.users = userList55;
        java.util.ArrayList<user.User> userList58 = database27.users;
        java.util.ArrayList<user.User> userList59 = database27.users;
        database1.users = userList59;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList34 = database1.users;
        java.util.ArrayList<user.User> userList35 = database1.users;
        java.util.ArrayList<user.User> userList36 = database1.users;
        java.util.ArrayList<user.User> userList37 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass20 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database11.users = userList29;
        java.util.ArrayList<user.User> userList31 = database11.users;
        database11.load("hi!");
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database44.users = userList48;
        database39.users = userList48;
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database56.users = userList62;
        database52.users = userList62;
        database39.users = userList62;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        database39.users = userList73;
        java.util.ArrayList<user.User> userList76 = database39.users;
        database35.users = userList76;
        database11.users = userList76;
        database.Database database80 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList81 = database80.users;
        java.util.ArrayList<user.User> userList82 = database80.users;
        java.util.ArrayList<user.User> userList83 = database80.users;
        database80.load("hi!");
        database80.load("hi!");
        java.util.ArrayList<user.User> userList88 = database80.users;
        database11.users = userList88;
        database1.users = userList88;
        java.lang.Class<?> wildcardClass91 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database13.load("hi!");
        database13.load("hi!");
        java.util.ArrayList<user.User> userList21 = database13.users;
        database1.users = userList21;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList29 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        java.util.ArrayList<user.User> userList26 = database23.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database40.users = userList46;
        database36.users = userList46;
        database23.users = userList46;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        database23.users = userList57;
        java.util.ArrayList<user.User> userList60 = database23.users;
        database19.users = userList60;
        database1.users = userList60;
        java.util.ArrayList<user.User> userList63 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList63);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        database47.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database47.users = userList61;
        database33.users = userList61;
        database1.users = userList61;
        java.util.ArrayList<user.User> userList65 = database1.users;
        database.Database database67 = database.Database.getInstance("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database67.users = userList69;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        database67.users = userList77;
        database67.load("hi!");
        java.util.ArrayList<user.User> userList82 = database67.users;
        database1.users = userList82;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        java.util.ArrayList<user.User> userList45 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList30 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList39 = null;
        database1.users = userList39;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList18);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database1.users = userList50;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList57 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database10.load("hi!");
        java.util.ArrayList<user.User> userList18 = database10.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database37.users = userList43;
        database33.users = userList43;
        database20.users = userList43;
        database.Database database50 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database50.load("hi!");
        database.Database database57 = database.Database.getInstance("");
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database59.users = userList66;
        database57.users = userList66;
        database50.users = userList66;
        java.util.ArrayList<user.User> userList70 = database50.users;
        database20.users = userList70;
        database10.users = userList70;
        database1.users = userList70;
        java.lang.Class<?> wildcardClass74 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        database33.users = userList42;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList47 = database33.users;
        database29.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList50 = database1.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        database52.load("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database52.users = userList62;
        database52.update("hi!");
        database52.update("hi!");
        java.util.ArrayList<user.User> userList69 = database52.users;
        java.util.ArrayList<user.User> userList70 = database52.users;
        database52.update("hi!");
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        database.Database database82 = database.Database.getInstance("hi!");
        user.User[] userArray83 = new user.User[] {};
        java.util.ArrayList<user.User> userList84 = new java.util.ArrayList<user.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<user.User>) userList84, userArray83);
        database82.users = userList84;
        database78.users = userList84;
        database74.users = userList84;
        database74.update("hi!");
        java.util.ArrayList<user.User> userList91 = database74.users;
        database52.users = userList91;
        database1.users = userList91;
        java.util.ArrayList<user.User> userList94 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertArrayEquals(userArray83, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        database1.load("hi!");
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database26.users = userList32;
        database22.users = userList32;
        java.util.ArrayList<user.User> userList37 = database22.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        java.util.ArrayList<user.User> userList51 = database48.users;
        database39.users = userList51;
        database22.users = userList51;
        database22.update("hi!");
        database22.load("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        java.util.ArrayList<user.User> userList64 = database59.users;
        database59.update("hi!");
        java.util.ArrayList<user.User> userList67 = database59.users;
        database22.users = userList67;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        database.Database database78 = database.Database.getInstance("hi!");
        user.User[] userArray79 = new user.User[] {};
        java.util.ArrayList<user.User> userList80 = new java.util.ArrayList<user.User>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<user.User>) userList80, userArray79);
        database78.users = userList80;
        database74.users = userList80;
        database70.users = userList80;
        java.util.ArrayList<user.User> userList85 = database70.users;
        java.util.ArrayList<user.User> userList86 = database70.users;
        database22.users = userList86;
        database1.users = userList86;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userArray79);
        org.junit.Assert.assertArrayEquals(userArray79, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database33.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database40.users = userList49;
        database33.users = userList49;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        java.util.ArrayList<user.User> userList59 = database55.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database55.users = userList63;
        database33.users = userList63;
        database1.users = userList63;
        java.lang.Class<?> wildcardClass69 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList37 = database1.users;
        java.lang.Class<?> wildcardClass38 = userList37.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database22.users = userList29;
        database.Database database32 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList33 = database32.users;
        java.util.ArrayList<user.User> userList34 = database32.users;
        database.Database database36 = database.Database.getInstance("hi!");
        user.User[] userArray37 = new user.User[] {};
        java.util.ArrayList<user.User> userList38 = new java.util.ArrayList<user.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<user.User>) userList38, userArray37);
        database36.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database36.users = userList43;
        database32.users = userList43;
        database32.load("hi!");
        java.util.ArrayList<user.User> userList48 = database32.users;
        database32.load("hi!");
        java.util.ArrayList<user.User> userList51 = database32.users;
        database22.users = userList51;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList54 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertArrayEquals(userArray37, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        java.util.ArrayList<user.User> userList14 = database11.users;
        database11.load("hi!");
        database11.load("hi!");
        java.util.ArrayList<user.User> userList19 = database11.users;
        database1.users = userList19;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        database1.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        database.Database database43 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList44 = database43.users;
        java.util.ArrayList<user.User> userList45 = database43.users;
        java.util.ArrayList<user.User> userList46 = database43.users;
        database43.load("hi!");
        database.Database database50 = database.Database.getInstance("");
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database50.users = userList59;
        database43.users = userList59;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database64.users = userList68;
        java.util.ArrayList<user.User> userList70 = database64.users;
        java.util.ArrayList<user.User> userList71 = database64.users;
        database43.users = userList71;
        database41.users = userList71;
        java.util.ArrayList<user.User> userList74 = database41.users;
        java.util.ArrayList<user.User> userList75 = database41.users;
        java.util.ArrayList<user.User> userList76 = database41.users;
        database1.users = userList76;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        java.lang.Class<?> wildcardClass17 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = parkingSpot22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database.Database database32 = database.Database.getInstance("");
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database32.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        java.util.ArrayList<user.User> userList52 = database45.users;
        database45.load("hi!");
        java.util.ArrayList<user.User> userList55 = database45.users;
        database32.users = userList55;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        java.util.ArrayList<user.User> userList64 = database58.users;
        database58.load("hi!");
        java.util.ArrayList<user.User> userList67 = database58.users;
        database32.users = userList67;
        database1.users = userList67;
        java.util.ArrayList<user.User> userList70 = database1.users;
        java.util.ArrayList<user.User> userList71 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database19.users = userList25;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        java.util.ArrayList<user.User> userList36 = database30.users;
        java.util.ArrayList<user.User> userList37 = database30.users;
        database19.users = userList37;
        java.util.ArrayList<user.User> userList39 = database19.users;
        java.util.ArrayList<user.User> userList40 = database19.users;
        database19.update("hi!");
        database.Database database44 = database.Database.getInstance("");
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database44.users = userList53;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database57.users = userList61;
        java.util.ArrayList<user.User> userList63 = database57.users;
        java.util.ArrayList<user.User> userList64 = database57.users;
        database57.load("hi!");
        java.util.ArrayList<user.User> userList67 = database57.users;
        database44.users = userList67;
        database44.load("hi!");
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        database72.load("hi!");
        java.util.ArrayList<user.User> userList81 = database72.users;
        database44.users = userList81;
        database19.users = userList81;
        database1.users = userList81;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database13.users = userList30;
        java.util.ArrayList<user.User> userList33 = database13.users;
        database.Database database35 = database.Database.getInstance("");
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database37.users = userList44;
        database35.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database48.users = userList52;
        java.util.ArrayList<user.User> userList54 = database48.users;
        java.util.ArrayList<user.User> userList55 = database48.users;
        database48.load("hi!");
        java.util.ArrayList<user.User> userList58 = database48.users;
        database35.users = userList58;
        database13.users = userList58;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database62.users = userList66;
        java.util.ArrayList<user.User> userList68 = database62.users;
        java.util.ArrayList<user.User> userList69 = database62.users;
        java.util.ArrayList<user.User> userList70 = database62.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        database72.update("hi!");
        java.util.ArrayList<user.User> userList81 = database72.users;
        database62.users = userList81;
        database13.users = userList81;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList85 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList85);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList12 = database1.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        java.util.ArrayList<user.User> userList26 = database23.users;
        database14.users = userList26;
        database1.users = userList26;
        java.lang.Class<?> wildcardClass29 = userList26.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database15.users = userList45;
        java.util.ArrayList<user.User> userList52 = database15.users;
        database1.users = userList52;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        database17.users = userList23;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        java.util.ArrayList<user.User> userList35 = database28.users;
        database17.users = userList35;
        java.util.ArrayList<user.User> userList37 = database17.users;
        java.util.ArrayList<user.User> userList38 = database17.users;
        database17.update("hi!");
        database17.load("hi!");
        java.util.ArrayList<user.User> userList43 = database17.users;
        database1.users = userList43;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList43);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database15.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList37 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        database55.load("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database55.users = userList65;
        database1.users = userList65;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database74.users = userList81;
        database70.users = userList81;
        database.Database database85 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList86 = database85.users;
        database70.users = userList86;
        database1.users = userList86;
        java.lang.Class<?> wildcardClass89 = userList86.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList21 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList12 = database1.users;
        database.Database database14 = database.Database.getInstance("");
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database14.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database27.load("hi!");
        java.util.ArrayList<user.User> userList37 = database27.users;
        database14.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        java.util.ArrayList<user.User> userList44 = database40.users;
        database14.users = userList44;
        database1.users = userList44;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass18 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList18 = null;
        database1.users = userList18;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        database27.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        database41.update("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database41.users = userList55;
        database27.users = userList55;
        java.util.ArrayList<user.User> userList58 = database27.users;
        java.util.ArrayList<user.User> userList59 = database27.users;
        database1.users = userList59;
        java.lang.Class<?> wildcardClass61 = userList59.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        database53.users = userList63;
        database53.load("hi!");
        java.util.ArrayList<user.User> userList68 = database53.users;
        database1.users = userList68;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        database12.users = userList21;
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        java.util.ArrayList<user.User> userList49 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList52 = database42.users;
        database29.users = userList52;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        java.util.ArrayList<user.User> userList59 = database55.users;
        database29.users = userList59;
        java.util.ArrayList<user.User> userList61 = database29.users;
        database1.users = userList61;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database60.users = userList64;
        database55.users = userList64;
        database55.update("hi!");
        java.util.ArrayList<user.User> userList69 = database55.users;
        java.util.ArrayList<user.User> userList70 = database55.users;
        java.util.ArrayList<user.User> userList71 = database55.users;
        database1.users = userList71;
        java.util.ArrayList<user.User> userList73 = database1.users;
        java.util.ArrayList<user.User> userList74 = null;
        database1.users = userList74;
        java.util.ArrayList<user.User> userList76 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNull(userList76);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList10 = database9.users;
        java.util.ArrayList<user.User> userList11 = database9.users;
        java.util.ArrayList<user.User> userList12 = database9.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        database9.users = userList18;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database26.users = userList32;
        database22.users = userList32;
        database9.users = userList32;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database9.users = userList43;
        java.util.ArrayList<user.User> userList46 = database9.users;
        database5.users = userList46;
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        java.util.ArrayList<user.User> userList52 = database49.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database54.users = userList58;
        database49.users = userList58;
        java.util.ArrayList<user.User> userList61 = database49.users;
        database5.users = userList61;
        database.Database database64 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        java.util.ArrayList<user.User> userList67 = database64.users;
        database64.update("hi!");
        database.Database database71 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList72 = database71.users;
        java.util.ArrayList<user.User> userList73 = database71.users;
        java.util.ArrayList<user.User> userList74 = database71.users;
        database71.load("hi!");
        database.Database database78 = database.Database.getInstance("");
        database.Database database80 = database.Database.getInstance("hi!");
        user.User[] userArray81 = new user.User[] {};
        java.util.ArrayList<user.User> userList82 = new java.util.ArrayList<user.User>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<user.User>) userList82, userArray81);
        database80.users = userList82;
        database.Database database86 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList87 = database86.users;
        database80.users = userList87;
        database78.users = userList87;
        database71.users = userList87;
        database64.users = userList87;
        database5.users = userList87;
        java.util.ArrayList<user.User> userList93 = database5.users;
        user.User[] userArray94 = new user.User[] {};
        java.util.ArrayList<user.User> userList95 = new java.util.ArrayList<user.User>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<user.User>) userList95, userArray94);
        database5.users = userList95;
        database1.users = userList95;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNull(userList10);
        org.junit.Assert.assertNull(userList11);
        org.junit.Assert.assertNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNull(userList23);
        org.junit.Assert.assertNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNull(userList27);
        org.junit.Assert.assertNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userArray81);
        org.junit.Assert.assertArrayEquals(userArray81, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userArray94);
        org.junit.Assert.assertArrayEquals(userArray94, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database30.users = userList40;
        database30.update("hi!");
        java.util.ArrayList<user.User> userList45 = database30.users;
        database1.users = userList45;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        database.Database database48 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        java.util.ArrayList<user.User> userList51 = database48.users;
        database48.load("hi!");
        database.Database database55 = database.Database.getInstance("");
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database57.users = userList64;
        database55.users = userList64;
        database48.users = userList64;
        java.util.ArrayList<user.User> userList68 = database48.users;
        database1.users = userList68;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList72 = null;
        database1.users = userList72;
        java.lang.Class<?> wildcardClass74 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList83 = database1.users;
        java.util.ArrayList<user.User> userList84 = database1.users;
        java.lang.Class<?> wildcardClass85 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList16 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList16);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.update("hi!");
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        database60.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList89 = database1.users;
        java.lang.Class<?> wildcardClass90 = userList89.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database20.users = userList31;
        database20.load("hi!");
        java.util.ArrayList<user.User> userList36 = database20.users;
        java.util.ArrayList<user.User> userList37 = database20.users;
        database1.users = userList37;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList41 = database1.users;
        java.util.ArrayList<user.User> userList42 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList21 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        java.lang.Class<?> wildcardClass52 = userList48.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList39 = null;
        database1.users = userList39;
        java.lang.Class<?> wildcardClass41 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database.Database database36 = database.Database.getInstance("hi!");
        user.User[] userArray37 = new user.User[] {};
        java.util.ArrayList<user.User> userList38 = new java.util.ArrayList<user.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<user.User>) userList38, userArray37);
        database36.users = userList38;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList49 = database36.users;
        database1.users = userList49;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        java.util.ArrayList<user.User> userList58 = database52.users;
        database52.load("hi!");
        database52.update("hi!");
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database52.users = userList66;
        database52.load("hi!");
        database.Database database71 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList72 = database71.users;
        java.util.ArrayList<user.User> userList73 = database71.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        java.util.ArrayList<user.User> userList77 = database75.users;
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database75.users = userList81;
        database71.users = userList81;
        java.util.ArrayList<user.User> userList86 = database71.users;
        java.util.ArrayList<user.User> userList87 = database71.users;
        java.util.ArrayList<user.User> userList88 = database71.users;
        database52.users = userList88;
        database1.users = userList88;
        java.lang.Class<?> wildcardClass91 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertArrayEquals(userArray37, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database5.users = userList22;
        java.util.ArrayList<user.User> userList25 = database5.users;
        database5.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        database5.users = userList79;
        database1.users = userList79;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database1.load("hi!");
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database34.users = userList43;
        database.Database database47 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList48 = database47.users;
        java.util.ArrayList<user.User> userList49 = database47.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database51.users = userList57;
        database47.users = userList57;
        database34.users = userList57;
        database1.users = userList57;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList34 = database1.users;
        java.util.ArrayList<user.User> userList35 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        java.util.ArrayList<user.User> userList14 = database11.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        database16.load("hi!");
        database16.load("hi!");
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database51.users = userList57;
        database41.users = userList57;
        database16.users = userList57;
        database11.users = userList57;
        database1.users = userList57;
        java.lang.Class<?> wildcardClass65 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.load("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        java.util.ArrayList<user.User> userList19 = database16.users;
        database16.load("hi!");
        database16.load("hi!");
        java.util.ArrayList<user.User> userList24 = database16.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database33.users = userList39;
        database29.users = userList39;
        database29.update("hi!");
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        java.util.ArrayList<user.User> userList56 = database47.users;
        database.Database database58 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        database.Database database66 = database.Database.getInstance("hi!");
        user.User[] userArray67 = new user.User[] {};
        java.util.ArrayList<user.User> userList68 = new java.util.ArrayList<user.User>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<user.User>) userList68, userArray67);
        database66.users = userList68;
        database62.users = userList68;
        database58.users = userList68;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database74.users = userList81;
        database.Database database84 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList85 = database84.users;
        java.util.ArrayList<user.User> userList86 = database84.users;
        database.Database database88 = database.Database.getInstance("hi!");
        user.User[] userArray89 = new user.User[] {};
        java.util.ArrayList<user.User> userList90 = new java.util.ArrayList<user.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<user.User>) userList90, userArray89);
        database88.users = userList90;
        database84.users = userList90;
        database74.users = userList90;
        database58.users = userList90;
        database47.users = userList90;
        database29.users = userList90;
        database1.users = userList90;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userArray67);
        org.junit.Assert.assertArrayEquals(userArray67, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(database88);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertArrayEquals(userArray89, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList18);
    }
}
