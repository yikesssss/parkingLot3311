package rando.database;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
// flaky "1) test1502(RegressionTest3)":         database1.load("hi!");
// flaky "1) test1502(RegressionTest3)":         database1.load("hi!");
// flaky "1) test1502(RegressionTest3)":         database1.load("hi!");
// flaky "1) test1502(RegressionTest3)":         database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.util.ArrayList<user.User> userList20 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList12 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList12);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.load("hi!");
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList23 = null;
        database14.users = userList23;
        database14.load("hi!");
        database14.load("hi!");
        database.Database database30 = database.Database.getInstance("hi!");
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database32.users = userList39;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database32.users = userList49;
        java.util.ArrayList<user.User> userList52 = database32.users;
        database32.load("hi!");
        database32.update("hi!");
        database32.update("hi!");
        java.util.ArrayList<user.User> userList59 = database32.users;
        database30.users = userList59;
        database14.users = userList59;
        database1.users = userList59;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList59);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList25 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database23.load("hi!");
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database28.users = userList46;
        database23.users = userList46;
        database1.users = userList46;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        database26.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        database40.load("hi!");
        database40.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database40.users = userList54;
        database26.users = userList54;
        java.util.ArrayList<user.User> userList57 = database26.users;
        java.util.ArrayList<user.User> userList58 = database26.users;
        database1.users = userList58;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList62 = database1.users;
        java.util.ArrayList<user.User> userList63 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = parkingSpot12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList39 = database24.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        java.util.ArrayList<user.User> userList48 = database41.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database41.users = userList53;
        database24.users = userList53;
        database1.users = userList53;
        java.util.ArrayList<user.User> userList57 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList60 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        java.util.ArrayList<user.User> userList51 = database22.users;
        database1.users = userList51;
        java.lang.Class<?> wildcardClass53 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.lang.Class<?> wildcardClass19 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.lang.Class<?> wildcardClass18 = userList17.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        java.lang.Class<?> wildcardClass43 = userList42.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass8 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database10.users = userList16;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        java.util.ArrayList<user.User> userList27 = database21.users;
        java.util.ArrayList<user.User> userList28 = database21.users;
        database10.users = userList28;
        java.util.ArrayList<user.User> userList30 = database10.users;
        java.util.ArrayList<user.User> userList31 = database10.users;
        database10.update("hi!");
        database10.update("hi!");
        database.Database database37 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        java.util.ArrayList<user.User> userList40 = database37.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        database37.users = userList46;
        database37.update("hi!");
        java.util.ArrayList<user.User> userList51 = database37.users;
        java.util.ArrayList<user.User> userList52 = database37.users;
        java.util.ArrayList<user.User> userList53 = database37.users;
        database37.update("hi!");
        java.util.ArrayList<user.User> userList56 = database37.users;
        java.util.ArrayList<user.User> userList57 = database37.users;
        database10.users = userList57;
        database1.users = userList57;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList70 = database1.users;
        java.lang.Class<?> wildcardClass71 = userList70.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database.Database database8 = database.Database.getInstance("hi!");
        user.User[] userArray9 = new user.User[] {};
        java.util.ArrayList<user.User> userList10 = new java.util.ArrayList<user.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<user.User>) userList10, userArray9);
        database8.users = userList10;
        java.util.ArrayList<user.User> userList13 = database8.users;
        database1.users = userList13;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        database17.load("hi!");
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database17.users = userList31;
        database17.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database40.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList51 = database36.users;
        java.util.ArrayList<user.User> userList52 = database36.users;
        java.util.ArrayList<user.User> userList53 = database36.users;
        database17.users = userList53;
        database1.users = userList53;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertArrayEquals(userArray9, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database25.users = userList43;
        java.util.ArrayList<user.User> userList45 = database25.users;
        database25.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        database53.users = userList62;
        database.Database database66 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database66.users = userList76;
        database53.users = userList76;
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        database.Database database86 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList87 = database86.users;
        database83.users = userList87;
        database53.users = userList87;
        java.util.ArrayList<user.User> userList90 = database53.users;
        database49.users = userList90;
        database25.users = userList90;
        database1.users = userList90;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList96 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList96);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        database29.users = userList63;
        java.util.ArrayList<user.User> userList66 = database29.users;
        database25.users = userList66;
        database1.users = userList66;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        java.util.ArrayList<user.User> userList73 = database70.users;
        database70.load("hi!");
        database70.load("hi!");
        java.util.ArrayList<user.User> userList78 = database70.users;
        database1.users = userList78;
        java.util.ArrayList<user.User> userList80 = database1.users;
        database.Database database82 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList83 = database82.users;
        java.util.ArrayList<user.User> userList84 = database82.users;
        database.Database database86 = database.Database.getInstance("hi!");
        user.User[] userArray87 = new user.User[] {};
        java.util.ArrayList<user.User> userList88 = new java.util.ArrayList<user.User>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<user.User>) userList88, userArray87);
        database86.users = userList88;
        database.Database database92 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList93 = database92.users;
        database86.users = userList93;
        database82.users = userList93;
        java.util.ArrayList<user.User> userList96 = database82.users;
        java.util.ArrayList<user.User> userList97 = database82.users;
        database1.users = userList97;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userArray87);
        org.junit.Assert.assertArrayEquals(userArray87, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(database92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList96);
        org.junit.Assert.assertNotNull(userList97);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        database26.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        database40.load("hi!");
        database40.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database40.users = userList54;
        database26.users = userList54;
        java.util.ArrayList<user.User> userList57 = database26.users;
        java.util.ArrayList<user.User> userList58 = database26.users;
        database1.users = userList58;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        database47.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database47.users = userList61;
        database33.users = userList61;
        database1.users = userList61;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        java.util.ArrayList<user.User> userList46 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        java.util.ArrayList<user.User> userList37 = database33.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database16.users = userList23;
        database12.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database27.users = userList45;
        database12.users = userList45;
        database1.users = userList45;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList38 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList41 = database1.users;
        java.lang.Class<?> wildcardClass42 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList36 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList36);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        java.util.ArrayList<user.User> userList71 = database69.users;
        java.util.ArrayList<user.User> userList72 = database69.users;
        java.util.ArrayList<user.User> userList73 = database69.users;
        database.Database database75 = database.Database.getInstance("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database75.users = userList77;
        database69.users = userList77;
        database1.users = userList77;
        java.util.ArrayList<user.User> userList82 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList86 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        java.util.ArrayList<user.User> userList35 = database29.users;
        database29.load("hi!");
        java.util.ArrayList<user.User> userList38 = database29.users;
        database1.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        java.util.ArrayList<user.User> userList50 = database41.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        java.util.ArrayList<user.User> userList55 = database52.users;
        java.util.ArrayList<user.User> userList56 = database52.users;
        java.util.ArrayList<user.User> userList57 = database52.users;
        database41.users = userList57;
        database1.users = userList57;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList62 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList25 = database1.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        database27.load("hi!");
        java.util.ArrayList<user.User> userList36 = database27.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database38.users = userList48;
        database.Database database54 = database.Database.getInstance("hi!");
        user.User[] userArray55 = new user.User[] {};
        java.util.ArrayList<user.User> userList56 = new java.util.ArrayList<user.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<user.User>) userList56, userArray55);
        database54.users = userList56;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database54.users = userList61;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database64.users = userList70;
        database54.users = userList70;
        database38.users = userList70;
        database27.users = userList70;
        java.util.ArrayList<user.User> userList77 = database27.users;
        database27.load("hi!");
        java.util.ArrayList<user.User> userList80 = database27.users;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        java.util.ArrayList<user.User> userList84 = database82.users;
        java.util.ArrayList<user.User> userList85 = database82.users;
        java.util.ArrayList<user.User> userList86 = database82.users;
        java.util.ArrayList<user.User> userList87 = database82.users;
        java.util.ArrayList<user.User> userList88 = database82.users;
        database27.users = userList88;
        database1.users = userList88;
        java.util.ArrayList<user.User> userList91 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertArrayEquals(userArray55, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        java.util.ArrayList<user.User> userList35 = database29.users;
        database29.load("hi!");
        java.util.ArrayList<user.User> userList38 = database29.users;
        database1.users = userList38;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList14 = database1.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database16.users = userList20;
        java.util.ArrayList<user.User> userList22 = database16.users;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList25 = null;
        database16.users = userList25;
        database16.load("hi!");
        database16.load("hi!");
        database.Database database32 = database.Database.getInstance("hi!");
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database34.users = userList51;
        java.util.ArrayList<user.User> userList54 = database34.users;
        database34.load("hi!");
        database34.update("hi!");
        database34.update("hi!");
        java.util.ArrayList<user.User> userList61 = database34.users;
        database32.users = userList61;
        database16.users = userList61;
        database1.users = userList61;
        java.util.ArrayList<user.User> userList65 = database1.users;
        java.util.ArrayList<user.User> userList66 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        java.util.ArrayList<user.User> userList51 = database22.users;
        database1.users = userList51;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        java.lang.Class<?> wildcardClass11 = userList7.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.update("hi!");
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        database60.users = userList83;
        database1.users = userList83;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList93 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList93);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        database1.update("hi!");
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        java.util.ArrayList<user.User> userList28 = database25.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database25.users = userList34;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database38.users = userList48;
        database25.users = userList48;
        database22.users = userList48;
        database22.update("hi!");
        database22.load("hi!");
        java.util.ArrayList<user.User> userList59 = database22.users;
        java.util.ArrayList<user.User> userList60 = database22.users;
        database1.users = userList60;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot23 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database5.users = userList22;
        java.util.ArrayList<user.User> userList25 = database5.users;
        database5.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        database5.users = userList79;
        database1.users = userList79;
        java.util.ArrayList<user.User> userList83 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.lang.Class<?> wildcardClass41 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        java.util.ArrayList<user.User> userList40 = database34.users;
        java.util.ArrayList<user.User> userList41 = database34.users;
        database23.users = userList41;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database23.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList48 = database47.users;
        java.util.ArrayList<user.User> userList49 = database47.users;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database56.users = userList60;
        database51.users = userList60;
        database.Database database64 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        java.util.ArrayList<user.User> userList70 = database68.users;
        database.Database database72 = database.Database.getInstance("hi!");
        user.User[] userArray73 = new user.User[] {};
        java.util.ArrayList<user.User> userList74 = new java.util.ArrayList<user.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<user.User>) userList74, userArray73);
        database72.users = userList74;
        database68.users = userList74;
        database64.users = userList74;
        database51.users = userList74;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database.Database database84 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList85 = database84.users;
        database81.users = userList85;
        database51.users = userList85;
        java.util.ArrayList<user.User> userList88 = database51.users;
        database47.users = userList88;
        database23.users = userList88;
        java.util.ArrayList<user.User> userList91 = database23.users;
        database1.users = userList91;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertArrayEquals(userArray73, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database16.users = userList27;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList32 = database16.users;
        java.util.ArrayList<user.User> userList33 = database16.users;
        database1.users = userList33;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database36.users = userList47;
        java.util.ArrayList<user.User> userList50 = database36.users;
        database1.users = userList50;
        java.util.ArrayList<user.User> userList52 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot28 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
        org.junit.Assert.assertNull(parkingSpot28);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database11.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database24.load("hi!");
        java.util.ArrayList<user.User> userList34 = database24.users;
        database11.users = userList34;
        database1.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database38.users = userList45;
        database1.users = userList45;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database60.users = userList69;
        database.Database database73 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList74 = database73.users;
        java.util.ArrayList<user.User> userList75 = database73.users;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        java.util.ArrayList<user.User> userList79 = database77.users;
        database.Database database81 = database.Database.getInstance("hi!");
        user.User[] userArray82 = new user.User[] {};
        java.util.ArrayList<user.User> userList83 = new java.util.ArrayList<user.User>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<user.User>) userList83, userArray82);
        database81.users = userList83;
        database77.users = userList83;
        database73.users = userList83;
        database60.users = userList83;
        database53.users = userList83;
        database1.users = userList83;
        java.lang.Class<?> wildcardClass91 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userArray82);
        org.junit.Assert.assertArrayEquals(userArray82, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database33.users = userList39;
        database29.users = userList39;
        java.util.ArrayList<user.User> userList44 = database29.users;
        database1.users = userList44;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        java.util.ArrayList<user.User> userList18 = database11.users;
        java.util.ArrayList<user.User> userList19 = database11.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database24.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        java.util.ArrayList<user.User> userList41 = database35.users;
        java.util.ArrayList<user.User> userList42 = database35.users;
        database35.load("hi!");
        java.util.ArrayList<user.User> userList45 = database35.users;
        database22.users = userList45;
        java.util.ArrayList<user.User> userList47 = database22.users;
        java.util.ArrayList<user.User> userList48 = database22.users;
        database22.update("hi!");
        java.util.ArrayList<user.User> userList51 = database22.users;
        database1.users = userList51;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.lang.Class<?> wildcardClass19 = userList18.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database23.users = userList33;
        database23.update("hi!");
        java.util.ArrayList<user.User> userList40 = database23.users;
        database1.users = userList40;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        database12.users = userList21;
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database.Database database27 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database31.users = userList37;
        database27.users = userList37;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database53.users = userList59;
        database43.users = userList59;
        database27.users = userList59;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        java.util.ArrayList<user.User> userList69 = database66.users;
        java.util.ArrayList<user.User> userList70 = database66.users;
        database.Database database72 = database.Database.getInstance("hi!");
        user.User[] userArray73 = new user.User[] {};
        java.util.ArrayList<user.User> userList74 = new java.util.ArrayList<user.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<user.User>) userList74, userArray73);
        database72.users = userList74;
        database66.users = userList74;
        database66.update("hi!");
        java.util.ArrayList<user.User> userList80 = database66.users;
        database66.update("hi!");
        java.util.ArrayList<user.User> userList83 = database66.users;
        database27.users = userList83;
        database1.users = userList83;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertArrayEquals(userArray73, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        java.util.ArrayList<user.User> userList44 = database40.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database40.users = userList48;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database1.users = userList54;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database31.users = userList48;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.util.ArrayList<user.User> userList20 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList23 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList23);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        java.lang.Class<?> wildcardClass7 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(1);
        java.lang.Class<?> wildcardClass25 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot3 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = parkingSpot24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList70 = database1.users;
        java.lang.Class<?> wildcardClass71 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database8.load("hi!");
        database.Database database15 = database.Database.getInstance("");
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database15.users = userList24;
        database8.users = userList24;
        database1.users = userList24;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database28 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        java.util.ArrayList<user.User> userList31 = database28.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        database28.users = userList37;
        database28.update("hi!");
        java.util.ArrayList<user.User> userList42 = database28.users;
        java.util.ArrayList<user.User> userList43 = database28.users;
        java.util.ArrayList<user.User> userList44 = database28.users;
        database28.update("hi!");
        java.util.ArrayList<user.User> userList47 = database28.users;
        java.util.ArrayList<user.User> userList48 = database28.users;
        database1.users = userList48;
        java.util.ArrayList<user.User> userList50 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList50);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database41.users = userList48;
        database31.users = userList48;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        database1.update("hi!");
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database23.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database23.users = userList40;
        java.util.ArrayList<user.User> userList43 = database23.users;
        database1.users = userList43;
        java.util.ArrayList<user.User> userList45 = database1.users;
        java.lang.Class<?> wildcardClass46 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database14.users = userList25;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        database33.users = userList42;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList47 = database33.users;
        database29.users = userList47;
        database29.load("hi!");
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        java.util.ArrayList<user.User> userList55 = database52.users;
        database52.load("hi!");
        database52.load("hi!");
        java.util.ArrayList<user.User> userList60 = database52.users;
        java.util.ArrayList<user.User> userList61 = database52.users;
        database29.users = userList61;
        database14.users = userList61;
        database1.users = userList61;
        java.lang.Class<?> wildcardClass65 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList14);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database33.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database40.users = userList49;
        database33.users = userList49;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        java.util.ArrayList<user.User> userList59 = database55.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database55.users = userList63;
        database33.users = userList63;
        database1.users = userList63;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database1.users = userList71;
        java.lang.Class<?> wildcardClass73 = userList71.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database1.users = userList50;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList57 = database1.users;
        java.lang.Class<?> wildcardClass58 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        java.util.ArrayList<user.User> userList32 = database24.users;
        java.util.ArrayList<user.User> userList33 = database24.users;
        database1.users = userList33;
        java.util.ArrayList<user.User> userList35 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList38 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        database33.users = userList42;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList47 = database33.users;
        database29.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList50 = database1.users;
        java.util.ArrayList<user.User> userList51 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = null;
        database1.users = userList15;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(userList17);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot23 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database.Database database13 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database13.load("hi!");
        database13.load("hi!");
        java.util.ArrayList<user.User> userList21 = database13.users;
        database1.users = userList21;
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database.Database database31 = database.Database.getInstance("");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database31.users = userList40;
        database24.users = userList40;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        java.util.ArrayList<user.User> userList52 = database45.users;
        database45.load("hi!");
        java.util.ArrayList<user.User> userList55 = database45.users;
        database24.users = userList55;
        database1.users = userList55;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNull(userList14);
        org.junit.Assert.assertNull(userList15);
        org.junit.Assert.assertNull(userList16);
        org.junit.Assert.assertNull(userList21);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNull(userList25);
        org.junit.Assert.assertNull(userList26);
        org.junit.Assert.assertNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList55);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.update("hi!");
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        database60.users = userList83;
        database1.users = userList83;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList39 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database53.users = userList63;
        java.util.ArrayList<user.User> userList68 = database53.users;
        database1.users = userList68;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = parkingSpot10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        java.lang.Class<?> wildcardClass17 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        java.util.ArrayList<user.User> userList16 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNull(userList16);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNull(userList5);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        database55.load("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database55.users = userList65;
        database55.update("hi!");
        database55.update("hi!");
        java.util.ArrayList<user.User> userList72 = database55.users;
        java.util.ArrayList<user.User> userList73 = database55.users;
        database1.users = userList73;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNull(userList9);
        org.junit.Assert.assertNull(userList10);
        org.junit.Assert.assertNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNull(userList22);
        org.junit.Assert.assertNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNull(userList26);
        org.junit.Assert.assertNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database40.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        java.util.ArrayList<user.User> userList71 = database61.users;
        database40.users = userList71;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        java.util.ArrayList<user.User> userList77 = database74.users;
        database40.users = userList77;
        database1.users = userList77;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass82 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot23 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        database35.load("hi!");
        database.Database database42 = database.Database.getInstance("");
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database42.users = userList51;
        database35.users = userList51;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database56.users = userList60;
        java.util.ArrayList<user.User> userList62 = database56.users;
        java.util.ArrayList<user.User> userList63 = database56.users;
        database56.load("hi!");
        java.util.ArrayList<user.User> userList66 = database56.users;
        database35.users = userList66;
        java.util.ArrayList<user.User> userList68 = database35.users;
        database1.users = userList68;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList7);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList56 = null;
        database1.users = userList56;
        java.util.ArrayList<user.User> userList58 = database1.users;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.load("hi!");
        database.Database database67 = database.Database.getInstance("");
        database.Database database69 = database.Database.getInstance("hi!");
        user.User[] userArray70 = new user.User[] {};
        java.util.ArrayList<user.User> userList71 = new java.util.ArrayList<user.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<user.User>) userList71, userArray70);
        database69.users = userList71;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database69.users = userList76;
        database67.users = userList76;
        database60.users = userList76;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database.Database database84 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList85 = database84.users;
        database81.users = userList85;
        java.util.ArrayList<user.User> userList87 = database81.users;
        java.util.ArrayList<user.User> userList88 = database81.users;
        database81.load("hi!");
        java.util.ArrayList<user.User> userList91 = database81.users;
        database60.users = userList91;
        database.Database database94 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList95 = database94.users;
        java.util.ArrayList<user.User> userList96 = database94.users;
        java.util.ArrayList<user.User> userList97 = database94.users;
        database60.users = userList97;
        database1.users = userList97;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNull(userList61);
        org.junit.Assert.assertNull(userList62);
        org.junit.Assert.assertNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertArrayEquals(userArray70, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(database94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(userList96);
        org.junit.Assert.assertNotNull(userList97);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        java.util.ArrayList<user.User> userList27 = database21.users;
        database21.load("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database21.users = userList31;
        database21.update("hi!");
        database21.update("hi!");
        java.util.ArrayList<user.User> userList38 = database21.users;
        java.util.ArrayList<user.User> userList39 = database21.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        database41.load("hi!");
        database41.update("hi!");
        java.util.ArrayList<user.User> userList52 = database41.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database54.users = userList58;
        java.util.ArrayList<user.User> userList60 = database54.users;
        java.util.ArrayList<user.User> userList61 = database54.users;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        java.util.ArrayList<user.User> userList65 = database63.users;
        java.util.ArrayList<user.User> userList66 = database63.users;
        database54.users = userList66;
        database41.users = userList66;
        database21.users = userList66;
        database1.users = userList66;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass23 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        java.util.ArrayList<user.User> userList52 = database46.users;
        java.util.ArrayList<user.User> userList53 = database46.users;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList56 = database46.users;
        database33.users = userList56;
        java.util.ArrayList<user.User> userList58 = database33.users;
        java.util.ArrayList<user.User> userList59 = database33.users;
        database1.users = userList59;
        java.lang.Class<?> wildcardClass61 = userList59.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        database33.load("hi!");
        java.util.ArrayList<user.User> userList42 = database33.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database48.users = userList54;
        database44.users = userList54;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database60.users = userList76;
        database44.users = userList76;
        database33.users = userList76;
        database1.users = userList76;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database15.users = userList21;
        database11.users = userList21;
        database1.users = userList21;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        database.Database database36 = database.Database.getInstance("");
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database38.users = userList45;
        database36.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        java.util.ArrayList<user.User> userList55 = database49.users;
        java.util.ArrayList<user.User> userList56 = database49.users;
        database49.load("hi!");
        java.util.ArrayList<user.User> userList59 = database49.users;
        database36.users = userList59;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        java.util.ArrayList<user.User> userList65 = database62.users;
        java.util.ArrayList<user.User> userList66 = database62.users;
        database36.users = userList66;
        database28.users = userList66;
        database1.users = userList66;
        database.Database database71 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList72 = database71.users;
        java.util.ArrayList<user.User> userList73 = database71.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        java.util.ArrayList<user.User> userList77 = database75.users;
        database.Database database79 = database.Database.getInstance("hi!");
        user.User[] userArray80 = new user.User[] {};
        java.util.ArrayList<user.User> userList81 = new java.util.ArrayList<user.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<user.User>) userList81, userArray80);
        database79.users = userList81;
        database75.users = userList81;
        database71.users = userList81;
        database1.users = userList81;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertArrayEquals(userArray80, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database33.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database40.users = userList49;
        database33.users = userList49;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        java.util.ArrayList<user.User> userList59 = database55.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database55.users = userList63;
        database33.users = userList63;
        database1.users = userList63;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database1.users = userList71;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList75 = database1.users;
        java.lang.Class<?> wildcardClass76 = userList75.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        java.lang.Class<?> wildcardClass17 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database16.users = userList20;
        java.util.ArrayList<user.User> userList22 = database16.users;
        database16.update("hi!");
        database.Database database26 = database.Database.getInstance("");
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database26.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database39.load("hi!");
        java.util.ArrayList<user.User> userList49 = database39.users;
        database26.users = userList49;
        database16.users = userList49;
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database53.users = userList60;
        database16.users = userList60;
        java.util.ArrayList<user.User> userList63 = database16.users;
        database1.users = userList63;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList63);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        java.util.ArrayList<user.User> userList36 = database16.users;
        java.util.ArrayList<user.User> userList37 = database16.users;
        database1.users = userList37;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        java.util.ArrayList<user.User> userList60 = database53.users;
        java.util.ArrayList<user.User> userList61 = database53.users;
        java.util.ArrayList<user.User> userList62 = database53.users;
        database1.users = userList62;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database.Database database18 = database.Database.getInstance("hi!");
        user.User[] userArray19 = new user.User[] {};
        java.util.ArrayList<user.User> userList20 = new java.util.ArrayList<user.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<user.User>) userList20, userArray19);
        database18.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        database18.users = userList28;
        java.util.ArrayList<user.User> userList31 = null;
        database18.users = userList31;
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database18.users = userList36;
        database1.users = userList36;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        java.util.ArrayList<user.User> userList48 = database43.users;
        database43.update("hi!");
        database.Database database52 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        java.util.ArrayList<user.User> userList55 = database52.users;
        database52.load("hi!");
        database.Database database59 = database.Database.getInstance("");
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database61.users = userList68;
        database59.users = userList68;
        database52.users = userList68;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        java.util.ArrayList<user.User> userList80 = database73.users;
        database52.users = userList80;
        database43.users = userList80;
        database.Database database84 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList85 = database84.users;
        database43.users = userList85;
        database1.users = userList85;
        java.util.ArrayList<user.User> userList88 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertArrayEquals(userArray19, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList54 = database1.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        java.util.ArrayList<user.User> userList59 = database56.users;
        java.util.ArrayList<user.User> userList60 = database56.users;
        java.util.ArrayList<user.User> userList61 = database56.users;
        java.util.ArrayList<user.User> userList62 = database56.users;
        database1.users = userList62;
        java.util.ArrayList<user.User> userList64 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList64);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList52 = database1.users;
        java.lang.Class<?> wildcardClass53 = userList52.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        database40.users = userList49;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database36.users = userList54;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        database57.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        database71.load("hi!");
        database71.update("hi!");
        database.Database database83 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList84 = database83.users;
        java.util.ArrayList<user.User> userList85 = database83.users;
        database71.users = userList85;
        database57.users = userList85;
        java.util.ArrayList<user.User> userList88 = database57.users;
        database36.users = userList88;
        java.util.ArrayList<user.User> userList90 = database36.users;
        database1.users = userList90;
        java.util.ArrayList<user.User> userList92 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList92);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database1.users = userList13;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList17);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        java.util.ArrayList<user.User> userList28 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList12 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList12);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database27 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        database27.users = userList36;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        database.Database database48 = database.Database.getInstance("hi!");
        user.User[] userArray49 = new user.User[] {};
        java.util.ArrayList<user.User> userList50 = new java.util.ArrayList<user.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<user.User>) userList50, userArray49);
        database48.users = userList50;
        database44.users = userList50;
        database40.users = userList50;
        database27.users = userList50;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        database57.users = userList61;
        database27.users = userList61;
        database27.update("hi!");
        java.util.ArrayList<user.User> userList66 = database27.users;
        java.util.ArrayList<user.User> userList67 = database27.users;
        database1.users = userList67;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertArrayEquals(userArray49, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList67);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList86 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database15.users = userList31;
        database1.users = userList31;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database3.users = userList20;
        java.util.ArrayList<user.User> userList23 = database3.users;
        database3.load("hi!");
        database3.update("hi!");
        database3.update("hi!");
        java.util.ArrayList<user.User> userList30 = database3.users;
        database1.users = userList30;
        java.util.ArrayList<user.User> userList32 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList32);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = parkingSpot18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database.Database database11 = database.Database.getInstance("");
        database.Database database13 = database.Database.getInstance("hi!");
        user.User[] userArray14 = new user.User[] {};
        java.util.ArrayList<user.User> userList15 = new java.util.ArrayList<user.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<user.User>) userList15, userArray14);
        database13.users = userList15;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database13.users = userList20;
        database11.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database24.load("hi!");
        java.util.ArrayList<user.User> userList34 = database24.users;
        database11.users = userList34;
        database1.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        java.util.ArrayList<user.User> userList46 = database38.users;
        database38.update("hi!");
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database55.users = userList83;
        database50.users = userList83;
        database38.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList88 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertArrayEquals(userArray14, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database.Database database85 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        java.util.ArrayList<user.User> userList88 = database85.users;
        database85.update("hi!");
        java.util.ArrayList<user.User> userList91 = database85.users;
        database1.users = userList91;
        java.util.ArrayList<user.User> userList93 = database1.users;
        java.util.ArrayList<user.User> userList94 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        database55.load("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database55.users = userList65;
        database1.users = userList65;
        database1.update("hi!");
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        java.util.ArrayList<user.User> userList79 = database72.users;
        database72.load("hi!");
        user.User[] userArray82 = new user.User[] {};
        java.util.ArrayList<user.User> userList83 = new java.util.ArrayList<user.User>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<user.User>) userList83, userArray82);
        database72.users = userList83;
        database.Database database87 = database.Database.getInstance("hi!");
        user.User[] userArray88 = new user.User[] {};
        java.util.ArrayList<user.User> userList89 = new java.util.ArrayList<user.User>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<user.User>) userList89, userArray88);
        database87.users = userList89;
        database.Database database93 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList94 = database93.users;
        database87.users = userList94;
        database72.users = userList94;
        java.util.ArrayList<user.User> userList97 = database72.users;
        database1.users = userList97;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userArray82);
        org.junit.Assert.assertArrayEquals(userArray82, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(database87);
        org.junit.Assert.assertNotNull(userArray88);
        org.junit.Assert.assertArrayEquals(userArray88, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(database93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList97);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database17.users = userList33;
        database1.users = userList33;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        database1.users = userList34;
        database1.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        database40.users = userList49;
        java.util.ArrayList<user.User> userList52 = database40.users;
        database40.load("hi!");
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        java.util.ArrayList<user.User> userList59 = database56.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        database56.users = userList65;
        database56.update("hi!");
        java.util.ArrayList<user.User> userList70 = database56.users;
        java.util.ArrayList<user.User> userList71 = database56.users;
        database40.users = userList71;
        database1.users = userList71;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList39 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList39);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = parkingSpot18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database1.users = userList17;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        java.util.ArrayList<user.User> userList52 = database46.users;
        java.util.ArrayList<user.User> userList53 = database46.users;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList56 = database46.users;
        database33.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        java.util.ArrayList<user.User> userList63 = database59.users;
        database33.users = userList63;
        database25.users = userList63;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database67.users = userList71;
        java.util.ArrayList<user.User> userList73 = database67.users;
        database67.load("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database67.users = userList77;
        database67.update("hi!");
        database67.update("hi!");
        java.util.ArrayList<user.User> userList84 = database67.users;
        database25.users = userList84;
        java.util.ArrayList<user.User> userList86 = database25.users;
        database1.users = userList86;
        java.util.ArrayList<user.User> userList88 = database1.users;
        java.util.ArrayList<user.User> userList89 = database1.users;
        java.util.ArrayList<user.User> userList90 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList90);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        java.util.ArrayList<user.User> userList44 = database41.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        database41.users = userList50;
        database.Database database54 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        user.User[] userArray63 = new user.User[] {};
        java.util.ArrayList<user.User> userList64 = new java.util.ArrayList<user.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<user.User>) userList64, userArray63);
        database62.users = userList64;
        database58.users = userList64;
        database54.users = userList64;
        database41.users = userList64;
        database38.users = userList64;
        database38.update("hi!");
        database38.load("hi!");
        java.util.ArrayList<user.User> userList75 = database38.users;
        database1.users = userList75;
        java.lang.Class<?> wildcardClass77 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertArrayEquals(userArray63, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database15.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database28.users = userList46;
        java.util.ArrayList<user.User> userList48 = database28.users;
        java.util.ArrayList<user.User> userList49 = database28.users;
        database28.update("hi!");
        database.Database database53 = database.Database.getInstance("");
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database55.users = userList62;
        database53.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database66.users = userList70;
        java.util.ArrayList<user.User> userList72 = database66.users;
        java.util.ArrayList<user.User> userList73 = database66.users;
        database66.load("hi!");
        java.util.ArrayList<user.User> userList76 = database66.users;
        database53.users = userList76;
        database53.load("hi!");
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database.Database database84 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList85 = database84.users;
        database81.users = userList85;
        java.util.ArrayList<user.User> userList87 = database81.users;
        database81.load("hi!");
        java.util.ArrayList<user.User> userList90 = database81.users;
        database53.users = userList90;
        database28.users = userList90;
        database1.users = userList90;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        database19.load("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database19.users = userList29;
        java.util.ArrayList<user.User> userList32 = database19.users;
        database1.users = userList32;
        java.lang.Class<?> wildcardClass34 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        java.util.ArrayList<user.User> userList25 = database17.users;
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        java.util.ArrayList<user.User> userList62 = database55.users;
        database34.users = userList62;
        database29.users = userList62;
        database17.users = userList62;
        database17.load("hi!");
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        java.util.ArrayList<user.User> userList76 = database69.users;
        java.util.ArrayList<user.User> userList77 = database69.users;
        java.util.ArrayList<user.User> userList78 = database69.users;
        database17.users = userList78;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database.Database database85 = database.Database.getInstance("hi!");
        user.User[] userArray86 = new user.User[] {};
        java.util.ArrayList<user.User> userList87 = new java.util.ArrayList<user.User>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<user.User>) userList87, userArray86);
        database85.users = userList87;
        database81.users = userList87;
        database17.users = userList87;
        database1.users = userList87;
        java.lang.Class<?> wildcardClass93 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userArray86);
        org.junit.Assert.assertArrayEquals(userArray86, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        java.lang.Class<?> wildcardClass26 = userList24.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList36 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList36);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '4');
        java.lang.Class<?> wildcardClass23 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        java.util.ArrayList<user.User> userList34 = database19.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database36.users = userList48;
        database19.users = userList48;
        database1.users = userList48;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        database22.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        database36.load("hi!");
        database36.update("hi!");
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database36.users = userList50;
        database22.users = userList50;
        java.util.ArrayList<user.User> userList53 = database22.users;
        database1.users = userList53;
        java.util.ArrayList<user.User> userList55 = database1.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        java.util.ArrayList<user.User> userList60 = database57.users;
        java.util.ArrayList<user.User> userList61 = database57.users;
        java.util.ArrayList<user.User> userList62 = database57.users;
        database1.users = userList62;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database23.users = userList33;
        database23.update("hi!");
        java.util.ArrayList<user.User> userList40 = database23.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.lang.Class<?> wildcardClass29 = userList28.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database1.users = userList16;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database20.users = userList24;
        java.util.ArrayList<user.User> userList26 = database20.users;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList29 = database20.users;
        database1.users = userList29;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database22.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database29.users = userList38;
        database22.users = userList38;
        java.util.ArrayList<user.User> userList42 = database22.users;
        database22.update("hi!");
        database22.load("hi!");
        java.util.ArrayList<user.User> userList47 = database22.users;
        database1.users = userList47;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList48 = database38.users;
        database25.users = userList48;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        java.util.ArrayList<user.User> userList55 = database51.users;
        database25.users = userList55;
        database17.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        java.util.ArrayList<user.User> userList65 = database59.users;
        database59.load("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database59.users = userList69;
        database59.update("hi!");
        database59.update("hi!");
        java.util.ArrayList<user.User> userList76 = database59.users;
        database17.users = userList76;
        database1.users = userList76;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database5.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database5.users = userList21;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database26.users = userList30;
        java.util.ArrayList<user.User> userList32 = database26.users;
        java.util.ArrayList<user.User> userList33 = database26.users;
        database5.users = userList33;
        database3.users = userList33;
        java.util.ArrayList<user.User> userList36 = database3.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        database42.users = userList51;
        database42.update("hi!");
        java.util.ArrayList<user.User> userList56 = database42.users;
        database38.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database59.users = userList69;
        database.Database database73 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList74 = database73.users;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database73.users = userList77;
        java.util.ArrayList<user.User> userList79 = database73.users;
        database73.load("hi!");
        database73.update("hi!");
        database.Database database85 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        database73.users = userList87;
        database59.users = userList87;
        java.util.ArrayList<user.User> userList90 = database59.users;
        database38.users = userList90;
        java.util.ArrayList<user.User> userList92 = database38.users;
        database3.users = userList92;
        database1.users = userList92;
        java.util.ArrayList<user.User> userList95 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList95);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot28 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
        org.junit.Assert.assertNull(parkingSpot28);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList39 = database24.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        java.util.ArrayList<user.User> userList48 = database41.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database41.users = userList53;
        database24.users = userList53;
        database1.users = userList53;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database15.users = userList45;
        java.util.ArrayList<user.User> userList52 = database15.users;
        database1.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database55.load("hi!");
        java.util.ArrayList<user.User> userList63 = database55.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        java.util.ArrayList<user.User> userList71 = database65.users;
        database65.load("hi!");
        user.User[] userArray74 = new user.User[] {};
        java.util.ArrayList<user.User> userList75 = new java.util.ArrayList<user.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<user.User>) userList75, userArray74);
        database65.users = userList75;
        database65.update("hi!");
        database65.update("hi!");
        java.util.ArrayList<user.User> userList82 = database65.users;
        java.util.ArrayList<user.User> userList83 = database65.users;
        database55.users = userList83;
        database1.users = userList83;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertArrayEquals(userArray74, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        java.util.ArrayList<user.User> userList71 = database69.users;
        java.util.ArrayList<user.User> userList72 = database69.users;
        java.util.ArrayList<user.User> userList73 = database69.users;
        database.Database database75 = database.Database.getInstance("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database75.users = userList77;
        database69.users = userList77;
        database1.users = userList77;
        java.util.ArrayList<user.User> userList82 = database1.users;
        java.util.ArrayList<user.User> userList83 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        java.util.ArrayList<user.User> userList20 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database17.users = userList33;
        database1.users = userList33;
        database1.update("hi!");
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList51 = database42.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database53.users = userList63;
        database.Database database69 = database.Database.getInstance("hi!");
        user.User[] userArray70 = new user.User[] {};
        java.util.ArrayList<user.User> userList71 = new java.util.ArrayList<user.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<user.User>) userList71, userArray70);
        database69.users = userList71;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database69.users = userList76;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        java.util.ArrayList<user.User> userList81 = database79.users;
        database.Database database83 = database.Database.getInstance("hi!");
        user.User[] userArray84 = new user.User[] {};
        java.util.ArrayList<user.User> userList85 = new java.util.ArrayList<user.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<user.User>) userList85, userArray84);
        database83.users = userList85;
        database79.users = userList85;
        database69.users = userList85;
        database53.users = userList85;
        database42.users = userList85;
        java.util.ArrayList<user.User> userList92 = database42.users;
        java.util.ArrayList<user.User> userList93 = database42.users;
        java.util.ArrayList<user.User> userList94 = database42.users;
        database1.users = userList94;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertArrayEquals(userArray70, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertArrayEquals(userArray84, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database.Database database9 = database.Database.getInstance("");
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database9.users = userList18;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database9.users = userList32;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        java.util.ArrayList<user.User> userList39 = database35.users;
        database9.users = userList39;
        database1.users = userList39;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        database43.load("hi!");
        user.User[] userArray52 = new user.User[] {};
        java.util.ArrayList<user.User> userList53 = new java.util.ArrayList<user.User>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<user.User>) userList53, userArray52);
        database43.users = userList53;
        database43.update("hi!");
        database43.update("hi!");
        java.util.ArrayList<user.User> userList60 = database43.users;
        database1.users = userList60;
        java.util.ArrayList<user.User> userList62 = database1.users;
        java.util.ArrayList<user.User> userList63 = database1.users;
        java.util.ArrayList<user.User> userList64 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userArray52);
        org.junit.Assert.assertArrayEquals(userArray52, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        java.util.ArrayList<user.User> userList35 = database29.users;
        database29.load("hi!");
        java.util.ArrayList<user.User> userList38 = database29.users;
        database1.users = userList38;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList42 = database1.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database.Database database47 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList48 = database47.users;
        java.util.ArrayList<user.User> userList49 = database47.users;
        java.util.ArrayList<user.User> userList50 = database47.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        database47.users = userList56;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database64.users = userList70;
        database60.users = userList70;
        database47.users = userList70;
        database44.users = userList70;
        database44.update("hi!");
        database44.load("hi!");
        java.util.ArrayList<user.User> userList81 = database44.users;
        java.util.ArrayList<user.User> userList82 = database44.users;
        database1.users = userList82;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass32 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass30 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database29.users = userList36;
        database19.users = userList36;
        java.util.ArrayList<user.User> userList39 = database19.users;
        database19.load("hi!");
        database19.update("hi!");
        database19.update("hi!");
        java.util.ArrayList<user.User> userList46 = database19.users;
        database17.users = userList46;
        database1.users = userList46;
        database.Database database50 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database50.load("hi!");
        database.Database database57 = database.Database.getInstance("");
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database59.users = userList66;
        database57.users = userList66;
        database50.users = userList66;
        java.util.ArrayList<user.User> userList70 = database50.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        java.util.ArrayList<user.User> userList74 = database72.users;
        java.util.ArrayList<user.User> userList75 = database72.users;
        java.util.ArrayList<user.User> userList76 = database72.users;
        database.Database database78 = database.Database.getInstance("hi!");
        user.User[] userArray79 = new user.User[] {};
        java.util.ArrayList<user.User> userList80 = new java.util.ArrayList<user.User>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<user.User>) userList80, userArray79);
        database78.users = userList80;
        database72.users = userList80;
        database50.users = userList80;
        database1.users = userList80;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userArray79);
        org.junit.Assert.assertArrayEquals(userArray79, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        database.Database database48 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        java.util.ArrayList<user.User> userList51 = database48.users;
        database48.load("hi!");
        database.Database database55 = database.Database.getInstance("");
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database57.users = userList64;
        database55.users = userList64;
        database48.users = userList64;
        java.util.ArrayList<user.User> userList68 = database48.users;
        database1.users = userList68;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList72 = database1.users;
        java.util.ArrayList<user.User> userList73 = database1.users;
        java.lang.Class<?> wildcardClass74 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList26 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList26);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList53 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        database1.users = userList34;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        database11.load("hi!");
        database11.update("hi!");
        java.util.ArrayList<user.User> userList22 = database11.users;
        database1.users = userList22;
        java.util.ArrayList<user.User> userList24 = null;
        database1.users = userList24;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList22);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        java.util.ArrayList<user.User> userList37 = database33.users;
        database1.users = userList37;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database40.load("hi!");
        java.util.ArrayList<user.User> userList48 = database40.users;
        database.Database database50 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        java.util.ArrayList<user.User> userList53 = database50.users;
        database50.load("hi!");
        database50.load("hi!");
        java.util.ArrayList<user.User> userList58 = database50.users;
        database40.users = userList58;
        java.util.ArrayList<user.User> userList60 = database40.users;
        database1.users = userList60;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList60);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        java.util.ArrayList<user.User> userList19 = database13.users;
        java.util.ArrayList<user.User> userList20 = database13.users;
        database1.users = userList20;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database23.update("hi!");
        java.util.ArrayList<user.User> userList50 = database23.users;
        java.util.ArrayList<user.User> userList51 = database23.users;
        database1.users = userList51;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        database33.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database40.users = userList49;
        database33.users = userList49;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        java.util.ArrayList<user.User> userList59 = database55.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database55.users = userList63;
        database33.users = userList63;
        database1.users = userList63;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database1.users = userList71;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList75 = database1.users;
        java.lang.Class<?> wildcardClass76 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        java.util.ArrayList<user.User> userList26 = database19.users;
        java.util.ArrayList<user.User> userList27 = database19.users;
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database29.users = userList35;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        java.util.ArrayList<user.User> userList46 = database40.users;
        java.util.ArrayList<user.User> userList47 = database40.users;
        database29.users = userList47;
        java.util.ArrayList<user.User> userList49 = database29.users;
        java.util.ArrayList<user.User> userList50 = database29.users;
        database19.users = userList50;
        java.util.ArrayList<user.User> userList52 = database19.users;
        database1.users = userList52;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList33 = database1.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        java.util.ArrayList<user.User> userList41 = database35.users;
        database35.load("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database35.users = userList45;
        database35.update("hi!");
        database35.update("hi!");
        java.util.ArrayList<user.User> userList52 = database35.users;
        java.util.ArrayList<user.User> userList53 = database35.users;
        java.util.ArrayList<user.User> userList54 = database35.users;
        database1.users = userList54;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        java.util.ArrayList<user.User> userList60 = database57.users;
        java.util.ArrayList<user.User> userList61 = database57.users;
        database.Database database63 = database.Database.getInstance("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database63.users = userList65;
        database57.users = userList65;
        database1.users = userList65;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot27 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database.Database database85 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        java.util.ArrayList<user.User> userList88 = database85.users;
        database85.update("hi!");
        java.util.ArrayList<user.User> userList91 = database85.users;
        database1.users = userList91;
        java.util.ArrayList<user.User> userList93 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList93);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database.Database database18 = database.Database.getInstance("hi!");
        user.User[] userArray19 = new user.User[] {};
        java.util.ArrayList<user.User> userList20 = new java.util.ArrayList<user.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<user.User>) userList20, userArray19);
        database18.users = userList20;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        database18.users = userList28;
        java.util.ArrayList<user.User> userList31 = null;
        database18.users = userList31;
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database18.users = userList36;
        database1.users = userList36;
        java.lang.Class<?> wildcardClass41 = userList36.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertArrayEquals(userArray19, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database10.users = userList16;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        java.util.ArrayList<user.User> userList27 = database21.users;
        java.util.ArrayList<user.User> userList28 = database21.users;
        database10.users = userList28;
        java.util.ArrayList<user.User> userList30 = database10.users;
        database10.load("hi!");
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        java.util.ArrayList<user.User> userList41 = database38.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        database38.users = userList47;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database55.users = userList61;
        database51.users = userList61;
        database38.users = userList61;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database68.users = userList72;
        database38.users = userList72;
        java.util.ArrayList<user.User> userList75 = database38.users;
        database34.users = userList75;
        database10.users = userList75;
        java.util.ArrayList<user.User> userList78 = database10.users;
        database1.users = userList78;
        java.util.ArrayList<user.User> userList80 = null;
        database1.users = userList80;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList78);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNull(userList19);
        org.junit.Assert.assertNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNull(userList23);
        org.junit.Assert.assertNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        java.util.ArrayList<user.User> userList15 = database12.users;
        java.util.ArrayList<user.User> userList16 = database12.users;
        java.util.ArrayList<user.User> userList17 = database12.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList22 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList22);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList23 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList23);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList20);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        java.util.ArrayList<user.User> userList46 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList10 = database9.users;
        java.util.ArrayList<user.User> userList11 = database9.users;
        java.util.ArrayList<user.User> userList12 = database9.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        database9.users = userList18;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database26.users = userList32;
        database22.users = userList32;
        database9.users = userList32;
        database6.users = userList32;
        database6.update("hi!");
        database6.load("hi!");
        java.util.ArrayList<user.User> userList43 = database6.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        java.util.ArrayList<user.User> userList51 = database45.users;
        database45.load("hi!");
        java.util.ArrayList<user.User> userList54 = database45.users;
        database.Database database56 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList57 = database56.users;
        java.util.ArrayList<user.User> userList58 = database56.users;
        database.Database database60 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database60.users = userList66;
        database56.users = userList66;
        database.Database database72 = database.Database.getInstance("hi!");
        user.User[] userArray73 = new user.User[] {};
        java.util.ArrayList<user.User> userList74 = new java.util.ArrayList<user.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<user.User>) userList74, userArray73);
        database72.users = userList74;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database72.users = userList79;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        java.util.ArrayList<user.User> userList84 = database82.users;
        database.Database database86 = database.Database.getInstance("hi!");
        user.User[] userArray87 = new user.User[] {};
        java.util.ArrayList<user.User> userList88 = new java.util.ArrayList<user.User>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<user.User>) userList88, userArray87);
        database86.users = userList88;
        database82.users = userList88;
        database72.users = userList88;
        database56.users = userList88;
        database45.users = userList88;
        java.util.ArrayList<user.User> userList95 = database45.users;
        database6.users = userList95;
        database1.users = userList95;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertArrayEquals(userArray73, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(database86);
        org.junit.Assert.assertNotNull(userArray87);
        org.junit.Assert.assertArrayEquals(userArray87, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(userList95);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database16.users = userList27;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList32 = database16.users;
        java.util.ArrayList<user.User> userList33 = database16.users;
        database1.users = userList33;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        java.util.ArrayList<user.User> userList56 = database50.users;
        java.util.ArrayList<user.User> userList57 = database50.users;
        database50.load("hi!");
        java.util.ArrayList<user.User> userList60 = database50.users;
        database.Database database62 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList63 = database62.users;
        java.util.ArrayList<user.User> userList64 = database62.users;
        java.util.ArrayList<user.User> userList65 = database62.users;
        database62.load("hi!");
        database62.load("hi!");
        java.util.ArrayList<user.User> userList70 = database62.users;
        database50.users = userList70;
        database50.load("hi!");
        database50.update("hi!");
        java.util.ArrayList<user.User> userList76 = database50.users;
        database1.users = userList76;
        java.lang.Class<?> wildcardClass78 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        user.User[] userArray17 = new user.User[] {};
        java.util.ArrayList<user.User> userList18 = new java.util.ArrayList<user.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<user.User>) userList18, userArray17);
        database16.users = userList18;
        database12.users = userList18;
        database12.load("hi!");
        java.util.ArrayList<user.User> userList24 = database12.users;
        database1.users = userList24;
        database.Database database27 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database31.users = userList37;
        database27.users = userList37;
        java.util.ArrayList<user.User> userList42 = database27.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database44.users = userList48;
        java.util.ArrayList<user.User> userList50 = database44.users;
        java.util.ArrayList<user.User> userList51 = database44.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        database44.users = userList56;
        database27.users = userList56;
        database1.users = userList56;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertArrayEquals(userArray17, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database.Database database8 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database8.users = userList14;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        java.util.ArrayList<user.User> userList26 = database19.users;
        database8.users = userList26;
        java.util.ArrayList<user.User> userList28 = database8.users;
        database8.load("hi!");
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        java.util.ArrayList<user.User> userList38 = database32.users;
        java.util.ArrayList<user.User> userList39 = database32.users;
        database32.load("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database32.users = userList43;
        database8.users = userList43;
        java.util.ArrayList<user.User> userList47 = database8.users;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList49 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.lang.Class<?> wildcardClass8 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList14 = database1.users;
        java.util.ArrayList<user.User> userList15 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNull(userList14);
        org.junit.Assert.assertNull(userList15);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        java.util.ArrayList<user.User> userList47 = database44.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database49.users = userList53;
        database44.users = userList53;
        database44.update("hi!");
        java.util.ArrayList<user.User> userList58 = database44.users;
        database40.users = userList58;
        database.Database database61 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList62 = database61.users;
        java.util.ArrayList<user.User> userList63 = database61.users;
        java.util.ArrayList<user.User> userList64 = database61.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database66.users = userList70;
        database61.users = userList70;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        java.util.ArrayList<user.User> userList80 = database78.users;
        database.Database database82 = database.Database.getInstance("hi!");
        user.User[] userArray83 = new user.User[] {};
        java.util.ArrayList<user.User> userList84 = new java.util.ArrayList<user.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<user.User>) userList84, userArray83);
        database82.users = userList84;
        database78.users = userList84;
        database74.users = userList84;
        database61.users = userList84;
        java.util.ArrayList<user.User> userList90 = database61.users;
        database40.users = userList90;
        database1.users = userList90;
        java.lang.Class<?> wildcardClass93 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertArrayEquals(userArray83, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.lang.Class<?> wildcardClass31 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        java.util.ArrayList<user.User> userList25 = database22.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database22.users = userList31;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database35.users = userList45;
        database22.users = userList45;
        database15.users = userList45;
        java.util.ArrayList<user.User> userList52 = database15.users;
        database1.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database55.load("hi!");
        java.util.ArrayList<user.User> userList63 = database55.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        java.util.ArrayList<user.User> userList71 = database65.users;
        database65.load("hi!");
        user.User[] userArray74 = new user.User[] {};
        java.util.ArrayList<user.User> userList75 = new java.util.ArrayList<user.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<user.User>) userList75, userArray74);
        database65.users = userList75;
        database65.update("hi!");
        database65.update("hi!");
        java.util.ArrayList<user.User> userList82 = database65.users;
        java.util.ArrayList<user.User> userList83 = database65.users;
        database55.users = userList83;
        database1.users = userList83;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertArrayEquals(userArray74, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList55 = database1.users;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        database57.users = userList67;
        database57.load("hi!");
        database57.update("hi!");
        database.Database database75 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList76 = database75.users;
        java.util.ArrayList<user.User> userList77 = database75.users;
        java.util.ArrayList<user.User> userList78 = database75.users;
        database75.load("hi!");
        database.Database database82 = database.Database.getInstance("");
        database.Database database84 = database.Database.getInstance("hi!");
        user.User[] userArray85 = new user.User[] {};
        java.util.ArrayList<user.User> userList86 = new java.util.ArrayList<user.User>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<user.User>) userList86, userArray85);
        database84.users = userList86;
        database.Database database90 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList91 = database90.users;
        database84.users = userList91;
        database82.users = userList91;
        database75.users = userList91;
        java.util.ArrayList<user.User> userList95 = database75.users;
        database57.users = userList95;
        database1.users = userList95;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(database84);
        org.junit.Assert.assertNotNull(userArray85);
        org.junit.Assert.assertArrayEquals(userArray85, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(database90);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList95);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList23 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userList23);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database39.users = userList45;
        database39.load("hi!");
        java.util.ArrayList<user.User> userList51 = database39.users;
        database39.update("hi!");
        database39.update("hi!");
        java.util.ArrayList<user.User> userList56 = database39.users;
        database1.users = userList56;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass25 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = parkingSpot20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database1.users = userList16;
        java.util.ArrayList<user.User> userList18 = database1.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database20.users = userList24;
        java.util.ArrayList<user.User> userList26 = database20.users;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList29 = database20.users;
        database1.users = userList29;
        database.Database database32 = database.Database.getInstance("");
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database32.users = userList41;
        java.util.ArrayList<user.User> userList44 = database32.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        database53.users = userList62;
        database.Database database66 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList67 = database66.users;
        java.util.ArrayList<user.User> userList68 = database66.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database66.users = userList76;
        database53.users = userList76;
        database46.users = userList76;
        java.util.ArrayList<user.User> userList83 = database46.users;
        database32.users = userList83;
        database1.users = userList83;
        java.lang.Class<?> wildcardClass86 = userList83.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = null;
        database1.users = userList18;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database21.users = userList32;
        database21.load("hi!");
        java.util.ArrayList<user.User> userList37 = database21.users;
        database1.users = userList37;
        java.util.ArrayList<user.User> userList39 = database1.users;
        database1.load("hi!");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database53.users = userList60;
        database43.users = userList60;
        java.util.ArrayList<user.User> userList63 = database43.users;
        database43.load("hi!");
        database43.load("hi!");
        database43.update("hi!");
        java.util.ArrayList<user.User> userList70 = database43.users;
        database1.users = userList70;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNull(userList22);
        org.junit.Assert.assertNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList70);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        java.util.ArrayList<user.User> userList46 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        java.util.ArrayList<user.User> userList14 = database11.users;
        database11.load("hi!");
        database.Database database18 = database.Database.getInstance("");
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database18.users = userList27;
        database11.users = userList27;
        java.util.ArrayList<user.User> userList31 = database11.users;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database11.users = userList53;
        database1.users = userList53;
        database.Database database57 = database.Database.getInstance("");
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database59.users = userList66;
        database57.users = userList66;
        java.util.ArrayList<user.User> userList69 = database57.users;
        database.Database database71 = database.Database.getInstance("hi!");
        user.User[] userArray72 = new user.User[] {};
        java.util.ArrayList<user.User> userList73 = new java.util.ArrayList<user.User>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<user.User>) userList73, userArray72);
        database71.users = userList73;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        database71.users = userList78;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        java.util.ArrayList<user.User> userList83 = database81.users;
        database.Database database85 = database.Database.getInstance("hi!");
        user.User[] userArray86 = new user.User[] {};
        java.util.ArrayList<user.User> userList87 = new java.util.ArrayList<user.User>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<user.User>) userList87, userArray86);
        database85.users = userList87;
        database81.users = userList87;
        database71.users = userList87;
        database57.users = userList87;
        java.util.ArrayList<user.User> userList93 = database57.users;
        database1.users = userList93;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userArray72);
        org.junit.Assert.assertArrayEquals(userArray72, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userArray86);
        org.junit.Assert.assertArrayEquals(userArray86, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(userList93);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        java.util.ArrayList<user.User> userList20 = database17.users;
        database17.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database24.users = userList33;
        database17.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList48 = database38.users;
        database17.users = userList48;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database51.load("hi!");
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database51.users = userList67;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        java.util.ArrayList<user.User> userList79 = database72.users;
        database72.load("hi!");
        java.util.ArrayList<user.User> userList82 = database72.users;
        database51.users = userList82;
        java.util.ArrayList<user.User> userList84 = database51.users;
        database17.users = userList84;
        database1.users = userList84;
        database1.update("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass18 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        database17.load("hi!");
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database17.users = userList31;
        database17.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database40.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList51 = database36.users;
        java.util.ArrayList<user.User> userList52 = database36.users;
        java.util.ArrayList<user.User> userList53 = database36.users;
        database17.users = userList53;
        database1.users = userList53;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        java.util.ArrayList<user.User> userList63 = database61.users;
        java.util.ArrayList<user.User> userList64 = database61.users;
        java.util.ArrayList<user.User> userList65 = database61.users;
        database.Database database67 = database.Database.getInstance("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database67.users = userList69;
        database61.users = userList69;
        database61.update("hi!");
        java.util.ArrayList<user.User> userList75 = database61.users;
        database61.update("hi!");
        java.util.ArrayList<user.User> userList78 = database61.users;
        database61.update("hi!");
        java.util.ArrayList<user.User> userList81 = database61.users;
        database1.users = userList81;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        database11.load("hi!");
        database11.update("hi!");
        java.util.ArrayList<user.User> userList22 = database11.users;
        database1.users = userList22;
        database1.load("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database.Database database37 = database.Database.getInstance("hi!");
        user.User[] userArray38 = new user.User[] {};
        java.util.ArrayList<user.User> userList39 = new java.util.ArrayList<user.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<user.User>) userList39, userArray38);
        database37.users = userList39;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database37.users = userList44;
        database27.users = userList44;
        java.util.ArrayList<user.User> userList47 = database27.users;
        database27.load("hi!");
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database51.users = userList55;
        database27.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        java.util.ArrayList<user.User> userList65 = database59.users;
        java.util.ArrayList<user.User> userList66 = database59.users;
        database27.users = userList66;
        java.util.ArrayList<user.User> userList68 = database27.users;
        database1.users = userList68;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertArrayEquals(userArray38, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList30 = database1.users;
        database1.update("hi!");
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        java.util.ArrayList<user.User> userList37 = database34.users;
        database34.load("hi!");
        database.Database database41 = database.Database.getInstance("");
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database41.users = userList50;
        database34.users = userList50;
        database1.users = userList50;
        java.util.ArrayList<user.User> userList55 = null;
        database1.users = userList55;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot((int) (short) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList22 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList22);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        database17.load("hi!");
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database17.users = userList31;
        database17.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database40.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList51 = database36.users;
        java.util.ArrayList<user.User> userList52 = database36.users;
        java.util.ArrayList<user.User> userList53 = database36.users;
        database17.users = userList53;
        database1.users = userList53;
        database1.update("hi!");
        database1.update("hi!");
        java.lang.Class<?> wildcardClass60 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        java.util.ArrayList<user.User> userList29 = database26.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database26.users = userList35;
        database26.update("hi!");
        java.util.ArrayList<user.User> userList40 = database26.users;
        database22.users = userList40;
        database.Database database43 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList44 = database43.users;
        java.util.ArrayList<user.User> userList45 = database43.users;
        database.Database database47 = database.Database.getInstance("hi!");
        user.User[] userArray48 = new user.User[] {};
        java.util.ArrayList<user.User> userList49 = new java.util.ArrayList<user.User>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<user.User>) userList49, userArray48);
        database47.users = userList49;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database47.users = userList54;
        database43.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        user.User[] userArray63 = new user.User[] {};
        java.util.ArrayList<user.User> userList64 = new java.util.ArrayList<user.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<user.User>) userList64, userArray63);
        database62.users = userList64;
        database58.users = userList64;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        java.util.ArrayList<user.User> userList76 = database69.users;
        database58.users = userList76;
        database43.users = userList76;
        database22.users = userList76;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList82 = database22.users;
        database1.users = userList82;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList86 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userArray48);
        org.junit.Assert.assertArrayEquals(userArray48, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertArrayEquals(userArray63, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        java.util.ArrayList<user.User> userList71 = database69.users;
        java.util.ArrayList<user.User> userList72 = database69.users;
        java.util.ArrayList<user.User> userList73 = database69.users;
        database.Database database75 = database.Database.getInstance("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database75.users = userList77;
        database69.users = userList77;
        database1.users = userList77;
        java.util.ArrayList<user.User> userList82 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        database11.load("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database11.users = userList21;
        database11.update("hi!");
        database11.update("hi!");
        java.util.ArrayList<user.User> userList28 = database11.users;
        java.util.ArrayList<user.User> userList29 = database11.users;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList31 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database1.update("hi!");
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        java.util.ArrayList<user.User> userList50 = database43.users;
        database43.load("hi!");
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        java.util.ArrayList<user.User> userList56 = database54.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database54.users = userList60;
        database54.load("hi!");
        java.util.ArrayList<user.User> userList66 = database54.users;
        database43.users = userList66;
        database1.users = userList66;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        java.util.ArrayList<user.User> userList73 = database70.users;
        database70.update("hi!");
        java.util.ArrayList<user.User> userList76 = database70.users;
        database1.users = userList76;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList48 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList30 = database1.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        java.util.ArrayList<user.User> userList38 = database32.users;
        java.util.ArrayList<user.User> userList39 = database32.users;
        database32.load("hi!");
        java.util.ArrayList<user.User> userList42 = database32.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        java.util.ArrayList<user.User> userList47 = database44.users;
        database44.load("hi!");
        database44.load("hi!");
        java.util.ArrayList<user.User> userList52 = database44.users;
        database32.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database76.load("hi!");
        java.util.ArrayList<user.User> userList86 = database76.users;
        database55.users = userList86;
        database32.users = userList86;
        database1.users = userList86;
        java.util.ArrayList<user.User> userList90 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList90);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList83 = database1.users;
        java.util.ArrayList<user.User> userList84 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.update("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database1.users = userList43;
        java.lang.Class<?> wildcardClass47 = userList43.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot28 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        java.lang.Class<?> wildcardClass29 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
        org.junit.Assert.assertNull(parkingSpot28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database.Database database15 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        java.util.ArrayList<user.User> userList22 = database19.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        database19.users = userList28;
        database19.update("hi!");
        java.util.ArrayList<user.User> userList33 = database19.users;
        database15.users = userList33;
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        java.util.ArrayList<user.User> userList39 = database36.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        database36.users = userList45;
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        user.User[] userArray58 = new user.User[] {};
        java.util.ArrayList<user.User> userList59 = new java.util.ArrayList<user.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<user.User>) userList59, userArray58);
        database57.users = userList59;
        database53.users = userList59;
        database49.users = userList59;
        database36.users = userList59;
        java.util.ArrayList<user.User> userList65 = database36.users;
        database15.users = userList65;
        database1.users = userList65;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertArrayEquals(userArray58, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userList65);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        java.util.ArrayList<user.User> userList33 = database30.users;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database40.users = userList44;
        database35.users = userList44;
        database.Database database48 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        user.User[] userArray57 = new user.User[] {};
        java.util.ArrayList<user.User> userList58 = new java.util.ArrayList<user.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<user.User>) userList58, userArray57);
        database56.users = userList58;
        database52.users = userList58;
        database48.users = userList58;
        database35.users = userList58;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database35.users = userList69;
        database30.users = userList69;
        java.util.ArrayList<user.User> userList73 = database30.users;
        java.util.ArrayList<user.User> userList74 = database30.users;
        database1.users = userList74;
        java.util.ArrayList<user.User> userList76 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertArrayEquals(userArray57, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList18);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        java.lang.Class<?> wildcardClass21 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        java.util.ArrayList<user.User> userList18 = database15.users;
        java.util.ArrayList<user.User> userList19 = database15.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        database15.users = userList23;
        database15.update("hi!");
        java.util.ArrayList<user.User> userList29 = database15.users;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList31 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        java.util.ArrayList<user.User> userList26 = database21.users;
        database21.update("hi!");
        java.util.ArrayList<user.User> userList29 = database21.users;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList31 = null;
        database1.users = userList31;
        java.lang.Class<?> wildcardClass33 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList42 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        java.util.ArrayList<user.User> userList14 = null;
        database1.users = userList14;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        database47.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database47.users = userList61;
        database33.users = userList61;
        database1.users = userList61;
        java.util.ArrayList<user.User> userList65 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList65);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database.Database database47 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList48 = database47.users;
        java.util.ArrayList<user.User> userList49 = database47.users;
        java.util.ArrayList<user.User> userList50 = database47.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database52.users = userList56;
        database47.users = userList56;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        java.util.ArrayList<user.User> userList66 = database64.users;
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database64.users = userList70;
        database60.users = userList70;
        database47.users = userList70;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        database.Database database80 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList81 = database80.users;
        database77.users = userList81;
        database47.users = userList81;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList85 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(database80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList85);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        database6.users = userList15;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database23.users = userList29;
        database19.users = userList29;
        database6.users = userList29;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        database6.users = userList40;
        database1.users = userList40;
        java.util.ArrayList<user.User> userList44 = database1.users;
        java.util.ArrayList<user.User> userList45 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList48 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database11.users = userList22;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList27 = database11.users;
        database11.load("hi!");
        java.util.ArrayList<user.User> userList30 = database11.users;
        database1.users = userList30;
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        database33.users = userList43;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        database47.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        database47.users = userList61;
        database33.users = userList61;
        database1.users = userList61;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        java.util.ArrayList<user.User> userList29 = database26.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database26.users = userList35;
        database26.update("hi!");
        java.util.ArrayList<user.User> userList40 = database26.users;
        database22.users = userList40;
        database.Database database43 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList44 = database43.users;
        java.util.ArrayList<user.User> userList45 = database43.users;
        database.Database database47 = database.Database.getInstance("hi!");
        user.User[] userArray48 = new user.User[] {};
        java.util.ArrayList<user.User> userList49 = new java.util.ArrayList<user.User>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<user.User>) userList49, userArray48);
        database47.users = userList49;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database47.users = userList54;
        database43.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        database.Database database62 = database.Database.getInstance("hi!");
        user.User[] userArray63 = new user.User[] {};
        java.util.ArrayList<user.User> userList64 = new java.util.ArrayList<user.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<user.User>) userList64, userArray63);
        database62.users = userList64;
        database58.users = userList64;
        database.Database database69 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList70 = database69.users;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database69.users = userList73;
        java.util.ArrayList<user.User> userList75 = database69.users;
        java.util.ArrayList<user.User> userList76 = database69.users;
        database58.users = userList76;
        database43.users = userList76;
        database22.users = userList76;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList82 = database22.users;
        database1.users = userList82;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userArray48);
        org.junit.Assert.assertArrayEquals(userArray48, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertArrayEquals(userArray63, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database55.users = userList59;
        java.util.ArrayList<user.User> userList61 = database55.users;
        database55.load("hi!");
        user.User[] userArray64 = new user.User[] {};
        java.util.ArrayList<user.User> userList65 = new java.util.ArrayList<user.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<user.User>) userList65, userArray64);
        database55.users = userList65;
        database55.update("hi!");
        database55.update("hi!");
        java.util.ArrayList<user.User> userList72 = database55.users;
        java.util.ArrayList<user.User> userList73 = database55.users;
        database1.users = userList73;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertArrayEquals(userArray64, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = null;
        database1.users = userList18;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.lang.Class<?> wildcardClass9 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        java.util.ArrayList<user.User> userList22 = database19.users;
        database1.users = userList22;
        java.lang.Class<?> wildcardClass24 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList9);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass49 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database1.update("hi!");
        java.lang.Class<?> wildcardClass35 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList54 = database1.users;
        java.util.ArrayList<user.User> userList55 = database1.users;
        java.util.ArrayList<user.User> userList56 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        java.util.ArrayList<user.User> userList20 = database17.users;
        database17.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database24.users = userList33;
        database17.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList48 = database38.users;
        database17.users = userList48;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database51.load("hi!");
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database51.users = userList67;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        java.util.ArrayList<user.User> userList79 = database72.users;
        database72.load("hi!");
        java.util.ArrayList<user.User> userList82 = database72.users;
        database51.users = userList82;
        java.util.ArrayList<user.User> userList84 = database51.users;
        database17.users = userList84;
        database1.users = userList84;
        java.util.ArrayList<user.User> userList87 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList87);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        java.util.ArrayList<user.User> userList52 = database46.users;
        java.util.ArrayList<user.User> userList53 = database46.users;
        database46.load("hi!");
        java.util.ArrayList<user.User> userList56 = database46.users;
        database33.users = userList56;
        java.util.ArrayList<user.User> userList58 = database33.users;
        java.util.ArrayList<user.User> userList59 = database33.users;
        database1.users = userList59;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        database.Database database12 = database.Database.getInstance("");
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database14.users = userList21;
        database12.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        java.util.ArrayList<user.User> userList35 = database25.users;
        database12.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList47 = database38.users;
        database12.users = userList47;
        database1.users = userList47;
        java.util.ArrayList<user.User> userList50 = database1.users;
        java.util.ArrayList<user.User> userList51 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database11.users = userList15;
        java.util.ArrayList<user.User> userList17 = database11.users;
        java.util.ArrayList<user.User> userList18 = database11.users;
        database11.load("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database11.users = userList22;
        database.Database database26 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        database.Database database30 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList31 = database30.users;
        java.util.ArrayList<user.User> userList32 = database30.users;
        java.util.ArrayList<user.User> userList33 = database30.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database30.users = userList39;
        database30.update("hi!");
        java.util.ArrayList<user.User> userList44 = database30.users;
        database26.users = userList44;
        database26.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList50 = database49.users;
        java.util.ArrayList<user.User> userList51 = database49.users;
        java.util.ArrayList<user.User> userList52 = database49.users;
        database49.load("hi!");
        database49.load("hi!");
        java.util.ArrayList<user.User> userList57 = database49.users;
        java.util.ArrayList<user.User> userList58 = database49.users;
        database26.users = userList58;
        database11.users = userList58;
        database1.users = userList58;
        java.lang.Class<?> wildcardClass62 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        database1.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database46.users = userList50;
        database40.users = userList50;
        database40.load("hi!");
        java.util.ArrayList<user.User> userList55 = database40.users;
        database1.users = userList55;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList55);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList31 = database22.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        java.util.ArrayList<user.User> userList36 = database33.users;
        java.util.ArrayList<user.User> userList37 = database33.users;
        java.util.ArrayList<user.User> userList38 = database33.users;
        database22.users = userList38;
        java.util.ArrayList<user.User> userList40 = database22.users;
        database1.users = userList40;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList40);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database16.users = userList34;
        database1.users = userList34;
        database1.load("hi!");
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database40.users = userList51;
        database1.users = userList51;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        java.util.ArrayList<user.User> userList26 = database23.users;
        java.util.ArrayList<user.User> userList27 = database23.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database23.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        java.util.ArrayList<user.User> userList32 = database24.users;
        java.util.ArrayList<user.User> userList33 = database24.users;
        database1.users = userList33;
        database1.load("hi!");
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.lang.Class<?> wildcardClass16 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database.Database database53 = database.Database.getInstance("hi!");
        user.User[] userArray54 = new user.User[] {};
        java.util.ArrayList<user.User> userList55 = new java.util.ArrayList<user.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<user.User>) userList55, userArray54);
        database53.users = userList55;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database53.users = userList60;
        database43.users = userList60;
        java.util.ArrayList<user.User> userList63 = database43.users;
        database43.load("hi!");
        database43.load("hi!");
        database43.update("hi!");
        java.util.ArrayList<user.User> userList70 = database43.users;
        java.util.ArrayList<user.User> userList71 = database43.users;
        database1.users = userList71;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertArrayEquals(userArray54, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.load("hi!");
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database.Database database33 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList34 = database33.users;
        java.util.ArrayList<user.User> userList35 = database33.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database37.users = userList43;
        database33.users = userList43;
        database20.users = userList43;
        java.util.ArrayList<user.User> userList49 = database20.users;
        java.util.ArrayList<user.User> userList50 = database20.users;
        java.util.ArrayList<user.User> userList51 = database20.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = null;
        database1.users = userList53;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("");
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database18.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database31.load("hi!");
        java.util.ArrayList<user.User> userList41 = database31.users;
        database18.users = userList41;
        java.util.ArrayList<user.User> userList43 = database18.users;
        java.util.ArrayList<user.User> userList44 = database18.users;
        java.util.ArrayList<user.User> userList45 = database18.users;
        database1.users = userList45;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        java.util.ArrayList<user.User> userList45 = database42.users;
        database42.load("hi!");
        database.Database database49 = database.Database.getInstance("");
        database.Database database51 = database.Database.getInstance("hi!");
        user.User[] userArray52 = new user.User[] {};
        java.util.ArrayList<user.User> userList53 = new java.util.ArrayList<user.User>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<user.User>) userList53, userArray52);
        database51.users = userList53;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        database51.users = userList58;
        database49.users = userList58;
        database42.users = userList58;
        database1.users = userList58;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userArray52);
        org.junit.Assert.assertArrayEquals(userArray52, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList21 = database20.users;
        java.util.ArrayList<user.User> userList22 = database20.users;
        java.util.ArrayList<user.User> userList23 = database20.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database20.users = userList29;
        database20.update("hi!");
        java.util.ArrayList<user.User> userList34 = database20.users;
        database16.users = userList34;
        database16.load("hi!");
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database39.load("hi!");
        database39.load("hi!");
        java.util.ArrayList<user.User> userList47 = database39.users;
        java.util.ArrayList<user.User> userList48 = database39.users;
        database16.users = userList48;
        database1.users = userList48;
        java.util.ArrayList<user.User> userList51 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.update("hi!");
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database23.users = userList27;
        database18.users = userList27;
        database18.update("hi!");
        java.util.ArrayList<user.User> userList32 = database18.users;
        database14.users = userList32;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        user.User[] userArray40 = new user.User[] {};
        java.util.ArrayList<user.User> userList41 = new java.util.ArrayList<user.User>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<user.User>) userList41, userArray40);
        database39.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database39.users = userList46;
        database35.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        database.Database database54 = database.Database.getInstance("hi!");
        user.User[] userArray55 = new user.User[] {};
        java.util.ArrayList<user.User> userList56 = new java.util.ArrayList<user.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<user.User>) userList56, userArray55);
        database54.users = userList56;
        database50.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database50.users = userList68;
        database35.users = userList68;
        database14.users = userList68;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList74 = database14.users;
        database1.users = userList74;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userArray40);
        org.junit.Assert.assertArrayEquals(userArray40, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertArrayEquals(userArray55, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList74);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        java.util.ArrayList<user.User> userList57 = database53.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database53.users = userList61;
        database31.users = userList61;
        java.util.ArrayList<user.User> userList66 = database31.users;
        database1.users = userList66;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList70 = database1.users;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass73 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList9 = database1.users;
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.update("hi!");
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database23.users = userList27;
        database18.users = userList27;
        database18.update("hi!");
        java.util.ArrayList<user.User> userList32 = database18.users;
        database14.users = userList32;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        database.Database database39 = database.Database.getInstance("hi!");
        user.User[] userArray40 = new user.User[] {};
        java.util.ArrayList<user.User> userList41 = new java.util.ArrayList<user.User>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<user.User>) userList41, userArray40);
        database39.users = userList41;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database39.users = userList46;
        database35.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        java.util.ArrayList<user.User> userList52 = database50.users;
        database.Database database54 = database.Database.getInstance("hi!");
        user.User[] userArray55 = new user.User[] {};
        java.util.ArrayList<user.User> userList56 = new java.util.ArrayList<user.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<user.User>) userList56, userArray55);
        database54.users = userList56;
        database50.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database50.users = userList68;
        database35.users = userList68;
        database14.users = userList68;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList74 = database14.users;
        database1.users = userList74;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userArray40);
        org.junit.Assert.assertArrayEquals(userArray40, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertArrayEquals(userArray55, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList74);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.util.ArrayList<user.User> userList22 = database1.users;
        database1.update("hi!");
        database.Database database26 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList27 = database26.users;
        java.util.ArrayList<user.User> userList28 = database26.users;
        java.util.ArrayList<user.User> userList29 = database26.users;
        database26.load("hi!");
        database.Database database33 = database.Database.getInstance("");
        database.Database database35 = database.Database.getInstance("hi!");
        user.User[] userArray36 = new user.User[] {};
        java.util.ArrayList<user.User> userList37 = new java.util.ArrayList<user.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<user.User>) userList37, userArray36);
        database35.users = userList37;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database35.users = userList42;
        database33.users = userList42;
        database26.users = userList42;
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        java.util.ArrayList<user.User> userList54 = database47.users;
        database47.load("hi!");
        java.util.ArrayList<user.User> userList57 = database47.users;
        database26.users = userList57;
        java.util.ArrayList<user.User> userList59 = database26.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database.Database database67 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList68 = database67.users;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database67.users = userList71;
        database61.users = userList71;
        java.util.ArrayList<user.User> userList74 = database61.users;
        database26.users = userList74;
        database1.users = userList74;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertArrayEquals(userArray36, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList74);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        java.lang.Class<?> wildcardClass22 = userList21.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database29.users = userList33;
        java.util.ArrayList<user.User> userList35 = database29.users;
        database29.load("hi!");
        java.util.ArrayList<user.User> userList38 = database29.users;
        database1.users = userList38;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList42 = database1.users;
        java.util.ArrayList<user.User> userList43 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot23 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        java.util.ArrayList<user.User> userList18 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        database17.users = userList23;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database28.users = userList32;
        java.util.ArrayList<user.User> userList34 = database28.users;
        java.util.ArrayList<user.User> userList35 = database28.users;
        database17.users = userList35;
        java.util.ArrayList<user.User> userList37 = database17.users;
        java.util.ArrayList<user.User> userList38 = database17.users;
        database17.update("hi!");
        database17.load("hi!");
        java.util.ArrayList<user.User> userList43 = database17.users;
        database1.users = userList43;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList43);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("hi!");
        user.User[] userArray25 = new user.User[] {};
        java.util.ArrayList<user.User> userList26 = new java.util.ArrayList<user.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<user.User>) userList26, userArray25);
        database24.users = userList26;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database24.users = userList34;
        java.util.ArrayList<user.User> userList37 = null;
        database24.users = userList37;
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database24.users = userList42;
        database1.users = userList42;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertArrayEquals(userArray25, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList26 = database1.users;
        java.util.ArrayList<user.User> userList27 = database1.users;
        java.util.ArrayList<user.User> userList28 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList32 = database22.users;
        database1.users = userList32;
        database.Database database35 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList36 = database35.users;
        java.util.ArrayList<user.User> userList37 = database35.users;
        java.util.ArrayList<user.User> userList38 = database35.users;
        database35.load("hi!");
        database.Database database42 = database.Database.getInstance("");
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database42.users = userList51;
        database35.users = userList51;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database56.users = userList60;
        java.util.ArrayList<user.User> userList62 = database56.users;
        java.util.ArrayList<user.User> userList63 = database56.users;
        database56.load("hi!");
        java.util.ArrayList<user.User> userList66 = database56.users;
        database35.users = userList66;
        java.util.ArrayList<user.User> userList68 = database35.users;
        database1.users = userList68;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database1.users = userList72;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database75.users = userList79;
        java.util.ArrayList<user.User> userList81 = database75.users;
        database75.load("hi!");
        database75.update("hi!");
        database75.update("hi!");
        java.util.ArrayList<user.User> userList88 = database75.users;
        database1.users = userList88;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database1.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList25 = database24.users;
        java.util.ArrayList<user.User> userList26 = database24.users;
        java.util.ArrayList<user.User> userList27 = database24.users;
        database24.load("hi!");
        database24.load("hi!");
        java.util.ArrayList<user.User> userList32 = database24.users;
        java.util.ArrayList<user.User> userList33 = database24.users;
        database1.users = userList33;
        database1.load("hi!");
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList50 = database38.users;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        java.util.ArrayList<user.User> userList55 = database52.users;
        java.util.ArrayList<user.User> userList56 = database52.users;
        database.Database database58 = database.Database.getInstance("hi!");
        user.User[] userArray59 = new user.User[] {};
        java.util.ArrayList<user.User> userList60 = new java.util.ArrayList<user.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<user.User>) userList60, userArray59);
        database58.users = userList60;
        database52.users = userList60;
        database52.update("hi!");
        java.util.ArrayList<user.User> userList66 = database52.users;
        database38.users = userList66;
        database1.users = userList66;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertArrayEquals(userArray59, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database40.load("hi!");
        database.Database database47 = database.Database.getInstance("");
        database.Database database49 = database.Database.getInstance("hi!");
        user.User[] userArray50 = new user.User[] {};
        java.util.ArrayList<user.User> userList51 = new java.util.ArrayList<user.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<user.User>) userList51, userArray50);
        database49.users = userList51;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        database49.users = userList56;
        database47.users = userList56;
        database40.users = userList56;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database.Database database64 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList65 = database64.users;
        database61.users = userList65;
        java.util.ArrayList<user.User> userList67 = database61.users;
        java.util.ArrayList<user.User> userList68 = database61.users;
        database61.load("hi!");
        java.util.ArrayList<user.User> userList71 = database61.users;
        database40.users = userList71;
        database.Database database74 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList75 = database74.users;
        java.util.ArrayList<user.User> userList76 = database74.users;
        java.util.ArrayList<user.User> userList77 = database74.users;
        database40.users = userList77;
        database1.users = userList77;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertArrayEquals(userArray50, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList47 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList47);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database.Database database26 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList27 = database26.users;
        database20.users = userList27;
        database16.users = userList27;
        database16.load("hi!");
        java.util.ArrayList<user.User> userList32 = database16.users;
        java.util.ArrayList<user.User> userList33 = database16.users;
        database1.users = userList33;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database36.users = userList47;
        java.util.ArrayList<user.User> userList50 = database36.users;
        database1.users = userList50;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database.Database database56 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList57 = database56.users;
        database53.users = userList57;
        java.util.ArrayList<user.User> userList59 = database53.users;
        database1.users = userList59;
        java.util.ArrayList<user.User> userList61 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList61);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database19.users = userList23;
        java.util.ArrayList<user.User> userList25 = database19.users;
        database19.load("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database19.users = userList29;
        java.util.ArrayList<user.User> userList32 = database19.users;
        database1.users = userList32;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userList32);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database5.update("hi!");
        java.util.ArrayList<user.User> userList19 = database5.users;
        database1.users = userList19;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        java.util.ArrayList<user.User> userList39 = database37.users;
        database.Database database41 = database.Database.getInstance("hi!");
        user.User[] userArray42 = new user.User[] {};
        java.util.ArrayList<user.User> userList43 = new java.util.ArrayList<user.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<user.User>) userList43, userArray42);
        database41.users = userList43;
        database37.users = userList43;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database48.users = userList52;
        java.util.ArrayList<user.User> userList54 = database48.users;
        java.util.ArrayList<user.User> userList55 = database48.users;
        database37.users = userList55;
        database22.users = userList55;
        database1.users = userList55;
        java.lang.Class<?> wildcardClass59 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertArrayEquals(userArray42, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList16 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNull(userList16);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList38 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList41 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNull(userList4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) 'a');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        java.lang.Class<?> wildcardClass57 = userList56.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database1.load("hi!");
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database1.users = userList24;
        java.util.ArrayList<user.User> userList27 = database1.users;
        java.lang.Class<?> wildcardClass28 = userList27.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        java.util.ArrayList<user.User> userList11 = database1.users;
        java.lang.Class<?> wildcardClass12 = userList11.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        java.util.ArrayList<user.User> userList28 = database25.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database30.users = userList34;
        database25.users = userList34;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database42.users = userList48;
        database38.users = userList48;
        database25.users = userList48;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        java.util.ArrayList<user.User> userList75 = database55.users;
        database25.users = userList75;
        database1.users = userList75;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList80 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList80);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        java.util.ArrayList<user.User> userList13 = database11.users;
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database11.users = userList17;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database22.users = userList26;
        java.util.ArrayList<user.User> userList28 = database22.users;
        java.util.ArrayList<user.User> userList29 = database22.users;
        database11.users = userList29;
        java.util.ArrayList<user.User> userList31 = database11.users;
        java.util.ArrayList<user.User> userList32 = database11.users;
        database1.users = userList32;
        java.util.ArrayList<user.User> userList34 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList34);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        user.User[] userArray34 = new user.User[] {};
        java.util.ArrayList<user.User> userList35 = new java.util.ArrayList<user.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<user.User>) userList35, userArray34);
        database33.users = userList35;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database33.users = userList40;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database33.users = userList50;
        java.util.ArrayList<user.User> userList53 = database33.users;
        database1.users = userList53;
        database1.update("hi!");
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertArrayEquals(userArray34, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList12 = database1.users;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        java.util.ArrayList<user.User> userList25 = database23.users;
        java.util.ArrayList<user.User> userList26 = database23.users;
        database14.users = userList26;
        database1.users = userList26;
        java.util.ArrayList<user.User> userList29 = database1.users;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        database31.load("hi!");
        java.util.ArrayList<user.User> userList40 = database31.users;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        user.User[] userArray47 = new user.User[] {};
        java.util.ArrayList<user.User> userList48 = new java.util.ArrayList<user.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<user.User>) userList48, userArray47);
        database46.users = userList48;
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        database46.users = userList53;
        database42.users = userList53;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database68.users = userList72;
        java.util.ArrayList<user.User> userList74 = database68.users;
        java.util.ArrayList<user.User> userList75 = database68.users;
        database57.users = userList75;
        database42.users = userList75;
        database31.users = userList75;
        java.util.ArrayList<user.User> userList79 = database31.users;
        database1.users = userList79;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertArrayEquals(userArray47, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database1.users = userList43;
        database1.load("hi!");
        database.Database database48 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        java.util.ArrayList<user.User> userList51 = database48.users;
        database48.load("hi!");
        database48.load("hi!");
        java.util.ArrayList<user.User> userList56 = database48.users;
        database.Database database58 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList59 = database58.users;
        java.util.ArrayList<user.User> userList60 = database58.users;
        java.util.ArrayList<user.User> userList61 = database58.users;
        database58.load("hi!");
        database58.load("hi!");
        java.util.ArrayList<user.User> userList66 = database58.users;
        database48.users = userList66;
        database1.users = userList66;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList66);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database1.users = userList9;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList18);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList54 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList54);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        database1.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        database1.users = userList40;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot25 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database15.users = userList21;
        database5.users = userList21;
        database1.users = userList21;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        database.Database database16 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database1.users = userList17;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        java.util.ArrayList<user.User> userList26 = database21.users;
        database21.update("hi!");
        java.util.ArrayList<user.User> userList29 = database21.users;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList31 = null;
        database1.users = userList31;
        database.Database database34 = database.Database.getInstance("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database34.users = userList36;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        database34.users = userList41;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database44.users = userList51;
        database34.users = userList51;
        database1.users = userList51;
        java.lang.Class<?> wildcardClass55 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList52 = database1.users;
        java.util.ArrayList<user.User> userList53 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database27.users = userList33;
        database17.users = userList33;
        database1.users = userList33;
        database1.update("hi!");
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList51 = database42.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database53.users = userList63;
        database.Database database69 = database.Database.getInstance("hi!");
        user.User[] userArray70 = new user.User[] {};
        java.util.ArrayList<user.User> userList71 = new java.util.ArrayList<user.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<user.User>) userList71, userArray70);
        database69.users = userList71;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database69.users = userList76;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        java.util.ArrayList<user.User> userList81 = database79.users;
        database.Database database83 = database.Database.getInstance("hi!");
        user.User[] userArray84 = new user.User[] {};
        java.util.ArrayList<user.User> userList85 = new java.util.ArrayList<user.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<user.User>) userList85, userArray84);
        database83.users = userList85;
        database79.users = userList85;
        database69.users = userList85;
        database53.users = userList85;
        database42.users = userList85;
        java.util.ArrayList<user.User> userList92 = database42.users;
        java.util.ArrayList<user.User> userList93 = database42.users;
        java.util.ArrayList<user.User> userList94 = database42.users;
        database1.users = userList94;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertArrayEquals(userArray70, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database83);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertArrayEquals(userArray84, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList18 = database17.users;
        java.util.ArrayList<user.User> userList19 = database17.users;
        java.util.ArrayList<user.User> userList20 = database17.users;
        database17.load("hi!");
        database.Database database24 = database.Database.getInstance("");
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database24.users = userList33;
        database17.users = userList33;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database38.users = userList42;
        java.util.ArrayList<user.User> userList44 = database38.users;
        java.util.ArrayList<user.User> userList45 = database38.users;
        database38.load("hi!");
        java.util.ArrayList<user.User> userList48 = database38.users;
        database17.users = userList48;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        java.util.ArrayList<user.User> userList54 = database51.users;
        database51.load("hi!");
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database51.users = userList67;
        database.Database database72 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList73 = database72.users;
        database.Database database75 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList76 = database75.users;
        database72.users = userList76;
        java.util.ArrayList<user.User> userList78 = database72.users;
        java.util.ArrayList<user.User> userList79 = database72.users;
        database72.load("hi!");
        java.util.ArrayList<user.User> userList82 = database72.users;
        database51.users = userList82;
        java.util.ArrayList<user.User> userList84 = database51.users;
        database17.users = userList84;
        database1.users = userList84;
        database1.update("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        java.util.ArrayList<user.User> userList9 = database1.users;
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        java.util.ArrayList<user.User> userList16 = database13.users;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        java.util.ArrayList<user.User> userList21 = database18.users;
        database18.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        database.Database database27 = database.Database.getInstance("hi!");
        user.User[] userArray28 = new user.User[] {};
        java.util.ArrayList<user.User> userList29 = new java.util.ArrayList<user.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<user.User>) userList29, userArray28);
        database27.users = userList29;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database27.users = userList34;
        database25.users = userList34;
        database18.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database18.users = userList46;
        database13.users = userList46;
        database1.users = userList46;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database51.users = userList55;
        java.util.ArrayList<user.User> userList57 = database51.users;
        java.util.ArrayList<user.User> userList58 = database51.users;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database60.users = userList69;
        database.Database database73 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList74 = database73.users;
        java.util.ArrayList<user.User> userList75 = database73.users;
        database.Database database77 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList78 = database77.users;
        java.util.ArrayList<user.User> userList79 = database77.users;
        database.Database database81 = database.Database.getInstance("hi!");
        user.User[] userArray82 = new user.User[] {};
        java.util.ArrayList<user.User> userList83 = new java.util.ArrayList<user.User>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<user.User>) userList83, userArray82);
        database81.users = userList83;
        database77.users = userList83;
        database73.users = userList83;
        database60.users = userList83;
        database51.users = userList83;
        database1.users = userList83;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertArrayEquals(userArray28, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(database77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userArray82);
        org.junit.Assert.assertArrayEquals(userArray82, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database1.users = userList12;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList19 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        java.lang.Class<?> wildcardClass15 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = parkingSpot16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList15 = database1.users;
        java.util.ArrayList<user.User> userList16 = database1.users;
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList20 = database1.users;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database23.load("hi!");
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        java.util.ArrayList<user.User> userList30 = database28.users;
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database28.users = userList34;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database39.users = userList43;
        java.util.ArrayList<user.User> userList45 = database39.users;
        java.util.ArrayList<user.User> userList46 = database39.users;
        database28.users = userList46;
        database23.users = userList46;
        database1.users = userList46;
        java.util.ArrayList<user.User> userList50 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList53 = database1.users;
        java.lang.Class<?> wildcardClass54 = userList53.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        database1.update("hi!");
        database1.load("hi!");
        database1.load("hi!");
        database1.update("hi!");
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        database21.users = userList31;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        java.util.ArrayList<user.User> userList41 = database35.users;
        database35.load("hi!");
        database35.update("hi!");
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        java.util.ArrayList<user.User> userList49 = database47.users;
        database35.users = userList49;
        database21.users = userList49;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        java.util.ArrayList<user.User> userList56 = database53.users;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        database58.users = userList62;
        database53.users = userList62;
        database53.update("hi!");
        java.util.ArrayList<user.User> userList67 = database53.users;
        database21.users = userList67;
        database1.users = userList67;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList67);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        database17.load("hi!");
        database17.update("hi!");
        database.Database database29 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        database17.users = userList31;
        database17.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        database.Database database44 = database.Database.getInstance("hi!");
        user.User[] userArray45 = new user.User[] {};
        java.util.ArrayList<user.User> userList46 = new java.util.ArrayList<user.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<user.User>) userList46, userArray45);
        database44.users = userList46;
        database40.users = userList46;
        database36.users = userList46;
        java.util.ArrayList<user.User> userList51 = database36.users;
        java.util.ArrayList<user.User> userList52 = database36.users;
        java.util.ArrayList<user.User> userList53 = database36.users;
        database17.users = userList53;
        database1.users = userList53;
        database1.update("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        java.util.ArrayList<user.User> userList65 = database59.users;
        database59.load("hi!");
        database59.update("hi!");
        database59.load("hi!");
        database59.update("hi!");
        java.util.ArrayList<user.User> userList74 = database59.users;
        java.util.ArrayList<user.User> userList75 = database59.users;
        database1.users = userList75;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertArrayEquals(userArray45, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) 10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot24 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot26 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot28 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot29 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNull(parkingSpot24);
        org.junit.Assert.assertNull(parkingSpot26);
        org.junit.Assert.assertNull(parkingSpot28);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database.Database database12 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList13 = database12.users;
        java.util.ArrayList<user.User> userList14 = database12.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        java.util.ArrayList<user.User> userList18 = database16.users;
        database.Database database20 = database.Database.getInstance("hi!");
        user.User[] userArray21 = new user.User[] {};
        java.util.ArrayList<user.User> userList22 = new java.util.ArrayList<user.User>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<user.User>) userList22, userArray21);
        database20.users = userList22;
        database16.users = userList22;
        database12.users = userList22;
        database.Database database28 = database.Database.getInstance("hi!");
        user.User[] userArray29 = new user.User[] {};
        java.util.ArrayList<user.User> userList30 = new java.util.ArrayList<user.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<user.User>) userList30, userArray29);
        database28.users = userList30;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database28.users = userList35;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database38.users = userList44;
        database28.users = userList44;
        database12.users = userList44;
        database1.users = userList44;
        java.util.ArrayList<user.User> userList51 = database1.users;
        database.Database database53 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList54 = database53.users;
        java.util.ArrayList<user.User> userList55 = database53.users;
        database.Database database57 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList58 = database57.users;
        java.util.ArrayList<user.User> userList59 = database57.users;
        database.Database database61 = database.Database.getInstance("hi!");
        user.User[] userArray62 = new user.User[] {};
        java.util.ArrayList<user.User> userList63 = new java.util.ArrayList<user.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<user.User>) userList63, userArray62);
        database61.users = userList63;
        database57.users = userList63;
        database53.users = userList63;
        java.util.ArrayList<user.User> userList68 = database53.users;
        database1.users = userList68;
        database1.load("hi!");
        java.lang.Class<?> wildcardClass72 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userArray21);
        org.junit.Assert.assertArrayEquals(userArray21, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertArrayEquals(userArray29, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(database57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertArrayEquals(userArray62, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        database.Database database14 = database.Database.getInstance("hi!");
        user.User[] userArray15 = new user.User[] {};
        java.util.ArrayList<user.User> userList16 = new java.util.ArrayList<user.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<user.User>) userList16, userArray15);
        database14.users = userList16;
        database10.users = userList16;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database21.users = userList25;
        java.util.ArrayList<user.User> userList27 = database21.users;
        java.util.ArrayList<user.User> userList28 = database21.users;
        database10.users = userList28;
        java.util.ArrayList<user.User> userList30 = database10.users;
        database10.load("hi!");
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList39 = database38.users;
        java.util.ArrayList<user.User> userList40 = database38.users;
        java.util.ArrayList<user.User> userList41 = database38.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        database38.users = userList47;
        database.Database database51 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database55.users = userList61;
        database51.users = userList61;
        database38.users = userList61;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database68.users = userList72;
        database38.users = userList72;
        java.util.ArrayList<user.User> userList75 = database38.users;
        database34.users = userList75;
        database10.users = userList75;
        java.util.ArrayList<user.User> userList78 = database10.users;
        database1.users = userList78;
        java.util.ArrayList<user.User> userList80 = null;
        database1.users = userList80;
        java.util.ArrayList<user.User> userList82 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertArrayEquals(userArray15, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNull(userList82);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        java.util.ArrayList<user.User> userList8 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList11 = database1.users;
        database1.load("hi!");
        database.Database database15 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList16 = database15.users;
        java.util.ArrayList<user.User> userList17 = database15.users;
        database.Database database19 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList20 = database19.users;
        java.util.ArrayList<user.User> userList21 = database19.users;
        database.Database database23 = database.Database.getInstance("hi!");
        user.User[] userArray24 = new user.User[] {};
        java.util.ArrayList<user.User> userList25 = new java.util.ArrayList<user.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<user.User>) userList25, userArray24);
        database23.users = userList25;
        database19.users = userList25;
        database15.users = userList25;
        database15.update("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        database33.load("hi!");
        java.util.ArrayList<user.User> userList42 = database33.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database48.users = userList54;
        database44.users = userList54;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database60.users = userList76;
        database44.users = userList76;
        database33.users = userList76;
        database15.users = userList76;
        database1.users = userList76;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNull(userList5);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNull(userList8);
        org.junit.Assert.assertNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNull(userList16);
        org.junit.Assert.assertNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNull(userList20);
        org.junit.Assert.assertNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertArrayEquals(userArray24, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList32 = database31.users;
        java.util.ArrayList<user.User> userList33 = database31.users;
        java.util.ArrayList<user.User> userList34 = database31.users;
        database31.load("hi!");
        database.Database database38 = database.Database.getInstance("");
        database.Database database40 = database.Database.getInstance("hi!");
        user.User[] userArray41 = new user.User[] {};
        java.util.ArrayList<user.User> userList42 = new java.util.ArrayList<user.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<user.User>) userList42, userArray41);
        database40.users = userList42;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database40.users = userList47;
        database38.users = userList47;
        database31.users = userList47;
        java.util.ArrayList<user.User> userList51 = database31.users;
        database1.users = userList51;
        java.util.ArrayList<user.User> userList53 = database1.users;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database55.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList86 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertArrayEquals(userArray41, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((-1));
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        java.util.ArrayList<user.User> userList5 = database1.users;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.load("hi!");
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList23 = null;
        database14.users = userList23;
        database14.load("hi!");
        database14.load("hi!");
        database.Database database30 = database.Database.getInstance("hi!");
        database.Database database32 = database.Database.getInstance("hi!");
        user.User[] userArray33 = new user.User[] {};
        java.util.ArrayList<user.User> userList34 = new java.util.ArrayList<user.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<user.User>) userList34, userArray33);
        database32.users = userList34;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database32.users = userList39;
        database.Database database42 = database.Database.getInstance("hi!");
        user.User[] userArray43 = new user.User[] {};
        java.util.ArrayList<user.User> userList44 = new java.util.ArrayList<user.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<user.User>) userList44, userArray43);
        database42.users = userList44;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database42.users = userList49;
        database32.users = userList49;
        java.util.ArrayList<user.User> userList52 = database32.users;
        database32.load("hi!");
        database32.update("hi!");
        database32.update("hi!");
        java.util.ArrayList<user.User> userList59 = database32.users;
        database30.users = userList59;
        database14.users = userList59;
        database1.users = userList59;
        java.util.ArrayList<user.User> userList63 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertArrayEquals(userArray33, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertArrayEquals(userArray43, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList63);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) '4');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database1.users = userList8;
        database.Database database11 = database.Database.getInstance("hi!");
        user.User[] userArray12 = new user.User[] {};
        java.util.ArrayList<user.User> userList13 = new java.util.ArrayList<user.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<user.User>) userList13, userArray12);
        database11.users = userList13;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database11.users = userList18;
        database1.users = userList18;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database.Database database23 = database.Database.getInstance("");
        database.Database database25 = database.Database.getInstance("hi!");
        user.User[] userArray26 = new user.User[] {};
        java.util.ArrayList<user.User> userList27 = new java.util.ArrayList<user.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<user.User>) userList27, userArray26);
        database25.users = userList27;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database25.users = userList32;
        database23.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database.Database database39 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList40 = database39.users;
        database36.users = userList40;
        java.util.ArrayList<user.User> userList42 = database36.users;
        java.util.ArrayList<user.User> userList43 = database36.users;
        database36.load("hi!");
        java.util.ArrayList<user.User> userList46 = database36.users;
        database23.users = userList46;
        database1.users = userList46;
        database1.update("hi!");
        database.Database database52 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList53 = database52.users;
        java.util.ArrayList<user.User> userList54 = database52.users;
        database.Database database56 = database.Database.getInstance("hi!");
        user.User[] userArray57 = new user.User[] {};
        java.util.ArrayList<user.User> userList58 = new java.util.ArrayList<user.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<user.User>) userList58, userArray57);
        database56.users = userList58;
        database52.users = userList58;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        java.util.ArrayList<user.User> userList69 = database63.users;
        java.util.ArrayList<user.User> userList70 = database63.users;
        database52.users = userList70;
        java.util.ArrayList<user.User> userList72 = database52.users;
        java.util.ArrayList<user.User> userList73 = database52.users;
        database52.update("hi!");
        database52.update("hi!");
        database52.load("hi!");
        java.util.ArrayList<user.User> userList80 = database52.users;
        database1.users = userList80;
        java.util.ArrayList<user.User> userList82 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertArrayEquals(userArray12, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertArrayEquals(userArray26, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database56);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertArrayEquals(userArray57, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.load("hi!");
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList60 = database59.users;
        java.util.ArrayList<user.User> userList61 = database59.users;
        java.util.ArrayList<user.User> userList62 = database59.users;
        database59.load("hi!");
        database.Database database66 = database.Database.getInstance("");
        database.Database database68 = database.Database.getInstance("hi!");
        user.User[] userArray69 = new user.User[] {};
        java.util.ArrayList<user.User> userList70 = new java.util.ArrayList<user.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<user.User>) userList70, userArray69);
        database68.users = userList70;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database68.users = userList75;
        database66.users = userList75;
        database59.users = userList75;
        java.util.ArrayList<user.User> userList79 = database59.users;
        database29.users = userList79;
        java.util.ArrayList<user.User> userList81 = database29.users;
        database1.users = userList81;
        java.util.ArrayList<user.User> userList83 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList86 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertArrayEquals(userArray69, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList17);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        java.util.ArrayList<user.User> userList6 = database1.users;
        database1.update("hi!");
        database.Database database10 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList11 = database10.users;
        java.util.ArrayList<user.User> userList12 = database10.users;
        java.util.ArrayList<user.User> userList13 = database10.users;
        database10.load("hi!");
        database.Database database17 = database.Database.getInstance("");
        database.Database database19 = database.Database.getInstance("hi!");
        user.User[] userArray20 = new user.User[] {};
        java.util.ArrayList<user.User> userList21 = new java.util.ArrayList<user.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<user.User>) userList21, userArray20);
        database19.users = userList21;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database19.users = userList26;
        database17.users = userList26;
        database10.users = userList26;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        java.util.ArrayList<user.User> userList37 = database31.users;
        java.util.ArrayList<user.User> userList38 = database31.users;
        database10.users = userList38;
        database1.users = userList38;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertArrayEquals(userArray20, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database6.users = userList12;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database.Database database20 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList21 = database20.users;
        database17.users = userList21;
        java.util.ArrayList<user.User> userList23 = database17.users;
        java.util.ArrayList<user.User> userList24 = database17.users;
        database6.users = userList24;
        database6.load("hi!");
        database6.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        user.User[] userArray32 = new user.User[] {};
        java.util.ArrayList<user.User> userList33 = new java.util.ArrayList<user.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<user.User>) userList33, userArray32);
        database31.users = userList33;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database31.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        java.util.ArrayList<user.User> userList43 = database41.users;
        database.Database database45 = database.Database.getInstance("hi!");
        user.User[] userArray46 = new user.User[] {};
        java.util.ArrayList<user.User> userList47 = new java.util.ArrayList<user.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<user.User>) userList47, userArray46);
        database45.users = userList47;
        database41.users = userList47;
        database31.users = userList47;
        database6.users = userList47;
        database1.users = userList47;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(database20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertArrayEquals(userArray32, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertArrayEquals(userArray46, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList10 = null;
        database1.users = userList10;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList14 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.iterator()\" because \"this.users\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNull(userList14);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList13 = database1.users;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList18 = database1.users;
        java.util.ArrayList<user.User> userList19 = database1.users;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) '4');
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) ' ');
        parking.ParkingSpot parkingSpot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) '#');
        java.lang.Class<?> wildcardClass23 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        database.Database database1 = database.Database.getInstance("hi!");
        database.Database database3 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList4 = database3.users;
        java.util.ArrayList<user.User> userList5 = database3.users;
        java.util.ArrayList<user.User> userList6 = database3.users;
        database3.load("hi!");
        database.Database database10 = database.Database.getInstance("");
        database.Database database12 = database.Database.getInstance("hi!");
        user.User[] userArray13 = new user.User[] {};
        java.util.ArrayList<user.User> userList14 = new java.util.ArrayList<user.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<user.User>) userList14, userArray13);
        database12.users = userList14;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database12.users = userList19;
        database10.users = userList19;
        database3.users = userList19;
        database.Database database24 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList25 = database24.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database24.users = userList28;
        java.util.ArrayList<user.User> userList30 = database24.users;
        java.util.ArrayList<user.User> userList31 = database24.users;
        database3.users = userList31;
        database1.users = userList31;
        database1.update("hi!");
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertArrayEquals(userArray13, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (short) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (short) 10);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot((int) 'a');
        parking.ParkingSpot parkingSpot21 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database1.load("hi!");
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList17 = database1.users;
        database.Database database19 = database.Database.getInstance("");
        database.Database database21 = database.Database.getInstance("hi!");
        user.User[] userArray22 = new user.User[] {};
        java.util.ArrayList<user.User> userList23 = new java.util.ArrayList<user.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<user.User>) userList23, userArray22);
        database21.users = userList23;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database21.users = userList28;
        database19.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database32.users = userList36;
        java.util.ArrayList<user.User> userList38 = database32.users;
        java.util.ArrayList<user.User> userList39 = database32.users;
        database32.load("hi!");
        java.util.ArrayList<user.User> userList42 = database32.users;
        database19.users = userList42;
        database19.load("hi!");
        database.Database database47 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList48 = database47.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database47.users = userList51;
        java.util.ArrayList<user.User> userList53 = database47.users;
        database47.load("hi!");
        java.util.ArrayList<user.User> userList56 = database47.users;
        database19.users = userList56;
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database59.users = userList66;
        database.Database database69 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList70 = database69.users;
        java.util.ArrayList<user.User> userList71 = database69.users;
        database.Database database73 = database.Database.getInstance("hi!");
        user.User[] userArray74 = new user.User[] {};
        java.util.ArrayList<user.User> userList75 = new java.util.ArrayList<user.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<user.User>) userList75, userArray74);
        database73.users = userList75;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database73.users = userList80;
        database69.users = userList80;
        database69.load("hi!");
        java.util.ArrayList<user.User> userList85 = database69.users;
        database69.load("hi!");
        java.util.ArrayList<user.User> userList88 = database69.users;
        database59.users = userList88;
        database19.users = userList88;
        database1.users = userList88;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertArrayEquals(userArray22, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database73);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertArrayEquals(userArray74, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList85);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(10);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot(100);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        database.Database database1 = database.Database.getInstance("");
        database.Database database3 = database.Database.getInstance("hi!");
        user.User[] userArray4 = new user.User[] {};
        java.util.ArrayList<user.User> userList5 = new java.util.ArrayList<user.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<user.User>) userList5, userArray4);
        database3.users = userList5;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database3.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList15 = database14.users;
        database.Database database17 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList18 = database17.users;
        database14.users = userList18;
        java.util.ArrayList<user.User> userList20 = database14.users;
        java.util.ArrayList<user.User> userList21 = database14.users;
        database14.load("hi!");
        java.util.ArrayList<user.User> userList24 = database14.users;
        database1.users = userList24;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList28 = database1.users;
        java.util.ArrayList<user.User> userList29 = database1.users;
        java.util.ArrayList<user.User> userList30 = database1.users;
        java.util.ArrayList<user.User> userList31 = database1.users;
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        database33.load("hi!");
        java.util.ArrayList<user.User> userList42 = database33.users;
        database.Database database44 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList45 = database44.users;
        java.util.ArrayList<user.User> userList46 = database44.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        java.util.ArrayList<user.User> userList50 = database48.users;
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database48.users = userList54;
        database44.users = userList54;
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        database.Database database74 = database.Database.getInstance("hi!");
        user.User[] userArray75 = new user.User[] {};
        java.util.ArrayList<user.User> userList76 = new java.util.ArrayList<user.User>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<user.User>) userList76, userArray75);
        database74.users = userList76;
        database70.users = userList76;
        database60.users = userList76;
        database44.users = userList76;
        database33.users = userList76;
        database1.users = userList76;
        java.lang.Class<?> wildcardClass84 = database1.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(database3);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertArrayEquals(userArray4, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userArray75);
        org.junit.Assert.assertArrayEquals(userArray75, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database1.load("hi!");
        database.Database database8 = database.Database.getInstance("");
        database.Database database10 = database.Database.getInstance("hi!");
        user.User[] userArray11 = new user.User[] {};
        java.util.ArrayList<user.User> userList12 = new java.util.ArrayList<user.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<user.User>) userList12, userArray11);
        database10.users = userList12;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database10.users = userList17;
        database8.users = userList17;
        database1.users = userList17;
        database.Database database22 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database.Database database32 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList33 = database32.users;
        database26.users = userList33;
        database22.users = userList33;
        database22.load("hi!");
        java.util.ArrayList<user.User> userList38 = database22.users;
        database1.users = userList38;
        database.Database database41 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList42 = database41.users;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database41.users = userList45;
        java.util.ArrayList<user.User> userList47 = database41.users;
        java.util.ArrayList<user.User> userList48 = database41.users;
        java.util.ArrayList<user.User> userList49 = database41.users;
        database.Database database51 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList52 = database51.users;
        java.util.ArrayList<user.User> userList53 = database51.users;
        database.Database database55 = database.Database.getInstance("hi!");
        user.User[] userArray56 = new user.User[] {};
        java.util.ArrayList<user.User> userList57 = new java.util.ArrayList<user.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<user.User>) userList57, userArray56);
        database55.users = userList57;
        database51.users = userList57;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database62.users = userList66;
        java.util.ArrayList<user.User> userList68 = database62.users;
        java.util.ArrayList<user.User> userList69 = database62.users;
        database51.users = userList69;
        java.util.ArrayList<user.User> userList71 = database51.users;
        java.util.ArrayList<user.User> userList72 = database51.users;
        database41.users = userList72;
        database1.users = userList72;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertArrayEquals(userArray11, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(database51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertArrayEquals(userArray56, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '4');
        java.lang.Class<?> wildcardClass13 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList7 = database6.users;
        java.util.ArrayList<user.User> userList8 = database6.users;
        java.util.ArrayList<user.User> userList9 = database6.users;
        database6.load("hi!");
        database.Database database13 = database.Database.getInstance("");
        database.Database database15 = database.Database.getInstance("hi!");
        user.User[] userArray16 = new user.User[] {};
        java.util.ArrayList<user.User> userList17 = new java.util.ArrayList<user.User>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<user.User>) userList17, userArray16);
        database15.users = userList17;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database15.users = userList22;
        database13.users = userList22;
        database6.users = userList22;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        database.Database database30 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList31 = database30.users;
        database27.users = userList31;
        java.util.ArrayList<user.User> userList33 = database27.users;
        java.util.ArrayList<user.User> userList34 = database27.users;
        database6.users = userList34;
        database1.users = userList34;
        database1.update("hi!");
        database1.update("hi!");
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userArray16);
        org.junit.Assert.assertArrayEquals(userArray16, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database1.update("hi!");
        database.Database database33 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList34 = database33.users;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database33.users = userList37;
        java.util.ArrayList<user.User> userList39 = database33.users;
        java.util.ArrayList<user.User> userList40 = database33.users;
        java.util.ArrayList<user.User> userList41 = database33.users;
        database.Database database43 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList44 = database43.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        database43.users = userList47;
        java.util.ArrayList<user.User> userList49 = database43.users;
        database43.update("hi!");
        java.util.ArrayList<user.User> userList52 = database43.users;
        database33.users = userList52;
        database33.update("hi!");
        java.util.ArrayList<user.User> userList56 = database33.users;
        java.util.ArrayList<user.User> userList57 = database33.users;
        database1.users = userList57;
        java.lang.Class<?> wildcardClass59 = userList57.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        database.Database database28 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList29 = database28.users;
        database25.users = userList29;
        java.util.ArrayList<user.User> userList31 = database25.users;
        java.util.ArrayList<user.User> userList32 = database25.users;
        database25.load("hi!");
        user.User[] userArray35 = new user.User[] {};
        java.util.ArrayList<user.User> userList36 = new java.util.ArrayList<user.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<user.User>) userList36, userArray35);
        database25.users = userList36;
        database1.users = userList36;
        java.util.ArrayList<user.User> userList40 = database1.users;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList43 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertArrayEquals(userArray35, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList43);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((-1));
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot9 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database.Database database11 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList12 = database11.users;
        database5.users = userList12;
        database1.users = userList12;
        java.util.ArrayList<user.User> userList15 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList15);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = parkingSpot10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList40 = database1.users;
        java.util.ArrayList<user.User> userList41 = database1.users;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList44 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList44);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database1.load("hi!");
        java.util.ArrayList<user.User> userList16 = database1.users;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList16);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        database.Database database8 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList9 = database8.users;
        java.util.ArrayList<user.User> userList10 = database8.users;
        java.util.ArrayList<user.User> userList11 = database8.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database.Database database16 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList17 = database16.users;
        database13.users = userList17;
        database8.users = userList17;
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        database.Database database25 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("hi!");
        user.User[] userArray30 = new user.User[] {};
        java.util.ArrayList<user.User> userList31 = new java.util.ArrayList<user.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<user.User>) userList31, userArray30);
        database29.users = userList31;
        database25.users = userList31;
        database21.users = userList31;
        database8.users = userList31;
        database1.users = userList31;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        database.Database database43 = database.Database.getInstance("hi!");
        user.User[] userArray44 = new user.User[] {};
        java.util.ArrayList<user.User> userList45 = new java.util.ArrayList<user.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<user.User>) userList45, userArray44);
        database43.users = userList45;
        database.Database database49 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList50 = database49.users;
        database43.users = userList50;
        database39.users = userList50;
        database1.users = userList50;
        database1.update("hi!");
        java.util.ArrayList<user.User> userList56 = database1.users;
        database.Database database58 = database.Database.getInstance("");
        database.Database database60 = database.Database.getInstance("hi!");
        user.User[] userArray61 = new user.User[] {};
        java.util.ArrayList<user.User> userList62 = new java.util.ArrayList<user.User>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<user.User>) userList62, userArray61);
        database60.users = userList62;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database60.users = userList67;
        database58.users = userList67;
        database.Database database71 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList72 = database71.users;
        database.Database database74 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList75 = database74.users;
        database71.users = userList75;
        java.util.ArrayList<user.User> userList77 = database71.users;
        java.util.ArrayList<user.User> userList78 = database71.users;
        database71.load("hi!");
        java.util.ArrayList<user.User> userList81 = database71.users;
        database58.users = userList81;
        database1.users = userList81;
        database.Database database85 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList86 = database85.users;
        java.util.ArrayList<user.User> userList87 = database85.users;
        java.util.ArrayList<user.User> userList88 = database85.users;
        database85.update("hi!");
        java.util.ArrayList<user.User> userList91 = database85.users;
        database1.users = userList91;
        java.util.ArrayList<user.User> userList93 = database1.users;
        java.util.ArrayList<user.User> userList94 = database1.users;
        java.util.ArrayList<user.User> userList95 = database1.users;
        java.lang.Class<?> wildcardClass96 = userList95.getClass();
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(database8);
        org.junit.Assert.assertNotNull(userList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertArrayEquals(userArray30, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(database43);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertArrayEquals(userArray44, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(database49);
        org.junit.Assert.assertNotNull(userList50);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userArray61);
        org.junit.Assert.assertArrayEquals(userArray61, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(database71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(database85);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot((int) (byte) -1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            databaseSingleton0.saveParkingSpot(parkingSpot15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"parking.ParkingSpot.getId()\" because \"spot\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (byte) 100);
        parking.ParkingSpot parkingSpot8 = databaseSingleton0.getParkingSpot(100);
        parking.ParkingSpot parkingSpot10 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot12 = databaseSingleton0.getParkingSpot((int) (short) 100);
        parking.ParkingSpot parkingSpot14 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot16 = databaseSingleton0.getParkingSpot((int) (byte) 1);
        parking.ParkingSpot parkingSpot18 = databaseSingleton0.getParkingSpot(1);
        parking.ParkingSpot parkingSpot20 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot22 = databaseSingleton0.getParkingSpot((int) ' ');
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNull(parkingSpot8);
        org.junit.Assert.assertNull(parkingSpot10);
        org.junit.Assert.assertNull(parkingSpot12);
        org.junit.Assert.assertNull(parkingSpot14);
        org.junit.Assert.assertNull(parkingSpot16);
        org.junit.Assert.assertNull(parkingSpot18);
        org.junit.Assert.assertNull(parkingSpot20);
        org.junit.Assert.assertNull(parkingSpot22);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        java.util.ArrayList<user.User> userList16 = database1.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database.Database database21 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList22 = database21.users;
        database18.users = userList22;
        java.util.ArrayList<user.User> userList24 = database18.users;
        java.util.ArrayList<user.User> userList25 = database18.users;
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        java.util.ArrayList<user.User> userList30 = database27.users;
        database18.users = userList30;
        database1.users = userList30;
        database.Database database34 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList35 = database34.users;
        java.util.ArrayList<user.User> userList36 = database34.users;
        database.Database database38 = database.Database.getInstance("hi!");
        user.User[] userArray39 = new user.User[] {};
        java.util.ArrayList<user.User> userList40 = new java.util.ArrayList<user.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<user.User>) userList40, userArray39);
        database38.users = userList40;
        database.Database database44 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList45 = database44.users;
        database38.users = userList45;
        database34.users = userList45;
        java.util.ArrayList<user.User> userList48 = database34.users;
        database.Database database50 = database.Database.getInstance("");
        database.Database database52 = database.Database.getInstance("hi!");
        user.User[] userArray53 = new user.User[] {};
        java.util.ArrayList<user.User> userList54 = new java.util.ArrayList<user.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<user.User>) userList54, userArray53);
        database52.users = userList54;
        database.Database database58 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList59 = database58.users;
        database52.users = userList59;
        database50.users = userList59;
        database.Database database63 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList64 = database63.users;
        database.Database database66 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList67 = database66.users;
        database63.users = userList67;
        java.util.ArrayList<user.User> userList69 = database63.users;
        java.util.ArrayList<user.User> userList70 = database63.users;
        database63.load("hi!");
        java.util.ArrayList<user.User> userList73 = database63.users;
        database50.users = userList73;
        database50.load("hi!");
        database.Database database78 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList79 = database78.users;
        database.Database database81 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList82 = database81.users;
        database78.users = userList82;
        java.util.ArrayList<user.User> userList84 = database78.users;
        database78.load("hi!");
        java.util.ArrayList<user.User> userList87 = database78.users;
        database50.users = userList87;
        database50.load("hi!");
        java.util.ArrayList<user.User> userList91 = database50.users;
        database34.users = userList91;
        database1.users = userList91;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertArrayEquals(userArray39, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(database44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(database52);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertArrayEquals(userArray53, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(database58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(database66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(database78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertNotNull(database81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList91);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        java.util.ArrayList<user.User> userList8 = database5.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database10.users = userList14;
        database5.users = userList14;
        database.Database database18 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList23 = database22.users;
        java.util.ArrayList<user.User> userList24 = database22.users;
        database.Database database26 = database.Database.getInstance("hi!");
        user.User[] userArray27 = new user.User[] {};
        java.util.ArrayList<user.User> userList28 = new java.util.ArrayList<user.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<user.User>) userList28, userArray27);
        database26.users = userList28;
        database22.users = userList28;
        database18.users = userList28;
        database5.users = userList28;
        database.Database database35 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList36 = database35.users;
        database.Database database38 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList39 = database38.users;
        database35.users = userList39;
        database5.users = userList39;
        java.util.ArrayList<user.User> userList42 = database5.users;
        database1.users = userList42;
        database.Database database45 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList46 = database45.users;
        java.util.ArrayList<user.User> userList47 = database45.users;
        java.util.ArrayList<user.User> userList48 = database45.users;
        database.Database database50 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList51 = database50.users;
        database.Database database53 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList54 = database53.users;
        database50.users = userList54;
        database45.users = userList54;
        java.util.ArrayList<user.User> userList57 = database45.users;
        database1.users = userList57;
        database.Database database60 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList61 = database60.users;
        java.util.ArrayList<user.User> userList62 = database60.users;
        java.util.ArrayList<user.User> userList63 = database60.users;
        database60.update("hi!");
        database.Database database67 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList68 = database67.users;
        java.util.ArrayList<user.User> userList69 = database67.users;
        java.util.ArrayList<user.User> userList70 = database67.users;
        database67.load("hi!");
        database.Database database74 = database.Database.getInstance("");
        database.Database database76 = database.Database.getInstance("hi!");
        user.User[] userArray77 = new user.User[] {};
        java.util.ArrayList<user.User> userList78 = new java.util.ArrayList<user.User>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<user.User>) userList78, userArray77);
        database76.users = userList78;
        database.Database database82 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList83 = database82.users;
        database76.users = userList83;
        database74.users = userList83;
        database67.users = userList83;
        database60.users = userList83;
        database1.users = userList83;
        java.util.ArrayList<user.User> userList89 = database1.users;
        database1.load("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userList6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database26);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertArrayEquals(userArray27, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(database35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(database38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(database53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(database60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(database74);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userArray77);
        org.junit.Assert.assertArrayEquals(userArray77, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(database82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList89);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        database29.users = userList63;
        java.util.ArrayList<user.User> userList66 = database29.users;
        database25.users = userList66;
        database1.users = userList66;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        java.util.ArrayList<user.User> userList73 = database70.users;
        database70.load("hi!");
        database70.load("hi!");
        java.util.ArrayList<user.User> userList78 = database70.users;
        database1.users = userList78;
        // The following exception was thrown during execution in test generation
        try {
            database1.load("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList78);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        database.Database database1 = database.Database.getInstance("hi!");
        user.User[] userArray2 = new user.User[] {};
        java.util.ArrayList<user.User> userList3 = new java.util.ArrayList<user.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<user.User>) userList3, userArray2);
        database1.users = userList3;
        database.Database database7 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList8 = database7.users;
        database.Database database10 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList11 = database10.users;
        database7.users = userList11;
        database1.users = userList11;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        database15.users = userList19;
        java.util.ArrayList<user.User> userList21 = database15.users;
        database15.load("hi!");
        database15.update("hi!");
        database.Database database27 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList28 = database27.users;
        java.util.ArrayList<user.User> userList29 = database27.users;
        database15.users = userList29;
        database1.users = userList29;
        java.util.ArrayList<user.User> userList32 = database1.users;
        database1.load("hi!");
        database.Database database36 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList37 = database36.users;
        java.util.ArrayList<user.User> userList38 = database36.users;
        database.Database database40 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList41 = database40.users;
        java.util.ArrayList<user.User> userList42 = database40.users;
        java.util.ArrayList<user.User> userList43 = database40.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database.Database database48 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList49 = database48.users;
        database45.users = userList49;
        database40.users = userList49;
        database40.update("hi!");
        java.util.ArrayList<user.User> userList54 = database40.users;
        database36.users = userList54;
        database36.load("hi!");
        database.Database database59 = database.Database.getInstance("hi!");
        user.User[] userArray60 = new user.User[] {};
        java.util.ArrayList<user.User> userList61 = new java.util.ArrayList<user.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<user.User>) userList61, userArray60);
        database59.users = userList61;
        database.Database database65 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList66 = database65.users;
        database.Database database68 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList69 = database68.users;
        database65.users = userList69;
        database59.users = userList69;
        java.util.ArrayList<user.User> userList72 = null;
        database59.users = userList72;
        database.Database database75 = database.Database.getInstance("hi!");
        user.User[] userArray76 = new user.User[] {};
        java.util.ArrayList<user.User> userList77 = new java.util.ArrayList<user.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<user.User>) userList77, userArray76);
        database75.users = userList77;
        database59.users = userList77;
        database36.users = userList77;
        database1.users = userList77;
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertArrayEquals(userArray2, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userList8);
        org.junit.Assert.assertNotNull(database10);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertArrayEquals(userArray60, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(database65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(database75);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertArrayEquals(userArray76, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        java.util.ArrayList<user.User> userList11 = database1.users;
        java.util.ArrayList<user.User> userList12 = database1.users;
        java.util.ArrayList<user.User> userList13 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userList11);
        org.junit.Assert.assertNotNull(userList12);
        org.junit.Assert.assertNotNull(userList13);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot((int) (short) 1);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) (byte) 0);
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        java.lang.Class<?> wildcardClass7 = databaseSingleton0.getClass();
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database1.update("hi!");
        database.Database database7 = database.Database.getInstance("hi!");
        user.User[] userArray8 = new user.User[] {};
        java.util.ArrayList<user.User> userList9 = new java.util.ArrayList<user.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<user.User>) userList9, userArray8);
        database7.users = userList9;
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        database7.users = userList14;
        database.Database database17 = database.Database.getInstance("hi!");
        user.User[] userArray18 = new user.User[] {};
        java.util.ArrayList<user.User> userList19 = new java.util.ArrayList<user.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<user.User>) userList19, userArray18);
        database17.users = userList19;
        database.Database database23 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList24 = database23.users;
        database17.users = userList24;
        database7.users = userList24;
        java.util.ArrayList<user.User> userList27 = database7.users;
        database7.load("hi!");
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database7.users = userList35;
        database.Database database39 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList40 = database39.users;
        java.util.ArrayList<user.User> userList41 = database39.users;
        java.util.ArrayList<user.User> userList42 = database39.users;
        database39.load("hi!");
        database.Database database46 = database.Database.getInstance("");
        database.Database database48 = database.Database.getInstance("hi!");
        user.User[] userArray49 = new user.User[] {};
        java.util.ArrayList<user.User> userList50 = new java.util.ArrayList<user.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<user.User>) userList50, userArray49);
        database48.users = userList50;
        database.Database database54 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList55 = database54.users;
        database48.users = userList55;
        database46.users = userList55;
        database39.users = userList55;
        java.util.ArrayList<user.User> userList59 = database39.users;
        database.Database database61 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList62 = database61.users;
        java.util.ArrayList<user.User> userList63 = database61.users;
        java.util.ArrayList<user.User> userList64 = database61.users;
        java.util.ArrayList<user.User> userList65 = database61.users;
        database.Database database67 = database.Database.getInstance("hi!");
        user.User[] userArray68 = new user.User[] {};
        java.util.ArrayList<user.User> userList69 = new java.util.ArrayList<user.User>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<user.User>) userList69, userArray68);
        database67.users = userList69;
        database61.users = userList69;
        database39.users = userList69;
        database7.users = userList69;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database7.users = userList77;
        database1.users = userList77;
        database1.load("hi!");
        database1.load("hi!");
        java.util.ArrayList<user.User> userList84 = database1.users;
        java.util.ArrayList<user.User> userList85 = database1.users;
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database7);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertArrayEquals(userArray8, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(database17);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertArrayEquals(userArray18, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(database23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(database48);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertArrayEquals(userArray49, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(database54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(database61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userList65);
        org.junit.Assert.assertNotNull(database67);
        org.junit.Assert.assertNotNull(userArray68);
        org.junit.Assert.assertArrayEquals(userArray68, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList84);
        org.junit.Assert.assertNotNull(userList85);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        user.User[] userArray6 = new user.User[] {};
        java.util.ArrayList<user.User> userList7 = new java.util.ArrayList<user.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<user.User>) userList7, userArray6);
        database5.users = userList7;
        database1.users = userList7;
        database.Database database12 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList13 = database12.users;
        database.Database database15 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList16 = database15.users;
        database12.users = userList16;
        java.util.ArrayList<user.User> userList18 = database12.users;
        java.util.ArrayList<user.User> userList19 = database12.users;
        database1.users = userList19;
        java.util.ArrayList<user.User> userList21 = database1.users;
        database1.load("hi!");
        database.Database database25 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList26 = database25.users;
        java.util.ArrayList<user.User> userList27 = database25.users;
        database.Database database29 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList30 = database29.users;
        java.util.ArrayList<user.User> userList31 = database29.users;
        java.util.ArrayList<user.User> userList32 = database29.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database.Database database37 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList38 = database37.users;
        database34.users = userList38;
        database29.users = userList38;
        database.Database database42 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList43 = database42.users;
        java.util.ArrayList<user.User> userList44 = database42.users;
        database.Database database46 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList47 = database46.users;
        java.util.ArrayList<user.User> userList48 = database46.users;
        database.Database database50 = database.Database.getInstance("hi!");
        user.User[] userArray51 = new user.User[] {};
        java.util.ArrayList<user.User> userList52 = new java.util.ArrayList<user.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<user.User>) userList52, userArray51);
        database50.users = userList52;
        database46.users = userList52;
        database42.users = userList52;
        database29.users = userList52;
        database.Database database59 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList60 = database59.users;
        database.Database database62 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList63 = database62.users;
        database59.users = userList63;
        database29.users = userList63;
        java.util.ArrayList<user.User> userList66 = database29.users;
        database25.users = userList66;
        database1.users = userList66;
        database.Database database70 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList71 = database70.users;
        java.util.ArrayList<user.User> userList72 = database70.users;
        java.util.ArrayList<user.User> userList73 = database70.users;
        database70.load("hi!");
        database70.load("hi!");
        java.util.ArrayList<user.User> userList78 = database70.users;
        database1.users = userList78;
        java.util.ArrayList<user.User> userList80 = null;
        database1.users = userList80;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertArrayEquals(userArray6, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(database12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(database15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(database25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(database29);
        org.junit.Assert.assertNotNull(userList30);
        org.junit.Assert.assertNotNull(userList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(database37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(database46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(database50);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertArrayEquals(userArray51, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(database59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertNotNull(userList73);
        org.junit.Assert.assertNotNull(userList78);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        database.Database database5 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList6 = database5.users;
        java.util.ArrayList<user.User> userList7 = database5.users;
        database.Database database9 = database.Database.getInstance("hi!");
        user.User[] userArray10 = new user.User[] {};
        java.util.ArrayList<user.User> userList11 = new java.util.ArrayList<user.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<user.User>) userList11, userArray10);
        database9.users = userList11;
        database5.users = userList11;
        database1.users = userList11;
        database1.update("hi!");
        database1.update("hi!");
        database.Database database21 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList22 = database21.users;
        java.util.ArrayList<user.User> userList23 = database21.users;
        java.util.ArrayList<user.User> userList24 = database21.users;
        database21.load("hi!");
        database.Database database28 = database.Database.getInstance("");
        database.Database database30 = database.Database.getInstance("hi!");
        user.User[] userArray31 = new user.User[] {};
        java.util.ArrayList<user.User> userList32 = new java.util.ArrayList<user.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<user.User>) userList32, userArray31);
        database30.users = userList32;
        database.Database database36 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList37 = database36.users;
        database30.users = userList37;
        database28.users = userList37;
        database21.users = userList37;
        database.Database database42 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList43 = database42.users;
        database.Database database45 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList46 = database45.users;
        database42.users = userList46;
        java.util.ArrayList<user.User> userList48 = database42.users;
        java.util.ArrayList<user.User> userList49 = database42.users;
        database42.load("hi!");
        java.util.ArrayList<user.User> userList52 = database42.users;
        database21.users = userList52;
        database.Database database55 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList56 = database55.users;
        java.util.ArrayList<user.User> userList57 = database55.users;
        java.util.ArrayList<user.User> userList58 = database55.users;
        database55.load("hi!");
        database.Database database62 = database.Database.getInstance("");
        database.Database database64 = database.Database.getInstance("hi!");
        user.User[] userArray65 = new user.User[] {};
        java.util.ArrayList<user.User> userList66 = new java.util.ArrayList<user.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<user.User>) userList66, userArray65);
        database64.users = userList66;
        database.Database database70 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList71 = database70.users;
        database64.users = userList71;
        database62.users = userList71;
        database55.users = userList71;
        database.Database database76 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList77 = database76.users;
        database.Database database79 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList80 = database79.users;
        database76.users = userList80;
        java.util.ArrayList<user.User> userList82 = database76.users;
        java.util.ArrayList<user.User> userList83 = database76.users;
        database76.load("hi!");
        java.util.ArrayList<user.User> userList86 = database76.users;
        database55.users = userList86;
        java.util.ArrayList<user.User> userList88 = database55.users;
        database21.users = userList88;
        database1.users = userList88;
        database1.update("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNull(userList2);
        org.junit.Assert.assertNull(userList3);
        org.junit.Assert.assertNotNull(database5);
        org.junit.Assert.assertNull(userList6);
        org.junit.Assert.assertNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertArrayEquals(userArray10, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(database21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(database28);
        org.junit.Assert.assertNotNull(database30);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertArrayEquals(userArray31, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(database36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(database42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(database45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(database55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(database62);
        org.junit.Assert.assertNotNull(database64);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertArrayEquals(userArray65, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(database70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(database76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(database79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(userList86);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        database.Database database1 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList2 = database1.users;
        java.util.ArrayList<user.User> userList3 = database1.users;
        java.util.ArrayList<user.User> userList4 = database1.users;
        database.Database database6 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList7 = database6.users;
        database.Database database9 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList10 = database9.users;
        database6.users = userList10;
        database1.users = userList10;
        database.Database database14 = database.Database.getInstance("");
        java.util.ArrayList<user.User> userList15 = database14.users;
        java.util.ArrayList<user.User> userList16 = database14.users;
        database.Database database18 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList19 = database18.users;
        java.util.ArrayList<user.User> userList20 = database18.users;
        database.Database database22 = database.Database.getInstance("hi!");
        user.User[] userArray23 = new user.User[] {};
        java.util.ArrayList<user.User> userList24 = new java.util.ArrayList<user.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<user.User>) userList24, userArray23);
        database22.users = userList24;
        database18.users = userList24;
        database14.users = userList24;
        database1.users = userList24;
        database.Database database31 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList32 = database31.users;
        database.Database database34 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList35 = database34.users;
        database31.users = userList35;
        database1.users = userList35;
        java.util.ArrayList<user.User> userList38 = database1.users;
        database1.load("hi!");
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(userList3);
        org.junit.Assert.assertNotNull(userList4);
        org.junit.Assert.assertNotNull(database6);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(database14);
        org.junit.Assert.assertNotNull(userList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(database18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(userList20);
        org.junit.Assert.assertNotNull(database22);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertArrayEquals(userArray23, new user.User[] {});
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(database31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(database34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        database.DatabaseSingleton databaseSingleton0 = database.DatabaseSingleton.getInstance();
        parking.ParkingSpot parkingSpot2 = databaseSingleton0.getParkingSpot(0);
        parking.ParkingSpot parkingSpot4 = databaseSingleton0.getParkingSpot((int) '#');
        parking.ParkingSpot parkingSpot6 = databaseSingleton0.getParkingSpot((int) (short) 10);
        org.junit.Assert.assertNotNull(databaseSingleton0);
        org.junit.Assert.assertNull(parkingSpot2);
        org.junit.Assert.assertNull(parkingSpot4);
        org.junit.Assert.assertNull(parkingSpot6);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        database.Database database1 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList2 = database1.users;
        database.Database database4 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList5 = database4.users;
        database1.users = userList5;
        java.util.ArrayList<user.User> userList7 = database1.users;
        database1.load("hi!");
        database1.update("hi!");
        database.Database database13 = database.Database.getInstance("hi!");
        java.util.ArrayList<user.User> userList14 = database13.users;
        java.util.ArrayList<user.User> userList15 = database13.users;
        database1.users = userList15;
        database1.update("hi!");
        // The following exception was thrown during execution in test generation
        try {
            database1.update("");
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:  (Cannot create a file when that file already exists)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(database1);
        org.junit.Assert.assertNotNull(userList2);
        org.junit.Assert.assertNotNull(database4);
        org.junit.Assert.assertNotNull(userList5);
        org.junit.Assert.assertNotNull(userList7);
        org.junit.Assert.assertNotNull(database13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(userList15);
    }
}
